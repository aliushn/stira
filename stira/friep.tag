<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>index</name>
    <title>STIRA (old name FRIEP) Simple Toolkit for Image Restoration and Analysis</title>
    <filename>index</filename>
  </compound>
  <compound kind="struct">
    <name>AggInfo</name>
    <filename>structAggInfo.html</filename>
    <class kind="struct">AggInfo::AggInfo_col</class>
    <class kind="struct">AggInfo::AggInfo_func</class>
    <member kind="variable">
      <type>u8</type>
      <name>directMode</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>aaa57d294016ac7e17e7cacaa7b25634e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>useSortingIdx</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a8173a7ea13c4a12ce4befbcb40719073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sortingIdx</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a97ce74f509ca908a616c123e7196797b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExprList *</type>
      <name>pGroupBy</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>aa8e942103d224c4db847743670907781</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nSortingColumn</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a89925dccd1a0ec51d2a5a5dbaead66dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct AggInfo::AggInfo_col *</type>
      <name>aCol</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a52fa1a7eb3145c27be13b2bcccd57d62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nColumn</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a9cbfa5fc33328cf3500426674e036a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nColumnAlloc</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a2d826c17800c21fd27952545993227c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nAccumulator</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>ad2251760d95af9024f0a3170405cb53b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct AggInfo::AggInfo_func *</type>
      <name>aFunc</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a4e201acd6a1f8aed360c58e45f47c803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nFunc</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a5bfde7ca00d28da6edbda523ab038e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nFuncAlloc</name>
      <anchorfile>structAggInfo.html</anchorfile>
      <anchor>a97c3bcfc404c3b328242c7698adacd05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AggInfo::AggInfo_col</name>
    <filename>structAggInfo_1_1AggInfo__col.html</filename>
    <member kind="variable">
      <type>Table *</type>
      <name>pTab</name>
      <anchorfile>structAggInfo_1_1AggInfo__col.html</anchorfile>
      <anchor>ad2f2ae137b49e72d28a57accc9d06386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iTable</name>
      <anchorfile>structAggInfo_1_1AggInfo__col.html</anchorfile>
      <anchor>ab49aa2fbfc6278c86b64497a6807c113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iColumn</name>
      <anchorfile>structAggInfo_1_1AggInfo__col.html</anchorfile>
      <anchor>a4cad2ce99ddf7425d358d49e40524f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iSorterColumn</name>
      <anchorfile>structAggInfo_1_1AggInfo__col.html</anchorfile>
      <anchor>ae3901ad0d5b6d519a7559358f1f7248b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iMem</name>
      <anchorfile>structAggInfo_1_1AggInfo__col.html</anchorfile>
      <anchor>ae22f3dfc6f9c2dc647be1b9fbd14e896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pExpr</name>
      <anchorfile>structAggInfo_1_1AggInfo__col.html</anchorfile>
      <anchor>a60f23ec0abfcc88cab7083967a3abd9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AggInfo::AggInfo_func</name>
    <filename>structAggInfo_1_1AggInfo__func.html</filename>
    <member kind="variable">
      <type>Expr *</type>
      <name>pExpr</name>
      <anchorfile>structAggInfo_1_1AggInfo__func.html</anchorfile>
      <anchor>a7b92e1c42e60d44e28ebf695316f4018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FuncDef *</type>
      <name>pFunc</name>
      <anchorfile>structAggInfo_1_1AggInfo__func.html</anchorfile>
      <anchor>a840478e8ec53cefa57b50228f6fdafe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iMem</name>
      <anchorfile>structAggInfo_1_1AggInfo__func.html</anchorfile>
      <anchor>a41a8da36555c37fffc65f1acead49a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iDistinct</name>
      <anchorfile>structAggInfo_1_1AggInfo__func.html</anchorfile>
      <anchor>a4a82635b0116eb44ec8ca9e47cc509d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>analysisInfo</name>
    <filename>structanalysisInfo.html</filename>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structanalysisInfo.html</anchorfile>
      <anchor>a13108eadc55ffe73a8825fb91cc0f9b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zDatabase</name>
      <anchorfile>structanalysisInfo.html</anchorfile>
      <anchor>accbe3c1f5613ffa13b9578e58a5d850a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AttachKey</name>
    <filename>structAttachKey.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>structAttachKey.html</anchorfile>
      <anchor>acd780bfae7415a79a90fa5ceb41515cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Token</type>
      <name>key</name>
      <anchorfile>structAttachKey.html</anchorfile>
      <anchor>a267449f11a142a3b88c54aa01f842ad0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AuthContext</name>
    <filename>structAuthContext.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>zAuthContext</name>
      <anchorfile>structAuthContext.html</anchorfile>
      <anchor>a1b095b152b72326476ac3f7edcaee78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Parse *</type>
      <name>pParse</name>
      <anchorfile>structAuthContext.html</anchorfile>
      <anchor>a8df2931d8f4facf59073c92315b00bfa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AutoincInfo</name>
    <filename>structAutoincInfo.html</filename>
    <member kind="variable">
      <type>AutoincInfo *</type>
      <name>pNext</name>
      <anchorfile>structAutoincInfo.html</anchorfile>
      <anchor>aa77fb076beea013c25df4e49dba4b6f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pTab</name>
      <anchorfile>structAutoincInfo.html</anchorfile>
      <anchor>a0cf785b0cbaddb4215a8408f8e13075e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iDb</name>
      <anchorfile>structAutoincInfo.html</anchorfile>
      <anchor>ae7234e0916b11ef97377bdfd6c7c4568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>regCtr</name>
      <anchorfile>structAutoincInfo.html</anchorfile>
      <anchor>af180977ee7dcc8cab862185692f57cc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BatchParameters</name>
    <filename>classBatchParameters.html</filename>
    <member kind="function">
      <type></type>
      <name>BatchParameters</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>afd29e630b7a245c521022857a8101e96</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetFilePath</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a3f5cf9d092953a9fb44de6153b9fe7ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetBaseName</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a00d14e12daf95e1b4189affcf82cfe93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStartNumber</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ae54abb9e1191e44fd2a1c586a07732bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStopNumber</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a3fce36b986ddc96c2432e9a1aa6283b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLeftX</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>af8d5b3c74ce102268aaeec03e4f7ca21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLeftY</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a60f0b942804da60d62c620824eb3c27f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRightX</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a382ed17883442645b9cb3ca15722a4ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRightY</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ab96c4615045b30e1937a95f9024044f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetWidthROI</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a0e6057203687bb5377ca1adea5a61275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSizeROI</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a61c792aaf249d4e45c452767a1c2872b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAngleTolerance</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a9a82f5344c25afb5b6cb3eec85340749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLabelValue</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a525cf8385b2f6577237cfba393a5eb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBlobMinimumSize</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a66d291df38867f7e1c086aa7ece5497f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFirstLine</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>aa7952ec3c3bdd557c918610252905bb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLastLine</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a18d31d2591f82b476dbcf3da93901e00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BatchParameters</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>acbe4f4a19118d929c6e4289b809650a8</anchor>
      <arglist>(std::string fileNameData, bool showConsoleOutput)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsValid</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>aa3cf0b5499a6568f42af74a133c4a32d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetWriteIntermediateValuesToFile</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a435cc9058571d276a136c295912f1688</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetWriteStatisticsValuesToFile</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>af06737165bee758bfaf0f332af0fa269</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetFileNameForDataSeries</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a952c1580b2942faf6d57b18b1dd76a39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetInputFilePath</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>acc48a57fa4243f4eb742697aa21fe7fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetOutputFilePath</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a51e683e720617c597d1b821f3b95f55e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathAligned</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a43817739059134b48dfa555baf1c74db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathGauss</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>afba8e7a5422f21ae5dc95c2ffd6725a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathContours</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>acd49127391b08bdf5b04daaa7a228659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathTraceTopCurve</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a954b363044140f46593f7f3a10b2a548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathYarnWidth</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>af028b6643fecbd59d466d4dc5dc458a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathCropOrig</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a3459cef378aaae51ad9b5374d27d3c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathRectangle</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ac2dd4a9784d851f07cdb9d9d7dc42514</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathDeltaY</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ad77312da58829aadcc6ff9e8b8394e17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathValues</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a88e3c71ab43da7ea59cca4c1c142c797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathWidthHistogram</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a7f2ae85eda4f5fed18f33da4380a9679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathYCoordinateHistogram</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a8fdde4d88dda6271674ebc6a21300f91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathNormalizedFeatures</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a3893bfc2695c09b59ed557588d1cd5e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPathLocalWidthAndPosition</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ae92273d4846e977c2f0a70c35d846888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetBaseName</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a00d14e12daf95e1b4189affcf82cfe93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetExtension</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ac9122eb5d3b0f99f47e42c5062f83437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>GetFileList</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a62be700a1389e410441b6d82c487d3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FabricSelvedge</type>
      <name>GetFabricSelvedge</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a7ffedd95c314d0d330f00fb1ac0c1822</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStartNrImage</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>aea81e0aed712cf305c0d47aa613d4154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetFirstImageNumber</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a7e1c511fe9ba5b35b3685e83cd9220f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetLastImageNumber</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a00d843fa7d4bab8d4384e6c94e92c970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxNrImages</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>aeeab6b5decea9257502c58d9dbfe372a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsGroundTruthAvailable</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a47ae536f977e93c3eeeaf64913974164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReadRealErrorsFromFile</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a391c16bd216785e9804775bdb4ba5eaf</anchor>
      <arglist>(std::string fileWithRealErrorsFrameNumbers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReadRejectedFramesFromFile</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a4c8caeba5822a5f37530a8b80bbf2014</anchor>
      <arglist>(std::string fileWithRejectedFrameNumbers)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;</type>
      <name>GetRealErrorList</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>aafef8058790bf701dc60da93c30d9e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetApproximateStartY</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ad410fdc638965c6213884e34809eba43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFrameGroundTruthError</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a9a4e152027e8756f7f7b144374f417f3</anchor>
      <arglist>(int frameNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFrameToBeRejected</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>abe6f5591cb8ecda1c9bc98338bc1839b</anchor>
      <arglist>(int frameNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPerformHoleDetection</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a7ed2f1ae071831ae4dacceca075e6839</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCreateIntermediateImages</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ac8cc41c9679f189cf277b8844323daa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCreateLinksForReportImages</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a481faa4b50d09c55d1d9fc47d1644551</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCreateVideo</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a43533c2258ff8362e9ffa8e08ef15970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetWriteDiagnosticFiles</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a6a1f70f24726c0f2c5bede5c9e9067ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetWriteConsoleOutput</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a8d690d0d7c603f9ecaa4cbf156de9a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetWriteProgressToConsole</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a404555922c513e5d5906879ca8bd14cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPerformYarnStraightnessCheck</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a051a08e9d9bdcab3ec02327e2fa98343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPerformYarnStatistics</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ad891bb5704f77827e293af2491090ea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPerformDeltaYCheck</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a1b89fcb363571a119b5a86f0790036c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPerformBranchCheck</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a75c9ce71e657765425add64ee6069d47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPerformGridAlignment</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ac72c4d394ea30b82f38652b1aea451f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPerformGridAlignment</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ad0e95a1f5ec9080823c06c6c9107d038</anchor>
      <arglist>(bool setter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetFileNameForParameters</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a61bb730f048cc21998fc4e19035f2278</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUsePrematchedFilter</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a06eef6c3bfe98a1eddedf4aa52059278</anchor>
      <arglist>(bool myFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUsePrematchedFilter</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a352683a39739e72099d84b88e6567eb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetPrematchedTopBorder</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a8b6bde13d5999133fa91c1bd85310011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetPrematchedBottomBorder</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a6a643261b8c2e6158c7a646f73dce168</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetExpectedYarnWidth</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a12477639853efcf9583390578390276b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExpectedYarnWidth</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a34b3c80f94bc2d6eea8c652f401fa06c</anchor>
      <arglist>(int expectedWidth)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRangeFactor</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a6cab517c625edc969147a0db60a5c8bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRangeFactor</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a18b5514a1469a4d58089b14043617af6</anchor>
      <arglist>(int factor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAllowDistanceBetweenContourAndWidth</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ad225e796c353e2f4243c5075bb9d365c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRiskWidthInterval</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>aa88f18eecd5f5cbd54587a08266380d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRiskHolesInterval</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>aaa41db0e8efbf2a6c1eb0d1a55efceb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRiskPositionInterval</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a757ae303dd94005796f4d17b9d93702f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsDarkYarn</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a436ab8192701e316ed4071f1b5ea7caf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCycleLength</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a749ab06193e647e35baf456c2e9679d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseCombinedAnglesForTracing</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ac826066815be1aa70a343e4ee3ce9b15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUseFabricMask</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a1d81821ed7a6ac8b7baf373758ac9918</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNrFilesForTraining</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a9eac58f81ec8ee9d1fd558583ac1c934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBufferSize</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a8a0da815ed08dd6a4e203ac54507bfcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; stira::image::ArrayGrid&lt; bool &gt; * &gt;</type>
      <name>GetFabricMask</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a0666cdb5d30d306bda5aa26862acb682</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFabricMask</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>af749e573dc8b47f3aa7ed9075d879d02</anchor>
      <arglist>(std::vector&lt; stira::image::ArrayGrid&lt; bool &gt; * &gt; vpMask)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAngleToleranceFactor</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ae00cc157c3788264d035cf5bc71b5d07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetResponseThresholdFactor</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a6f5630f989e6f25a7912b71c62c24c57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSigmaX</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a1d6af502cbb6a00d07ac5f4f8f76090f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSigmaY</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>adc1bb96f11e052c6de94628c1cf4d4a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetIntervalWidth</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ade741d173ddbf8901d784daa4d03e317</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetIntervalHeight</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ad7ac0c80b44134b06991deb54ef2154d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetWidthStatisticsLength</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ad7215b68f0887b1355a25e4409d73b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAlphaStraight</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a0955869bb3d803bc14b8968151f70e07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAlphaNotStraight</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ac9f1ce9481653916dce403320692a3af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDefectiveWidthThreshold</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>aeb02e78814f4c9aa2755ea17595a4619</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxNrDefectiveWidthPixels</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a8b1087b051640fe874e8184c24f94364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetLeftX</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>af8d5b3c74ce102268aaeec03e4f7ca21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetLeftY</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a60f0b942804da60d62c620824eb3c27f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetRightX</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a382ed17883442645b9cb3ca15722a4ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetRightY</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ab96c4615045b30e1937a95f9024044f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetSaturationThreshold</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a8e752e70f07ae4b08202d57ffcda20fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHoleThreshold</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a1f16612dc389c648c9df13acbc9f6b40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetDeltaYThreshold</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>ae90c24251dc2e29db6552f75379f01d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfDeltaYViolationsThreshold</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a2977aaf939b7d19683481018f2c9504a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetYarnStraightnessAveragingWindow</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>a4f071f80f7b5ce96146c764e67084913</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetYarnStraightnessThreshold</name>
      <anchorfile>classBatchParameters.html</anchorfile>
      <anchor>af9e3790e2ee95cd80e830c94b9c05c6b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Bitvec</name>
    <filename>structBitvec.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>iSize</name>
      <anchorfile>structBitvec.html</anchorfile>
      <anchor>ab36df8ece98aee080bae6de28c237de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nSet</name>
      <anchorfile>structBitvec.html</anchorfile>
      <anchor>ad6811debae9b972f2d94d667e994e3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iDivisor</name>
      <anchorfile>structBitvec.html</anchorfile>
      <anchor>a22cdb23eb424e07b6ce922de018a83d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Bitvec::@15</type>
      <name>u</name>
      <anchorfile>structBitvec.html</anchorfile>
      <anchor>a9434b65c2f065b2a3b0072e9fa710768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BITVEC_TELEM</type>
      <name>aBitmap</name>
      <anchorfile>unionBitvec_1_1@15.html</anchorfile>
      <anchor>ad7f02b30ebe439f27da6e1b56af6408f</anchor>
      <arglist>[BITVEC_NELEM]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>aHash</name>
      <anchorfile>unionBitvec_1_1@15.html</anchorfile>
      <anchor>ad8493634e74bc550751affbc26551d81</anchor>
      <arglist>[BITVEC_NINT]</arglist>
    </member>
    <member kind="variable">
      <type>Bitvec *</type>
      <name>apSub</name>
      <anchorfile>unionBitvec_1_1@15.html</anchorfile>
      <anchor>a9eb2fc0cb9287e5bfaccfac8ebb368e3</anchor>
      <arglist>[BITVEC_NPTR]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BtCursor</name>
    <filename>structBtCursor.html</filename>
    <member kind="variable">
      <type>Btree *</type>
      <name>pBtree</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a2ad810542eaf99c9919c585624bead6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtShared *</type>
      <name>pBt</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a61c245712549192f7644e5ac23c00b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtCursor *</type>
      <name>pNext</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>ad2f8fe3aa7d3fa3309692b3e8a8c2395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtCursor *</type>
      <name>pPrev</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>ac4f788ee88f252ddfcef8804674c7c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct KeyInfo *</type>
      <name>pKeyInfo</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>ad2360bda13f959ed70672eb421fdb5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>pgnoRoot</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a0b038f63a5b1b9df0b892e0773ffdd29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_int64</type>
      <name>cachedRowid</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>ad66b1a006f910aeb12de1e93d9a84cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CellInfo</type>
      <name>info</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a9934b348c6e9f4808d8f98ea78788fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>wrFlag</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a9482c52d8c85519a3ada18517bf67a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>atLast</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>afff41eb594a5fc2c20b13232e6ff9689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>validNKey</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a7b64ef18751d3076484903e9e9e05098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>eState</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a30ab5e7109965b34a08562a7b7e6de15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pKey</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a3c979824f27f63678d7a2b02311bc330</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>nKey</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a23f6a271258c109aaeda0ba19e808f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>skipNext</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>ab1dfdbd6c9ec6cdb21cdb5deaa6d5ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isIncrblobHandle</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a539dc1beff0ec303cfd4c94c274c7a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno *</type>
      <name>aOverflow</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>ae2dbcc15e63d349774a7ad6caef4d096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i16</type>
      <name>iPage</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>ad4362a71baf655b0957a02324586853b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MemPage *</type>
      <name>apPage</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>ad3414d944f9578e86e26c6158f92096b</anchor>
      <arglist>[BTCURSOR_MAX_DEPTH]</arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>aiIdx</name>
      <anchorfile>structBtCursor.html</anchorfile>
      <anchor>a037a739198de5bee22ca203d34e90af1</anchor>
      <arglist>[BTCURSOR_MAX_DEPTH]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BtLock</name>
    <filename>structBtLock.html</filename>
    <member kind="variable">
      <type>Btree *</type>
      <name>pBtree</name>
      <anchorfile>structBtLock.html</anchorfile>
      <anchor>ab9125b8e79d480b75f3af21cb2ab55c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>iTable</name>
      <anchorfile>structBtLock.html</anchorfile>
      <anchor>a822efcf018d6c8eb343341cde5df980d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>eLock</name>
      <anchorfile>structBtLock.html</anchorfile>
      <anchor>abe07b71018ee423e0d94b5cdba044b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtLock *</type>
      <name>pNext</name>
      <anchorfile>structBtLock.html</anchorfile>
      <anchor>ad42de86209c7aab43604c52a549b7bca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Btree</name>
    <filename>structBtree.html</filename>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a2b3cfec48b6e9fcfd641d433816ae5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtShared *</type>
      <name>pBt</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a63bab5d744d48d14368af048dddf2f20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>inTrans</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a50007448960c05dfd1fdc7db3e277685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>sharable</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a114f157127c76a1fbad8292e4b39c4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>locked</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a16fc8292bae9a66cfec03f6cb82d06a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wantToLock</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a97368ea300f0b74b8e80ea07da0cea2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nBackup</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a7a3e7cf38bc9c3021a9e270a54ecfb1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Btree *</type>
      <name>pNext</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a9e6d2ca44c10ed8ef0be004225a74ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Btree *</type>
      <name>pPrev</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a0423f1c55c1fe6812161a49bb2bf604f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtLock</type>
      <name>lock</name>
      <anchorfile>structBtree.html</anchorfile>
      <anchor>a943ed8799c9943f753a88cf44f1632dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BtreeMutexArray</name>
    <filename>structBtreeMutexArray.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>nMutex</name>
      <anchorfile>structBtreeMutexArray.html</anchorfile>
      <anchor>a1c1e4c51a9ed52ea59152831bf7fc442</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Btree *</type>
      <name>aBtree</name>
      <anchorfile>structBtreeMutexArray.html</anchorfile>
      <anchor>ac5bbf3594cd584c88df9cb25731e26dc</anchor>
      <arglist>[SQLITE_MAX_ATTACHED+1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BtShared</name>
    <filename>structBtShared.html</filename>
    <member kind="variable">
      <type>Pager *</type>
      <name>pPager</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>ab79703fc47a16446274457588d7eb989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a93dafa672793f6117a336d5987951c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtCursor *</type>
      <name>pCursor</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a8f8b52dee390e5606e8e2a8511530de7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MemPage *</type>
      <name>pPage1</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a296dffd1c698ec175fee109718f32d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>readOnly</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>ac8e55afc249f7ffa3d0f5dd5637d3825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>pageSizeFixed</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a0e728415ef91a26a8a1c6c9a6a9d8cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>secureDelete</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>af8fe491f61d5c4be043dc19aa0bda0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>initiallyEmpty</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a48779c116d7bad3616fe36bd81bb01c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>openFlags</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a8fbc250e23d7c417ccfec8cceb08329d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>autoVacuum</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a770c4f6244d4350f27029cb909902a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>incrVacuum</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a8d8ba06335a63d8a36294a0f1ae8377a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>maxLocal</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a2937d14071841fe0ecae3ce1eb1da96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>minLocal</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>affb40500b5c63601ef3ca3600983b12c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>maxLeaf</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a474248f018d24457ec306a7b570d24ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>minLeaf</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>ad57c14f1681d0e86f1c9a9488013eba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>inTransaction</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>aeaa6c0f33b83434ecee4bd8c4c8df48e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>doNotUseWAL</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a50bdaa76c7f59233533ca9d39567f7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>pageSize</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a9e42a71e5e3f98ec1e5b30998b27aae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>usableSize</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a3209efe543084a7e60f22913a794f5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nTransaction</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a6101a0e79a95e884ac4dc9c70a947715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nPage</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a8679241243f9043ede97b5c57d20c3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pSchema</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>aea3ccb6775c768fbd4f3e29df8cb925d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xFreeSchema</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a7c4816c63acea30ed44ffc58b468463e</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mutex *</type>
      <name>mutex</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a454c31d726220bbed43c165e370460c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitvec *</type>
      <name>pHasContent</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>ace6191dc3f48f9575d7946ab8cf5b919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a43d0226fa08d7fae5f992f3a2d72cc08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtShared *</type>
      <name>pNext</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>aaa9dd5c5d4ec2bb79ebe4b37ee926ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtLock *</type>
      <name>pLock</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>af58c79eec88f99ed5a07d8cabf8a1d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Btree *</type>
      <name>pWriter</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>ad8b2679e54027d58a3be3afcca4df1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isExclusive</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a416a0c0b3e26ed2ffff7e5e0cad53dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isPending</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>accae7a07dc99dc2de544d437ab265191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8 *</type>
      <name>pTmpSpace</name>
      <anchorfile>structBtShared.html</anchorfile>
      <anchor>a89102c20327da8a304f7e95af557bdf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BusyHandler</name>
    <filename>structBusyHandler.html</filename>
    <member kind="variable">
      <type>int(*</type>
      <name>xFunc</name>
      <anchorfile>structBusyHandler.html</anchorfile>
      <anchor>aafc84c4e4934de2d5bdf02f268e9340f</anchor>
      <arglist>)(void *, int)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pArg</name>
      <anchorfile>structBusyHandler.html</anchorfile>
      <anchor>a1c793d2b815e79cf3684de46847551bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nBusy</name>
      <anchorfile>structBusyHandler.html</anchorfile>
      <anchor>aac4531c677ed5ae9e4757ca1b02c568b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CandidateCurveStruct</name>
    <filename>structCandidateCurveStruct.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>averageResponseAlongCurve</name>
      <anchorfile>structCandidateCurveStruct.html</anchorfile>
      <anchor>a054d36d183edf4ad30d84b6819b85c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>varianceAlongCurve</name>
      <anchorfile>structCandidateCurveStruct.html</anchorfile>
      <anchor>ad48933393f8045363ba0326acddd84fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Point&lt; int &gt;</type>
      <name>startPoint</name>
      <anchorfile>structCandidateCurveStruct.html</anchorfile>
      <anchor>aae53e4184bf178d2d8c80a90b5e5c084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startPointIntensity</name>
      <anchorfile>structCandidateCurveStruct.html</anchorfile>
      <anchor>abbc39f198fa1bc0a0aac71f7a99e7386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Curve</type>
      <name>mCurve</name>
      <anchorfile>structCandidateCurveStruct.html</anchorfile>
      <anchor>a7d280f13966a5801c2f9b1d03b4843f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cartesianCoord</name>
    <filename>structcartesianCoord.html</filename>
    <member kind="function">
      <type>cartesianCoord &amp;</type>
      <name>operator+=</name>
      <anchorfile>structcartesianCoord.html</anchorfile>
      <anchor>a8649d8b60ea092565c6e6c0048b6c670</anchor>
      <arglist>(const cartesianCoord &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>cartesianCoord &amp;</type>
      <name>operator-=</name>
      <anchorfile>structcartesianCoord.html</anchorfile>
      <anchor>abbe6b79c05ca19e2704b27273a282c20</anchor>
      <arglist>(const cartesianCoord &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>cartesianCoord &amp;</type>
      <name>operator*=</name>
      <anchorfile>structcartesianCoord.html</anchorfile>
      <anchor>a5e7b781b71485bf6bb579170db4573da</anchor>
      <arglist>(double scalar)</arglist>
    </member>
    <member kind="function">
      <type>cartesianCoord &amp;</type>
      <name>operator/=</name>
      <anchorfile>structcartesianCoord.html</anchorfile>
      <anchor>a671682aef06a7e81d6501e1e1796d47e</anchor>
      <arglist>(double scalar)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>structcartesianCoord.html</anchorfile>
      <anchor>ae8011901032dd42ec091072d9dd9f3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>structcartesianCoord.html</anchorfile>
      <anchor>a5a3f9e91e4d862e1a6b55aad3f18a6c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CellInfo</name>
    <filename>structCellInfo.html</filename>
    <member kind="variable">
      <type>u8 *</type>
      <name>pCell</name>
      <anchorfile>structCellInfo.html</anchorfile>
      <anchor>a595ed7eeb60ea274d868f24347b7238e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>nKey</name>
      <anchorfile>structCellInfo.html</anchorfile>
      <anchor>a542b041b9a54a13f7c6f2fe63e7542c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nData</name>
      <anchorfile>structCellInfo.html</anchorfile>
      <anchor>af2301ed16c35633ec6b5d7792734a4bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nPayload</name>
      <anchorfile>structCellInfo.html</anchorfile>
      <anchor>ac1e3c1b4216a8e778bbac82907bb1485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nHeader</name>
      <anchorfile>structCellInfo.html</anchorfile>
      <anchor>a99bb1f87208f793359cf63e3d164025b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nLocal</name>
      <anchorfile>structCellInfo.html</anchorfile>
      <anchor>a8cedbcc2c94916fe5798b502c614bb08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>iOverflow</name>
      <anchorfile>structCellInfo.html</anchorfile>
      <anchor>af7be0161f1c67600aeba783a68972f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nSize</name>
      <anchorfile>structCellInfo.html</anchorfile>
      <anchor>ace78ab5eb5337b686e31b895feeb0562</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CollSeq</name>
    <filename>structCollSeq.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structCollSeq.html</anchorfile>
      <anchor>a48d6d5f71d4f8a3ab122903464e8b4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>enc</name>
      <anchorfile>structCollSeq.html</anchorfile>
      <anchor>add27da1a70ed6f538447e9183eeb4838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>type</name>
      <anchorfile>structCollSeq.html</anchorfile>
      <anchor>ae8e3e561c3ff15d81758530573ceb5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pUser</name>
      <anchorfile>structCollSeq.html</anchorfile>
      <anchor>a3cee924d41e730ccec7f686eb5b6f041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xCmp</name>
      <anchorfile>structCollSeq.html</anchorfile>
      <anchor>a47fc6d3a01eee354332ca515a8b493ce</anchor>
      <arglist>)(void *, int, const void *, int, const void *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDel</name>
      <anchorfile>structCollSeq.html</anchorfile>
      <anchor>a1c0dd3ad98c7bb2ef517f9170134a125</anchor>
      <arglist>)(void *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Column</name>
    <filename>structColumn.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>a6450a4e9fde68b3a2d79425d826eccc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pDflt</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>ac4178f302df70048235660979f84ffe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zDflt</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>a88d29c685783cddfbd039e5674990f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zType</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>aef09f43479c4bd2d07f77d340020f95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zColl</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>aa95909d5c77b321258622ed28d7b96eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>notNull</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>a852e9a4c1c327a64d9b051dcafda3841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isPrimKey</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>a57a53c2c60925a1ce5fdfe8fa3ccd62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>affinity</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>ac9d6fe31c45888cecaf3f5ad5b93bf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isHidden</name>
      <anchorfile>structColumn.html</anchorfile>
      <anchor>aafdb39efd9b21476415c5beeb5a8b180</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>column_data_t</name>
    <filename>classcolumn__data__t.html</filename>
    <member kind="function">
      <type>signal32_t &amp;</type>
      <name>get_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>a7ab22abcee58510fc0dc62c0252827dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>column_data_t</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>a707f2e1c15b0cf5aadc20537114507d2</anchor>
      <arglist>(signal32_t &amp;input, int _c, int _min_d, int _max_d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>afb96b0be955ec98648ef218318bfe1a5</anchor>
      <arglist>(signal32_t &amp;result, bool only_local_maxima)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_test_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>a4cedf19ed9e947c1ba96734005747f69</anchor>
      <arglist>(signal32_t &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>ac6d09e9954f967faa39691fa9e447455</anchor>
      <arglist>(signal32_t &amp;out, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_local_maxima</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>ad624acf82cc88b4faa545ebad818d7d6</anchor>
      <arglist>(signal32_t &amp;response_out, signal32_t d_out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compute_max_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>a0f453edc8a00ca12075a1373bd3da56b</anchor>
      <arglist>(int &amp;ymax, int &amp;dmax)</arglist>
    </member>
    <member kind="function">
      <type>signal32_t &amp;</type>
      <name>get_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>a7ab22abcee58510fc0dc62c0252827dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>column_data_t</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>a707f2e1c15b0cf5aadc20537114507d2</anchor>
      <arglist>(signal32_t &amp;input, int _c, int _min_d, int _max_d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>afb96b0be955ec98648ef218318bfe1a5</anchor>
      <arglist>(signal32_t &amp;result, bool only_local_maxima)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_test_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>a4cedf19ed9e947c1ba96734005747f69</anchor>
      <arglist>(signal32_t &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>ac6d09e9954f967faa39691fa9e447455</anchor>
      <arglist>(signal32_t &amp;out, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_local_maxima</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>ad624acf82cc88b4faa545ebad818d7d6</anchor>
      <arglist>(signal32_t &amp;response_out, signal32_t d_out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compute_max_response</name>
      <anchorfile>classcolumn__data__t.html</anchorfile>
      <anchor>a0f453edc8a00ca12075a1373bd3da56b</anchor>
      <arglist>(int &amp;ymax, int &amp;dmax)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>compareInfo</name>
    <filename>structcompareInfo.html</filename>
    <member kind="variable">
      <type>u8</type>
      <name>matchAll</name>
      <anchorfile>structcompareInfo.html</anchorfile>
      <anchor>a1161e850029ef556e6daee856d32b2e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>matchOne</name>
      <anchorfile>structcompareInfo.html</anchorfile>
      <anchor>ab9aabbf6d3df26bad786b532330a2fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>matchSet</name>
      <anchorfile>structcompareInfo.html</anchorfile>
      <anchor>a5d2ff58a72c9eb7d22f18915c1751655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>noCase</name>
      <anchorfile>structcompareInfo.html</anchorfile>
      <anchor>a6de76861b066547321f7a255cb7042ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CountCtx</name>
    <filename>structCountCtx.html</filename>
    <member kind="variable">
      <type>i64</type>
      <name>n</name>
      <anchorfile>structCountCtx.html</anchorfile>
      <anchor>a141c718918dbfaa183f772bfd7a516f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CurveSegment</name>
    <filename>structCurveSegment.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>startX</name>
      <anchorfile>structCurveSegment.html</anchorfile>
      <anchor>a4a27a6ae1448471eeca30cb521db6308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>length</name>
      <anchorfile>structCurveSegment.html</anchorfile>
      <anchor>a601aa531d9ea1573589304afe8ba4c39</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DateTime</name>
    <filename>structDateTime.html</filename>
    <member kind="variable">
      <type>sqlite3_int64</type>
      <name>iJD</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>ae5043d34fa3c3c4dc1121fec886c6f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Y</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>ad39449618b2a15128e32766a208753cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>M</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>a00e6515603bb5d7c5ce79d3a5a6438a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>D</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>a979ec52428a05d2f2ed827345a416fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>h</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>a2146547149b65f64e07e1ac6ed8654b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>ac5db527c48331a515bea3b828d1a2254</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tz</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>a7f5c2e587ee18014982d85eb616f09b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>s</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>a69a803afb69b74206418bda0bc1bcaa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>validYMD</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>aaa042bec0879cd922039062433f4b26f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>validHMS</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>aba26b32c6142cf6bfc09db3088b90add</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>validJD</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>a1962742892150a03dc5d302f43efbb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>validTZ</name>
      <anchorfile>structDateTime.html</anchorfile>
      <anchor>af3dfda2bdbb2183dc1b94f449701b81e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Db</name>
    <filename>structDb.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structDb.html</anchorfile>
      <anchor>a6df2b5d7c8fd68e92cea961d9e3b279b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Btree *</type>
      <name>pBt</name>
      <anchorfile>structDb.html</anchorfile>
      <anchor>a0633e5a6abfc39246d07cc6a417a5852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>inTrans</name>
      <anchorfile>structDb.html</anchorfile>
      <anchor>a4c5495ebea317212f0b41aa2795a7bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>safety_level</name>
      <anchorfile>structDb.html</anchorfile>
      <anchor>a04597a5c023d8b328193450b177ff24c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Schema *</type>
      <name>pSchema</name>
      <anchorfile>structDb.html</anchorfile>
      <anchor>afd8647a83a4a7053231b92814520d6d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DbFixer</name>
    <filename>structDbFixer.html</filename>
    <member kind="variable">
      <type>Parse *</type>
      <name>pParse</name>
      <anchorfile>structDbFixer.html</anchorfile>
      <anchor>ac5c9b8bca3b05a66faea11dd998bf6f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zDb</name>
      <anchorfile>structDbFixer.html</anchorfile>
      <anchor>aba91df5965a99915d9180805d02c4a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zType</name>
      <anchorfile>structDbFixer.html</anchorfile>
      <anchor>ae4748d9e97560b7b332527434408c2e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Token *</type>
      <name>pName</name>
      <anchorfile>structDbFixer.html</anchorfile>
      <anchor>aedee20e10de7337651b84656ee81b39c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Edge</name>
    <filename>structEdge.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>a</name>
      <anchorfile>structEdge.html</anchorfile>
      <anchor>ad6dc0849e76aea6859a31b1f2a9f57c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>structEdge.html</anchorfile>
      <anchor>a598727b4d7ae07ebcd98351c7258a845</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>c</name>
      <anchorfile>structEdge.html</anchorfile>
      <anchor>a2619a927f43fc0623a9b78a726be1a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Site *</type>
      <name>ep</name>
      <anchorfile>structEdge.html</anchorfile>
      <anchor>a905e296203dbbd5d5d76a6eda092bf11</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct Site *</type>
      <name>reg</name>
      <anchorfile>structEdge.html</anchorfile>
      <anchor>a28cdc4cd3f522515907eb210de77b5dd</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>edgenbr</name>
      <anchorfile>structEdge.html</anchorfile>
      <anchor>a2921d395965127558430ac6f0d5546dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>et_info</name>
    <filename>structet__info.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>fmttype</name>
      <anchorfile>structet__info.html</anchorfile>
      <anchor>a1740af27f0c9d5840e7dda59a129aa4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etByte</type>
      <name>base</name>
      <anchorfile>structet__info.html</anchorfile>
      <anchor>a20f5a4c11c7aa1d9c777805d11965c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etByte</type>
      <name>flags</name>
      <anchorfile>structet__info.html</anchorfile>
      <anchor>a8f11646aaec803f0870683dc3ba2f756</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etByte</type>
      <name>type</name>
      <anchorfile>structet__info.html</anchorfile>
      <anchor>a148bd1efa49018c9a723701ba5747825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etByte</type>
      <name>charset</name>
      <anchorfile>structet__info.html</anchorfile>
      <anchor>a77131acb7479b0e6aad61af0901e11c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etByte</type>
      <name>prefix</name>
      <anchorfile>structet__info.html</anchorfile>
      <anchor>a23cc866bf202c34e49bd49599b051628</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Example</name>
    <filename>classExample.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>test</name>
      <anchorfile>classExample.html</anchorfile>
      <anchor>a1cc4e6385f68b394b41f8474de3ace42</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Expr</name>
    <filename>structExpr.html</filename>
    <member kind="variable">
      <type>u8</type>
      <name>op</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a101c55ddb6c149d95f0327831eb78225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>affinity</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>aeb51b76e606d6fbae234e38473bf3dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>flags</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>ad6013561807a4a5182ce928f263bc3bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Expr::@8</type>
      <name>u</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>abb453f4bd1862c33cab1d310e5702c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zToken</name>
      <anchorfile>unionExpr_1_1@8.html</anchorfile>
      <anchor>a90117d2ac75fd94aef046736396b36b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iValue</name>
      <anchorfile>unionExpr_1_1@8.html</anchorfile>
      <anchor>aa0d6f6b3a5906b4709e7fbd118740260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pLeft</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a0a78282ae0d696f4a25013a12e38b1ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pRight</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>aa08c218d5b0b6f8882e8bf9ec8822a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Expr::@9</type>
      <name>x</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a6a7168f44d8096126d6ea08177504973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExprList *</type>
      <name>pList</name>
      <anchorfile>unionExpr_1_1@9.html</anchorfile>
      <anchor>a4b75d127aa48b0271a31b853a135cb85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Select *</type>
      <name>pSelect</name>
      <anchorfile>unionExpr_1_1@9.html</anchorfile>
      <anchor>a91c780b73f2ed2780f4c4d15bb874854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CollSeq *</type>
      <name>pColl</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a4ef09e21aaa9d61567b89714e25abfb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iTable</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>af8e273f4d7d173bfb5996ed09054611c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ynVar</type>
      <name>iColumn</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>ad19251a8eb6db3cf0bdffe0dcb07eeba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i16</type>
      <name>iAgg</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a9fe0ed6360b0a4cf5b67ab8def922033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i16</type>
      <name>iRightJoinTable</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>aa49b76f3628a7bf2b0997c33461cc651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>flags2</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>af8d40f8e74d07557e89cfffeef3657e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>op2</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a0eacba0a2a6977e434b096b1cb9d5b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AggInfo *</type>
      <name>pAggInfo</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a4fde82477256ee85f3a906263549082a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pTab</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a27c8824b41d853eeeebe61cf3ac1ae5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nHeight</name>
      <anchorfile>structExpr.html</anchorfile>
      <anchor>a5a893ea309f801f23404e7e5ac02732b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ExprList</name>
    <filename>structExprList.html</filename>
    <class kind="struct">ExprList::ExprList_item</class>
    <member kind="variable">
      <type>int</type>
      <name>nExpr</name>
      <anchorfile>structExprList.html</anchorfile>
      <anchor>a88bdbd62cce306124eea63ae9f80ec33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nAlloc</name>
      <anchorfile>structExprList.html</anchorfile>
      <anchor>a7e087b481e164f2b7e90fe81f0fa6c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iECursor</name>
      <anchorfile>structExprList.html</anchorfile>
      <anchor>aab870b9af60d25992f8672331d951ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ExprList::ExprList_item *</type>
      <name>a</name>
      <anchorfile>structExprList.html</anchorfile>
      <anchor>a02a4222d2dc4da64dcec416188abc16c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ExprList::ExprList_item</name>
    <filename>structExprList_1_1ExprList__item.html</filename>
    <member kind="variable">
      <type>Expr *</type>
      <name>pExpr</name>
      <anchorfile>structExprList_1_1ExprList__item.html</anchorfile>
      <anchor>a75906cf3ff19e5bf16373fec7f3c79ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structExprList_1_1ExprList__item.html</anchorfile>
      <anchor>af278eb03a1169c73d144547adaf9b04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zSpan</name>
      <anchorfile>structExprList_1_1ExprList__item.html</anchorfile>
      <anchor>ade485bb6fafb44ec2aba59d05b8d117b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>sortOrder</name>
      <anchorfile>structExprList_1_1ExprList__item.html</anchorfile>
      <anchor>af9084dc073f96792c0c7a8a894778881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>done</name>
      <anchorfile>structExprList_1_1ExprList__item.html</anchorfile>
      <anchor>a84aad270c98e28a725a840aac3ee8576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>iCol</name>
      <anchorfile>structExprList_1_1ExprList__item.html</anchorfile>
      <anchor>a72cf759413ceea37ddf2a4353cb666c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>iAlias</name>
      <anchorfile>structExprList_1_1ExprList__item.html</anchorfile>
      <anchor>a06fc9fdfb94d35ec6ca742da23609239</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ExprSpan</name>
    <filename>structExprSpan.html</filename>
    <member kind="variable">
      <type>Expr *</type>
      <name>pExpr</name>
      <anchorfile>structExprSpan.html</anchorfile>
      <anchor>a081c4aa031331c8518c1173b2a8335cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zStart</name>
      <anchorfile>structExprSpan.html</anchorfile>
      <anchor>af4653638d7e67a62e7a607f682b38e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zEnd</name>
      <anchorfile>structExprSpan.html</anchorfile>
      <anchor>a7cdf42cea729fcb5a1c477c3825ab575</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FileChunk</name>
    <filename>structFileChunk.html</filename>
    <member kind="variable">
      <type>FileChunk *</type>
      <name>pNext</name>
      <anchorfile>structFileChunk.html</anchorfile>
      <anchor>ad2d0d170afc7ce1e239e8716852e247b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>zChunk</name>
      <anchorfile>structFileChunk.html</anchorfile>
      <anchor>ada06a9958ee6b82a6c2b15c29f847d19</anchor>
      <arglist>[JOURNAL_CHUNKSIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FilePoint</name>
    <filename>structFilePoint.html</filename>
    <member kind="variable">
      <type>sqlite3_int64</type>
      <name>iOffset</name>
      <anchorfile>structFilePoint.html</anchorfile>
      <anchor>a00a345e479cd37ebeb9e6ed475eb4112</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FileChunk *</type>
      <name>pChunk</name>
      <anchorfile>structFilePoint.html</anchorfile>
      <anchor>aa17216d9d2559f14a00a2c72a8959298</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>fitRec</name>
    <filename>structfitRec.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>dx</name>
      <anchorfile>structfitRec.html</anchorfile>
      <anchor>a6e87fcd246a19f9faa92df9254594278</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>skew</name>
      <anchorfile>structfitRec.html</anchorfile>
      <anchor>acea9ce56bbb0305f8454f7832a539582</anchor>
      <arglist>[3][3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>gamma</name>
      <anchorfile>structfitRec.html</anchorfile>
      <anchor>a387e55ccdbd96b98a5a80a5bbfba3a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>phi</name>
      <anchorfile>structfitRec.html</anchorfile>
      <anchor>ac6bf2f3a688c459c68200f0555efdb1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>theta</name>
      <anchorfile>structfitRec.html</anchorfile>
      <anchor>a7f57e0d09f9970e8b6557d08ed6cf550</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>psi</name>
      <anchorfile>structfitRec.html</anchorfile>
      <anchor>aa99d7d0f56ab5cc134ffacfa1be8f62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lambda</name>
      <anchorfile>structfitRec.html</anchorfile>
      <anchor>a462cbb95ef5fb4d46d62cdf88e0ef3be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>origin</name>
      <anchorfile>structfitRec.html</anchorfile>
      <anchor>a61aaf618b05763f82d80387eb8e331b9</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FKey</name>
    <filename>structFKey.html</filename>
    <class kind="struct">FKey::sColMap</class>
    <member kind="variable">
      <type>Table *</type>
      <name>pFrom</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>a6d476f3fbfa75a19c5c5a9edec4e79eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FKey *</type>
      <name>pNextFrom</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>ac64ff66b30167715c8822a74c2809075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zTo</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>a1eac10bab38a0ac9f88306fbbabbe5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FKey *</type>
      <name>pNextTo</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>ac29b26999113602e7e3921bf07643c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FKey *</type>
      <name>pPrevTo</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>a56189e420e91df86513e6895db518eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nCol</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>a611e3223f3f434e0a635e036dc100cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isDeferred</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>ab742714b17f2c13353837e1fdde51cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>aAction</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>a68a08f58294bf845e9c77d785499d222</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>Trigger *</type>
      <name>apTrigger</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>a9ce15cb27b675836bc714ab18fd8a008</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>struct FKey::sColMap</type>
      <name>aCol</name>
      <anchorfile>structFKey.html</anchorfile>
      <anchor>a5b230bc6c10a67f432ed7d5ebc92bcd2</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FKey::sColMap</name>
    <filename>structFKey_1_1sColMap.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iFrom</name>
      <anchorfile>structFKey_1_1sColMap.html</anchorfile>
      <anchor>a2b0ed19d4924a93d1f3f14f891b176ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zCol</name>
      <anchorfile>structFKey_1_1sColMap.html</anchorfile>
      <anchor>a4cdef475be73cc460873051a2c2c2937</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Freelist</name>
    <filename>structFreelist.html</filename>
    <member kind="variable">
      <type>struct Freenode *</type>
      <name>head</name>
      <anchorfile>structFreelist.html</anchorfile>
      <anchor>a6ffc288bbbb434089859e183ccf73833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nodesize</name>
      <anchorfile>structFreelist.html</anchorfile>
      <anchor>a6e0df70668f1ea4f43a073adfddede83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Freenode</name>
    <filename>structFreenode.html</filename>
    <member kind="variable">
      <type>struct Freenode *</type>
      <name>nextfree</name>
      <anchorfile>structFreenode.html</anchorfile>
      <anchor>ab61a382af68dc15e3e9576902ab4e906</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FreeNodeArrayList</name>
    <filename>structFreeNodeArrayList.html</filename>
    <member kind="variable">
      <type>struct Freenode *</type>
      <name>memory</name>
      <anchorfile>structFreeNodeArrayList.html</anchorfile>
      <anchor>a47c89d1dce5406d12613bea6ec2818d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct FreeNodeArrayList *</type>
      <name>next</name>
      <anchorfile>structFreeNodeArrayList.html</anchorfile>
      <anchor>a8b41b1d2d224f6a31a6ffdff0ccbd086</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FuncDef</name>
    <filename>structFuncDef.html</filename>
    <member kind="variable">
      <type>i16</type>
      <name>nArg</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>a4ad90c05868ec8ee60c211b6e20299df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>iPrefEnc</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>aa7ed0a0a7d8790a4946ef0dbf85a601c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>flags</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>aed4dc88e58b7582668bcaf425c4d053f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pUserData</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>a04fdde2f96be198823a483bebcfd3ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FuncDef *</type>
      <name>pNext</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>a1ebe547d000172d9ae44d12eeb433a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xFunc</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>a1cfd07fdfe22ff504ea7f36c0752c1da</anchor>
      <arglist>)(sqlite3_context *, int, sqlite3_value **)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xStep</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>ab1d1c623844534b17ea3ccce3f815464</anchor>
      <arglist>)(sqlite3_context *, int, sqlite3_value **)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xFinalize</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>a3c649453d5a58c697b7ee54ee999e7ef</anchor>
      <arglist>)(sqlite3_context *)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>a1135e622a3a505c7c463e975846ef926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FuncDef *</type>
      <name>pHash</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>a04561444155a6922d6a2d99a29d35281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FuncDestructor *</type>
      <name>pDestructor</name>
      <anchorfile>structFuncDef.html</anchorfile>
      <anchor>a1bd12675375b838b5c00b1c79c1e6301</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FuncDefHash</name>
    <filename>structFuncDefHash.html</filename>
    <member kind="variable">
      <type>FuncDef *</type>
      <name>a</name>
      <anchorfile>structFuncDefHash.html</anchorfile>
      <anchor>a3e044ccfe432770ef7297e86e405cc96</anchor>
      <arglist>[23]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FuncDestructor</name>
    <filename>structFuncDestructor.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structFuncDestructor.html</anchorfile>
      <anchor>a8b1bf3af00c88400efc1dd74a4410463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDestroy</name>
      <anchorfile>structFuncDestructor.html</anchorfile>
      <anchor>a8d688d51ad881306c81b3f8d4795e076</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pUserData</name>
      <anchorfile>structFuncDestructor.html</anchorfile>
      <anchor>a181875609f0f8221985cd6cfd7ad8cd8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GraphEdge</name>
    <filename>structGraphEdge.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x1</name>
      <anchorfile>structGraphEdge.html</anchorfile>
      <anchor>a80fea57dd2fe3c6300a9ed192302b329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y1</name>
      <anchorfile>structGraphEdge.html</anchorfile>
      <anchor>a8a98402e8c7afac249912f203546ca5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x2</name>
      <anchorfile>structGraphEdge.html</anchorfile>
      <anchor>a4a308713c5af88b5f7528c04179ed950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y2</name>
      <anchorfile>structGraphEdge.html</anchorfile>
      <anchor>a674c0ecb63e7a88beba0a321f90f15dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct GraphEdge *</type>
      <name>next</name>
      <anchorfile>structGraphEdge.html</anchorfile>
      <anchor>aaeefe441a9565de755ce32b2fc326a80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Halfedge</name>
    <filename>structHalfedge.html</filename>
    <member kind="variable">
      <type>struct Halfedge *</type>
      <name>ELleft</name>
      <anchorfile>structHalfedge.html</anchorfile>
      <anchor>a94c7c9a14dfc27cd104b171739f3029a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Halfedge *</type>
      <name>ELright</name>
      <anchorfile>structHalfedge.html</anchorfile>
      <anchor>ada284144a5ea43440922187eeca46535</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Edge *</type>
      <name>ELedge</name>
      <anchorfile>structHalfedge.html</anchorfile>
      <anchor>a67af97a110444874f984693fb2f92774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ELrefcnt</name>
      <anchorfile>structHalfedge.html</anchorfile>
      <anchor>ac6326ffa12cd091f7c4026a9a13e183f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ELpm</name>
      <anchorfile>structHalfedge.html</anchorfile>
      <anchor>a36e688c7989974e7af28c3861e60085d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Site *</type>
      <name>vertex</name>
      <anchorfile>structHalfedge.html</anchorfile>
      <anchor>a830e87193287d542ba39523fb136f4e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ystar</name>
      <anchorfile>structHalfedge.html</anchorfile>
      <anchor>acb2fea4056f9140358fb378c9050d2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Halfedge *</type>
      <name>PQnext</name>
      <anchorfile>structHalfedge.html</anchorfile>
      <anchor>a36bdfa895b041c1ef490ec557abdc3b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Hash</name>
    <filename>structHash.html</filename>
    <class kind="struct">Hash::_ht</class>
    <member kind="variable">
      <type>unsigned int</type>
      <name>htsize</name>
      <anchorfile>structHash.html</anchorfile>
      <anchor>a072258e24a38e09175f1308deb013bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>structHash.html</anchorfile>
      <anchor>a7ab16f173cdc347ffbe39eaa85ee6fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashElem *</type>
      <name>first</name>
      <anchorfile>structHash.html</anchorfile>
      <anchor>a2cfc9936ca2a624c6492ab6557f4705b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Hash::_ht *</type>
      <name>ht</name>
      <anchorfile>structHash.html</anchorfile>
      <anchor>ac0f36e03746a3fe69643db08d93bc0c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Hash::_ht</name>
    <filename>structHash_1_1__ht.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>structHash_1_1__ht.html</anchorfile>
      <anchor>a0677191178b6c7c5c6c2880f41cf24b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashElem *</type>
      <name>chain</name>
      <anchorfile>structHash_1_1__ht.html</anchorfile>
      <anchor>a56fc145e7d38d9440d85ab2ea63a48ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HashElem</name>
    <filename>structHashElem.html</filename>
    <member kind="variable">
      <type>HashElem *</type>
      <name>next</name>
      <anchorfile>structHashElem.html</anchorfile>
      <anchor>a2d28fad45ff21ffb8a02a7133df860fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashElem *</type>
      <name>prev</name>
      <anchorfile>structHashElem.html</anchorfile>
      <anchor>ae4d011c0dc807a3c100ccdb927dd0ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>data</name>
      <anchorfile>structHashElem.html</anchorfile>
      <anchor>ac7e80f63ba2f82457ff68aa0cd360365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>pKey</name>
      <anchorfile>structHashElem.html</anchorfile>
      <anchor>a9c33a7c8ac467a5547a123338daf61f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nKey</name>
      <anchorfile>structHashElem.html</anchorfile>
      <anchor>a12c1252e6aa2958f73e2ef969c9a3d81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>histList</name>
    <filename>structhistList.html</filename>
    <member kind="variable">
      <type>struct histList *</type>
      <name>next</name>
      <anchorfile>structhistList.html</anchorfile>
      <anchor>acd596a4ff5ec44d582886cc1d9093e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>occurences</name>
      <anchorfile>structhistList.html</anchorfile>
      <anchor>a53bf932c29b773cfd0160867c91f8c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structhistList.html</anchorfile>
      <anchor>a042a5d76efd46300c440e0f518c112f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IdList</name>
    <filename>structIdList.html</filename>
    <class kind="struct">IdList::IdList_item</class>
    <member kind="variable">
      <type>struct IdList::IdList_item *</type>
      <name>a</name>
      <anchorfile>structIdList.html</anchorfile>
      <anchor>ad33082fd71286c1159711a1a3e979763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nId</name>
      <anchorfile>structIdList.html</anchorfile>
      <anchor>afb785717796d8b3c72d1ae682dcb6ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nAlloc</name>
      <anchorfile>structIdList.html</anchorfile>
      <anchor>ace055dd6237832b141026ea3463c18ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IdList::IdList_item</name>
    <filename>structIdList_1_1IdList__item.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structIdList_1_1IdList__item.html</anchorfile>
      <anchor>acd44e1182dc46441939cd6a5d935724c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>idx</name>
      <anchorfile>structIdList_1_1IdList__item.html</anchorfile>
      <anchor>a869d1a5ee03bcb018e38fae6c9ac0572</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Incrblob</name>
    <filename>structIncrblob.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>flags</name>
      <anchorfile>structIncrblob.html</anchorfile>
      <anchor>a46fa093e5241305f28d02926f8d0846f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nByte</name>
      <anchorfile>structIncrblob.html</anchorfile>
      <anchor>ab1e1439df086208173fa97003f0ee02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iOffset</name>
      <anchorfile>structIncrblob.html</anchorfile>
      <anchor>af8e71744f43178967460b9f402e7fafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iCol</name>
      <anchorfile>structIncrblob.html</anchorfile>
      <anchor>a398a322b061fb9952bc155026976ba51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtCursor *</type>
      <name>pCsr</name>
      <anchorfile>structIncrblob.html</anchorfile>
      <anchor>af5a24b18473d1449c8c3fe7d826de59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_stmt *</type>
      <name>pStmt</name>
      <anchorfile>structIncrblob.html</anchorfile>
      <anchor>a8b7b39c9372db552add74c69f14a61a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structIncrblob.html</anchorfile>
      <anchor>a9d3fe0b0229b75b9d0f9ee8e6545b5bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Index</name>
    <filename>structIndex.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>a8848cddf6e09f22e3b794ec019082ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nColumn</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>ac583449830c285a52d1fd10b8c890162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>aiColumn</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>acbb125339b02ca6819dd2e382de2d639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned *</type>
      <name>aiRowEst</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>a1c504b4a957f456c088c5114e311dc63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pTable</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>a01c6d4da27cba325ca58f333f87a6f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tnum</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>af895a09c01701021c3e36362c04a1ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>onError</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>ae8bf87d0414e5c46b86192cfbdd271a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>autoIndex</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>a1fa09182749b6e07b2555d5b3dffb91d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zColAff</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>af076df9f74dd836001c0a59d27274c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Index *</type>
      <name>pNext</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>a115a17d236bd277d59dd5ea030954c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Schema *</type>
      <name>pSchema</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>af14f5ddd57eab2aba63dcb5db2aa92af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8 *</type>
      <name>aSortOrder</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>a0a3fc87b53193995f59c9657443e9a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>azColl</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>ab690ebb96c0329896b0fe2ab56813b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IndexSample *</type>
      <name>aSample</name>
      <anchorfile>structIndex.html</anchorfile>
      <anchor>afa441de8beb041e894ce10665657c7cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IndexSample</name>
    <filename>structIndexSample.html</filename>
    <member kind="variable">
      <type>union IndexSample::@7</type>
      <name>u</name>
      <anchorfile>structIndexSample.html</anchorfile>
      <anchor>a39dd6ec90ff99e7d6ab362d62d5d278e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>z</name>
      <anchorfile>unionIndexSample_1_1@7.html</anchorfile>
      <anchor>a628b45910db9581375b0e11808fc86e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>r</name>
      <anchorfile>unionIndexSample_1_1@7.html</anchorfile>
      <anchor>a64d5629a157462602af95bed7f83a6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>eType</name>
      <anchorfile>structIndexSample.html</anchorfile>
      <anchor>a369f346d71bab2423e015d0fb6809290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>nByte</name>
      <anchorfile>structIndexSample.html</anchorfile>
      <anchor>a44484b49a5178fd8d76b476d143e05be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>InitData</name>
    <filename>structInitData.html</filename>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structInitData.html</anchorfile>
      <anchor>adc9e29c56e0392076e92d7f4b29fa272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iDb</name>
      <anchorfile>structInitData.html</anchorfile>
      <anchor>ad6c7953b49d351cd9fb14e3394010689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>pzErrMsg</name>
      <anchorfile>structInitData.html</anchorfile>
      <anchor>aa8aef34241ec214f038b38932ffe1357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rc</name>
      <anchorfile>structInitData.html</anchorfile>
      <anchor>a627153a3de2c4d159ae44ebc03961592</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IntegrityCk</name>
    <filename>structIntegrityCk.html</filename>
    <member kind="variable">
      <type>BtShared *</type>
      <name>pBt</name>
      <anchorfile>structIntegrityCk.html</anchorfile>
      <anchor>a65f03f54514f504bd871bb2ccd3da188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pager *</type>
      <name>pPager</name>
      <anchorfile>structIntegrityCk.html</anchorfile>
      <anchor>a87e7f8b012b61b61fae359269cbacce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>nPage</name>
      <anchorfile>structIntegrityCk.html</anchorfile>
      <anchor>a04f496ef7239aea6dccb6a861bb5a798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>anRef</name>
      <anchorfile>structIntegrityCk.html</anchorfile>
      <anchor>a8bf40e4a2f13ad3e101f1a4dd7a08ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mxErr</name>
      <anchorfile>structIntegrityCk.html</anchorfile>
      <anchor>a9daa97cdcb1366c503451ab2af9e7ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nErr</name>
      <anchorfile>structIntegrityCk.html</anchorfile>
      <anchor>a52c815a1d19be87d0ab4dc0a4e4d38e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mallocFailed</name>
      <anchorfile>structIntegrityCk.html</anchorfile>
      <anchor>a8e448c1d6483a0326a7ec39291782030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StrAccum</type>
      <name>errMsg</name>
      <anchorfile>structIntegrityCk.html</anchorfile>
      <anchor>a1e9b79bb1d7b22a840001333200a950e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KeyInfo</name>
    <filename>structKeyInfo.html</filename>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structKeyInfo.html</anchorfile>
      <anchor>af2e7a3a411f5ca1ccf6de77d320b59db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>enc</name>
      <anchorfile>structKeyInfo.html</anchorfile>
      <anchor>a37972825f9a148668e979be12465e832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nField</name>
      <anchorfile>structKeyInfo.html</anchorfile>
      <anchor>af70436487a95e445d540bfc4ca1d3f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8 *</type>
      <name>aSortOrder</name>
      <anchorfile>structKeyInfo.html</anchorfile>
      <anchor>ac5fe4bd0172a1f11f41f678528a7b21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CollSeq *</type>
      <name>aColl</name>
      <anchorfile>structKeyInfo.html</anchorfile>
      <anchor>ad43aa024fca5a065e75d8e24b231adcb</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>kiss_fft_cpx</name>
    <filename>structkiss__fft__cpx.html</filename>
    <member kind="variable">
      <type>kiss_fft_scalar</type>
      <name>r</name>
      <anchorfile>structkiss__fft__cpx.html</anchorfile>
      <anchor>a686b6187e3e885de316908319c71ea8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>kiss_fft_scalar</type>
      <name>i</name>
      <anchorfile>structkiss__fft__cpx.html</anchorfile>
      <anchor>ac1e17add2ae6b815da29d7d67b03fa70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>kiss_fft_state</name>
    <filename>structkiss__fft__state.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>nfft</name>
      <anchorfile>structkiss__fft__state.html</anchorfile>
      <anchor>aa7446bded329a40e13aef0826e349791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>inverse</name>
      <anchorfile>structkiss__fft__state.html</anchorfile>
      <anchor>a8faed935610ffb08bf7ad9ea8d6c81d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>factors</name>
      <anchorfile>structkiss__fft__state.html</anchorfile>
      <anchor>a2d5d0897276dbac0674fae556f951d18</anchor>
      <arglist>[2 *MAXFACTORS]</arglist>
    </member>
    <member kind="variable">
      <type>kiss_fft_cpx</type>
      <name>twiddles</name>
      <anchorfile>structkiss__fft__state.html</anchorfile>
      <anchor>aa7d1cab86ec03a8ecddfe0d91ef0bd20</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>kiss_fftnd_state</name>
    <filename>structkiss__fftnd__state.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>dimprod</name>
      <anchorfile>structkiss__fftnd__state.html</anchorfile>
      <anchor>aaee291ed294623109b48370942332a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndims</name>
      <anchorfile>structkiss__fftnd__state.html</anchorfile>
      <anchor>a4d2c3adb6a9a4a70c0fb5b29d4297819</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>dims</name>
      <anchorfile>structkiss__fftnd__state.html</anchorfile>
      <anchor>aa16a0dfb68479f947784dd38dc5db33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>kiss_fft_cfg *</type>
      <name>states</name>
      <anchorfile>structkiss__fftnd__state.html</anchorfile>
      <anchor>a0cb5ed1a3d72940d6a274a768f39011a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>kiss_fft_cpx *</type>
      <name>tmpbuf</name>
      <anchorfile>structkiss__fftnd__state.html</anchorfile>
      <anchor>a5a2fbe494c8e53174cb9050fd2888edd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LikeOp</name>
    <filename>structLikeOp.html</filename>
    <member kind="variable">
      <type>Token</type>
      <name>eOperator</name>
      <anchorfile>structLikeOp.html</anchorfile>
      <anchor>a02dccb0eea9610285333434a755acae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>not</name>
      <anchorfile>structLikeOp.html</anchorfile>
      <anchor>a876c098f6889c662bd4616e83b09ff0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LimitVal</name>
    <filename>structLimitVal.html</filename>
    <member kind="variable">
      <type>Expr *</type>
      <name>pLimit</name>
      <anchorfile>structLimitVal.html</anchorfile>
      <anchor>a96094d1b395a3f455263ff5907d72ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pOffset</name>
      <anchorfile>structLimitVal.html</anchorfile>
      <anchor>a43dedf453a8e5cb8091fcde524a7c736</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LineProcessing</name>
    <filename>classLineProcessing.html</filename>
    <member kind="function">
      <type></type>
      <name>LineProcessing</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>ac7d4794f97c12896a6f04bae13aabee9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Curve</type>
      <name>GetBrightestLine</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a0ececc0ccabc7ca3a3d060e4de99c024</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function">
      <type>Curve</type>
      <name>GetTopConnectedLine</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a4ed2ec17bd9d509a6b31c006c4fffef3</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, BatchParameters *pBP, int frameNr)</arglist>
    </member>
    <member kind="function">
      <type>Curve</type>
      <name>FindOptimalTopLine</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>ab18406b179ac02f5a81d95158987e84d</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, BatchParameters *pBP, int xBorder, int frameNr)</arglist>
    </member>
    <member kind="function">
      <type>Curve</type>
      <name>ExtractLineFromPoint</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a7613799b604588fe0d92de05570576ca</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, BatchParameters *pBP, Point&lt; int &gt; startPoint, int frameNr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetVarianceResponseAlongCurve</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a74bc1f27c522c0220e381dbc64d4976f</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; pointsOnCurve, ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function">
      <type>Curve</type>
      <name>GetLineStartingAtPoint</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a7421ae341e05f6b42fcc6ef032dcf201</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, Point&lt; int &gt; startPoint, double &amp;meanResponseAlongLine, BatchParameters *pBP, int maxWidth=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>TrackConnectedMaximaToRight</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>aa9b1a0558209365ee37e63d3e0cf2e7a</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, Point&lt; int &gt; startPoint, double &amp;meanResponseAlongLine, BatchParameters *pBP, int maxLength)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>TrackConnectedMaximaToLeft</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a831c79891f406e6fb004e714368aef74</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, Point&lt; int &gt; startPoint, double &amp;meanResponseAlongLine, BatchParameters *pBP, int maxLength)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>DrawCurves</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a8d433e1b7bea008e8abd27b392392ba0</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, std::vector&lt; std::pair&lt; Curve, ColorValue &gt; &gt; myCurveAndColorSet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteCurves</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a729e05bf2cb65707b66d16f45f2efba1</anchor>
      <arglist>(int frameNr, ArrayGrid&lt; double &gt; *pGridIn, std::string prefix, BatchParameters *pBP, std::vector&lt; std::pair&lt; Curve, ColorValue &gt; &gt; myCurveAndColorSet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFactor</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>ae8c4de308740f526199a4ab19656be13</anchor>
      <arglist>(int factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyFactor</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a730d77c317e09c31ecc9d4702cedf402</anchor>
      <arglist>(int multiplier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLineHalfWidth</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>afaa569cd090712084c17207827d6e405</anchor>
      <arglist>(int myWidth)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLineHalfWidth</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a8aab1f7d93e9efaa5028bb957a86c4da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; int &gt;</type>
      <name>FindLocalMinimaPositions</name>
      <anchorfile>classLineProcessing.html</anchorfile>
      <anchor>a52d941d0ac0b7bacbe0bce8b09fc8825</anchor>
      <arglist>(std::vector&lt; IntensityPoint &gt; iPoints)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Lookaside</name>
    <filename>structLookaside.html</filename>
    <member kind="variable">
      <type>u16</type>
      <name>sz</name>
      <anchorfile>structLookaside.html</anchorfile>
      <anchor>a2e8346b6cebbb64d9a6886a19ef843a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>bEnabled</name>
      <anchorfile>structLookaside.html</anchorfile>
      <anchor>adbe2c3486f893c30525e19388f35eb21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>bMalloced</name>
      <anchorfile>structLookaside.html</anchorfile>
      <anchor>a218f14cf9eb2c430867d286e9ac57ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nOut</name>
      <anchorfile>structLookaside.html</anchorfile>
      <anchor>a4cdd49fa554f877928d5bb31d55b32e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mxOut</name>
      <anchorfile>structLookaside.html</anchorfile>
      <anchor>a2ce364d95b55913df986999de442e4f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LookasideSlot *</type>
      <name>pFree</name>
      <anchorfile>structLookaside.html</anchorfile>
      <anchor>a318d2faa7f976f9d1b3c6e08bdc1d992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pStart</name>
      <anchorfile>structLookaside.html</anchorfile>
      <anchor>a47073fcdffdc5a7a1464f0d09bfc17f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pEnd</name>
      <anchorfile>structLookaside.html</anchorfile>
      <anchor>ad3555c5558e104f2b82f62bf642cf831</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LookasideSlot</name>
    <filename>structLookasideSlot.html</filename>
    <member kind="variable">
      <type>LookasideSlot *</type>
      <name>pNext</name>
      <anchorfile>structLookasideSlot.html</anchorfile>
      <anchor>a3c3dd4a770ded51a68e8a651eba40f66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Mem</name>
    <filename>structMem.html</filename>
    <member kind="variable">
      <type>union Mem::@14</type>
      <name>u</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a5b976dd3d58513afc65f990f639db536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>i</name>
      <anchorfile>unionMem_1_1@14.html</anchorfile>
      <anchor>ad1d3435287e5dc813066ba159f961015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nZero</name>
      <anchorfile>unionMem_1_1@14.html</anchorfile>
      <anchor>aa685f075e61f79575f01a4412825e22a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FuncDef *</type>
      <name>pDef</name>
      <anchorfile>unionMem_1_1@14.html</anchorfile>
      <anchor>ac4b6f1357ec15a519e8be6d753ceac14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RowSet *</type>
      <name>pRowSet</name>
      <anchorfile>unionMem_1_1@14.html</anchorfile>
      <anchor>acc2d8723030027461228e6d4b3807557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VdbeFrame *</type>
      <name>pFrame</name>
      <anchorfile>unionMem_1_1@14.html</anchorfile>
      <anchor>a7c49e0161d258fa4f6e167c89b523943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>r</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a89ce926e95eb6d3f75344fd6525229da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a478da33d1e83a23931b372f9ddc706f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>z</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a85c51a0b445063ba913693517860f5ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a5a613756e096c221ec68077c28424d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>flags</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a209bf3317161d1e33af9fe8b512f4974</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>type</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a6756879ca1e5fa71b12db25f981b7e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>enc</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>af437c99e92b8e729b70f82fa94e96bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDel</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a081ea2f86933d68a8940785b62f638ef</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zMalloc</name>
      <anchorfile>structMem.html</anchorfile>
      <anchor>a68cd8f196d9dc8ab27845e1b4abbc95c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MemJournal</name>
    <filename>structMemJournal.html</filename>
    <member kind="variable">
      <type>sqlite3_io_methods *</type>
      <name>pMethod</name>
      <anchorfile>structMemJournal.html</anchorfile>
      <anchor>a00c1523cce1bcfadc2b672b8703a78cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FileChunk *</type>
      <name>pFirst</name>
      <anchorfile>structMemJournal.html</anchorfile>
      <anchor>ade7a6dea7b38a8a86f33476ae207765f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FilePoint</type>
      <name>endpoint</name>
      <anchorfile>structMemJournal.html</anchorfile>
      <anchor>ac69637f95cfbce175cbeef00f71e59a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FilePoint</type>
      <name>readpoint</name>
      <anchorfile>structMemJournal.html</anchorfile>
      <anchor>a5645d38e1a488b62b5f63112628bf472</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MemPage</name>
    <filename>structMemPage.html</filename>
    <class kind="struct">MemPage::_OvflCell</class>
    <member kind="variable">
      <type>u8</type>
      <name>isInit</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a3ab4ace46245be0fb2fb19eaa2862019</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>nOverflow</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a3f7fa1a1eba3af840ef887e8ddd6d2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>intKey</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a46784c3c4708c7a582cff81a29c55323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>leaf</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>af18504bd0a2e7d39d9b485d434af0447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>hasData</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>af7b608d25c2e326f82cc270cd53dd8f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>hdrOffset</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a01967a1a593980fb71c8ccf3393ae156</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>childPtrSize</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>aeba10281fc255d9bbc0e31486f8fbd48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>maxLocal</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a36394b7c3abf4652e7a24be4ab314f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>minLocal</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a95cab31aa57bf8b478be273557c5c807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>cellOffset</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a324ed834d93c3ae72994fb5730940521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nFree</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a3418a9aee707f57a73d8470f8a1228a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nCell</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a35d1d8f836201b82b1eb778ce0e324f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>maskPage</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>aa3d64e8755cc9f431bbc8423a2b506ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct MemPage::_OvflCell</type>
      <name>aOvfl</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a4ac8901d1b123395f2abf3cc60105586</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>BtShared *</type>
      <name>pBt</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a949df1156f7392592eaeb64389068f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8 *</type>
      <name>aData</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>a2d873eff563d2208be0c24959140a4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DbPage *</type>
      <name>pDbPage</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>add322c1aed91e95d8dfe3ac3535d65b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>pgno</name>
      <anchorfile>structMemPage.html</anchorfile>
      <anchor>ad2b0c532abc799bbcf3b43df4f0b0546</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MemPage::_OvflCell</name>
    <filename>structMemPage_1_1__OvflCell.html</filename>
    <member kind="variable">
      <type>u8 *</type>
      <name>pCell</name>
      <anchorfile>structMemPage_1_1__OvflCell.html</anchorfile>
      <anchor>a75c64097a5af396bbdc30e859f33a7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>idx</name>
      <anchorfile>structMemPage_1_1__OvflCell.html</anchorfile>
      <anchor>ad10c93756d29693601aa63923a7fbee3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Module</name>
    <filename>structModule.html</filename>
    <member kind="variable">
      <type>const sqlite3_module *</type>
      <name>pModule</name>
      <anchorfile>structModule.html</anchorfile>
      <anchor>a65d2539d71ea028b505b2fb33563bfd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zName</name>
      <anchorfile>structModule.html</anchorfile>
      <anchor>a45a5f5b43926b8ebf3e13e46a6534810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pAux</name>
      <anchorfile>structModule.html</anchorfile>
      <anchor>ae3b827fee4c8b4f3ff38c86c2e2f48cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDestroy</name>
      <anchorfile>structModule.html</anchorfile>
      <anchor>a4be509110a1a2f2c06a5d69af45704ca</anchor>
      <arglist>)(void *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MyBlob</name>
    <filename>structMyBlob.html</filename>
    <member kind="variable">
      <type>Point&lt; double &gt;</type>
      <name>bCenterOfGravity</name>
      <anchorfile>structMyBlob.html</anchorfile>
      <anchor>a2ba20676fdf783807ace4402e04d4237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>bPointsInBlob</name>
      <anchorfile>structMyBlob.html</anchorfile>
      <anchor>a11be27d4679fbb2015ad57ee70e8543d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RectangularROI&lt; int &gt;</type>
      <name>bBoundingBox</name>
      <anchorfile>structMyBlob.html</anchorfile>
      <anchor>a58a7ad0916b64fea72a79f9f53b28ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bIsValid</name>
      <anchorfile>structMyBlob.html</anchorfile>
      <anchor>a23781c059ada8391a8cd7fd410286428</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MyOutput</name>
    <filename>classMyOutput.html</filename>
    <base>TCLAP::StdOutput</base>
    <base>TCLAP::StdOutput</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classMyOutput.html</anchorfile>
      <anchor>a00c319c0918018b67926f700e6d5e749</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classMyOutput.html</anchorfile>
      <anchor>a05e0982c45073c5bfdab003518e0d50e</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classMyOutput.html</anchorfile>
      <anchor>a23d76ae482bddd91276dd1a89fc8623b</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classMyOutput.html</anchorfile>
      <anchor>a00c319c0918018b67926f700e6d5e749</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classMyOutput.html</anchorfile>
      <anchor>a05e0982c45073c5bfdab003518e0d50e</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classMyOutput.html</anchorfile>
      <anchor>a23d76ae482bddd91276dd1a89fc8623b</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NameContext</name>
    <filename>structNameContext.html</filename>
    <member kind="variable">
      <type>Parse *</type>
      <name>pParse</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>a14635249bf75d5e18124089571dd2386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SrcList *</type>
      <name>pSrcList</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>a6ede21da33e2e9bd3d0c5fe90a3ec72c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExprList *</type>
      <name>pEList</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>a8c752d7fb9b28179156c569cc57ba6f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>ad68616ce2a58fa1b135e0dcf953bdc97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nErr</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>aba0b89b42e945c4c96d57a8fe011329c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>allowAgg</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>a78dc76c1493dd2f74f5f1ec661039665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>hasAgg</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>a6edabae39c69ad9a748f9ea519d9f56e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isCheck</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>a8098661d47980e74f56c686772dcaf85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nDepth</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>a8d817459b89601643a6f3db81c791397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AggInfo *</type>
      <name>pAggInfo</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>aeb3ff72c03dd770d421cadc2195a5644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NameContext *</type>
      <name>pNext</name>
      <anchorfile>structNameContext.html</anchorfile>
      <anchor>a82ce0ec8a3cc3d792e1f38bb5e0ad5fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Pager</name>
    <filename>structPager.html</filename>
    <member kind="variable">
      <type>sqlite3_vfs *</type>
      <name>pVfs</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>affa78e08a7f691a4c8f7043e0b4c9212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>exclusiveMode</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a5cbccc156e07d6226cb65a7ab05ac116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>journalMode</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a9ad7bd09f1c9323d943ee17ddf42e46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>useJournal</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>af7783f866150d7e322c28cb324ad85d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>noReadlock</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a4ae7a011ea151167eb864ddf3ec66e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>noSync</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ae943093a3ccbfbf264ccf3c8a52edac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>fullSync</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>abae5c9c3d85120ae266acc4c9a355b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>ckptSyncFlags</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a4543ec92953e7bda49b3ed4f0bdab890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>syncFlags</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ac7f90d27da63090369a0e44a0bceb525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>tempFile</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a9caa1abb43f6e839dd9a265c27b0b9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>readOnly</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ad7a7013309fd80a2a01844e69e8e7398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>memDb</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>abca3633b7745075aa5cf432b3fae54f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>eState</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>af03ee0ac77cf73453295ffcf43e46b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>eLock</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>afcaf60e4b0be0995c926e3357d4bbef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>changeCountDone</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a90c86a51ec6805d5702d32e456b0bcdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>setMaster</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>acd7eae0587c98ac41afab04e4b5defcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>doNotSpill</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a2f6579b3006b692a4ce1e5ad3e9a58ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>doNotSyncSpill</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a227d91995648a4e730d2adecc3533dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>subjInMemory</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a9205654b516184d84fde5c3b5f72ff77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>dbSize</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>afa5d7849190ef0a9a6f85bb15f2444b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>dbOrigSize</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a8f9cd11d6ae3fac48182e6eae0810c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>dbFileSize</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a1f8f55f49cb0ec91bfde4dca96a13f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>dbHintSize</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>aa99d74d10ef3cdcf61501f9777a0246b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>errCode</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>addaf9648a1111d7b6c85166cf7c7a575</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRec</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a3a202368c065a43695533503c98f28d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cksumInit</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ad799667658328a44b471378a1b99623e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nSubRec</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a670c4c54515c0257c35ddfc07c43763e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitvec *</type>
      <name>pInJournal</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a530ea868337a7c0c4e7c125035f73737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_file *</type>
      <name>fd</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a005ff1960fc1550a870cd1dae418c99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_file *</type>
      <name>jfd</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a81057c4420b8278e8141cf626abf4f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_file *</type>
      <name>sjfd</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a8196bcc97f184d480848895f71e080e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>journalOff</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ad3cffdc0987965fa6a472b19355f48df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>journalHdr</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a7f4a7f5f0245b063a82c185f40bad7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_backup *</type>
      <name>pBackup</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ae230d34da61bf28178fa1ac142a88c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PagerSavepoint *</type>
      <name>aSavepoint</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a4d5f4487316c026eceb8461e90fffcfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nSavepoint</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a020adae89ef6c1b28e51fffc3d4b22c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>dbFileVers</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>acf03a47838eee1cf474bb93dbc834b5f</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nExtra</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a44e153b2f756bfb86ab471c25893b3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i16</type>
      <name>nReserve</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a82581087240713cab679108e3adeaf58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>vfsFlags</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a36f3333fe82c70a46a99f2f8f289a971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sectorSize</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a4a47c73d7c18b803df33ba6c39baa5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pageSize</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a9cfb910e7eaf8442f5414d722232a6e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>mxPgno</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ad1d9a508ac764486a5eaef9b4f7781af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>journalSizeLimit</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ae381db4e0b49f92596b0cdeb279e6bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zFilename</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a2a55a044468f8658b7993e57087a5561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zJournal</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ab36ce1f606c407ad3fc56a3651f5a319</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xBusyHandler</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ac8477f7cc39fefd81b4089994e13d215</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pBusyHandlerArg</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a7a685e7a8dcbcd725c5a982fd8deb91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xReiniter</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a632d3c81743a7f9104337ae3d45af04c</anchor>
      <arglist>)(DbPage *)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>pTmpSpace</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a64934188c72599e0be9ae54d3fc1cc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PCache *</type>
      <name>pPCache</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ae2495e45e354e92a858144386f91cab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Wal *</type>
      <name>pWal</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>a2c759424108248d8b08e6f400fab14dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zWal</name>
      <anchorfile>structPager.html</anchorfile>
      <anchor>ac63ab281e48f9ac8521b85c1a90475b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PagerSavepoint</name>
    <filename>structPagerSavepoint.html</filename>
    <member kind="variable">
      <type>i64</type>
      <name>iOffset</name>
      <anchorfile>structPagerSavepoint.html</anchorfile>
      <anchor>ab3ee7b75a10f47a82c8e3312bee6ad60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>iHdrOffset</name>
      <anchorfile>structPagerSavepoint.html</anchorfile>
      <anchor>ae1afd1cf4fba6f7efd232656366121d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitvec *</type>
      <name>pInSavepoint</name>
      <anchorfile>structPagerSavepoint.html</anchorfile>
      <anchor>abf7d6dc9d457c866727f84c4b9e0348f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>nOrig</name>
      <anchorfile>structPagerSavepoint.html</anchorfile>
      <anchor>a944cca2844a51bdba253476f516b9865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>iSubRec</name>
      <anchorfile>structPagerSavepoint.html</anchorfile>
      <anchor>ac1accce313b9da31631892e2cbe85a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>aWalData</name>
      <anchorfile>structPagerSavepoint.html</anchorfile>
      <anchor>ac96cff844a24378c426a9901517f1d6c</anchor>
      <arglist>[WAL_SAVEPOINT_NDATA]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ParameterSet</name>
    <filename>classParameterSet.html</filename>
    <member kind="function">
      <type>void</type>
      <name>WriteFile</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>af4ed87d791eb8dd4006866261cf5c685</anchor>
      <arglist>(std::string pathAndFileNameToWrite)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mCreateIntermediateImages</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>abc95849f17490d967ff98ba1609b938a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mCreateLinksForReportImages</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a0ea75e5552a2feefc3c652d2f49e62f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mCreateVideo</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>afc95c0910c8776c0b748d1d9d3b8f92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWriteIntermediateValuesToFile</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a1f1bac7de0a105d8f42cdb036f32645c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWriteStatisticsValuesToFile</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ac5335f261d254729fcd886995378f4ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWriteDiagnosticFiles</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>af56a3d83999a3d34fef87efa65efabea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWriteProgressToConsole</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>af0281cac0225f33db59b29007fdb6487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformHoleDetection</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ab29d70dcbc80ccc41351ff4eafbc854f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformBranchCheck</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a22480c87d0552e6321a27090a97d5fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformGridAlignment</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a48aee71f2d854011fead95bd48511acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mCreateIntermediateImagesValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a1096ccff4d862421f4aaa5ab747c8a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mCreateLinksForReportImagesValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>adb581b10f8ea6b55478d09787e2f3ea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mCreateVideoValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a16a9dbb50d41f08cd14df9e1c73c8057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWriteIntermediateValuesToFileValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a4005003c90d8dd2aa6ffa4039b329da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWriteStatisticsValuesToFileValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a19d3d78b0932d959db1dd844b4ffa48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWriteDiagnosticFilesValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ac3021744b682914150062cc62c73a458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWriteProgressToConsoleValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a506def6523545c6bfd409f3efca01189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformHoleDetectionValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a568945952d8e74bef33265eee85bd642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformBranchCheckValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>acd8504d3ff4b6164ca474d3360fc06c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformGridAlignmentValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a312c8c9b8e9b8db49bd6e8d113f0689e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mAllowDistanceBetweenContourAndWidth</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a4e907a51aeaf54202172088fd4f8150c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformYarnStraightnessCheck</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ae6eb8b7226083efc47629bfa1418961c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformYarnStatistics</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a7130ab1a4b6ee710fce0b37e5d45cfdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mAllowDistanceBetweenContourAndWidthValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ac9847949c0dad102ca99ccdd04f91bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformYarnStraightnessCheckValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>afa8bdc6e34ebe467dba312be4e9c5ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformYarnStatisticsValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ada7a059581f4bce3ed8fc4e68e49fbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mRiskHolesInterval</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a21e2f22540fc37f2ad69237498502d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mRiskWidthInterval</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a8cd952e8d969317bdc6b395df1cb2c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mRiskPositionInterval</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a0fca7fa14565a1e08ca746f6c188b7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mRiskHolesIntervalValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a37f19dab1068bbf91d6248a26aabc4c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mRiskWidthIntervalValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a41486f15a66dd8f81f80367f2fd89fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mRiskPositionIntervalValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a13677c78ce299afbb0984eab72056028</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mStartNrImage</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ab9114081d6e40e6869aa019a8492a2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mMaxNrImages</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a7ab9f1c931bf521f3280f7f904ef06e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mBufferSize</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a355352829e0d5b2b3ab86942b29e2a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mStartNrImageValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>af121a47f1c0b3f72f4a8814be4099040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mMaxNrImagesValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a92583aaf0e8fe4d59947c9a45e782bb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mBufferSizeValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ae8c9c21f114fb2eef9dca3436fdc7858</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformDeltaYCheck</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a9701af057dc40c12ff659eababc66e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mDeltaYThreshold</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a6f4730d60600e52253f479af8bea10e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mNumberOfDeltaYViolationsThreshold</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>aa0bd950779c7505ccf4b2305a5c7c03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mPerformDeltaYCheckValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ab2e2b6af30d1dfe52dcb816403ced868</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mDeltaYThresholdValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a7bab4b9baff3ed98f9d48d95a0d7a480</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumberOfDeltaYViolationsThresholdValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a7c4f8de3d2668ce29f87981fd1945363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mHoleThreshold</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a1f408cbf0426a59173e23c47a265d51e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mSigmaX</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a8ca80c82df0062aaed54f9442fc7e415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mSigmaY</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a2a180c263536674827162523c3d3e44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mResponseThresholdFactor</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>acf068e9aebb14495c008c3a9cfc08e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mUseCombinedAnglesForTracing</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>afaf055a340820de646902ccf7ed8adbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mAngleToleranceFactor</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a6daeffcbdf504cafeb33f2f577dc1988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mAlphaStraight</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a780c275425a180ea70895e82bcae7422</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mAlphaNotStraight</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>aaffc2e533592aafaf2d9e5f93e147334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mDefectiveWidthThreshold</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a777ee716dca7251b4e60e0c1380c544f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mMaxNrDefectivePixels</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a3961e4985777772032cfb188a00d4d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mSaturationThreshold</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ae4ff5c85cefd8da372bdb54b99882532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mHoleThresholdValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a7e3e686b3adb3bdd207e6a868855a8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mSigmaXValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a6528b61c05c92e8d3edea46e0a92acb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mSigmaYValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a0b0353555ae8d065fb125c2b7604932a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mResponseThresholdFactorValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>aaf11998b3876c8748cb74adf1eab9f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mUseCombinedAnglesForTracingValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a8fe260cd006bb69deeca6f93c9bf3092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mAngleToleranceFactorValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ad38511e8aed238b2ce24c1a577a4852b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mAlphaStraightValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>aa924e471137423d5a9ba0581803fc6fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mAlphaNotStraightValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a96618b9b0b06aa4864cd643a361bbf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mDefectiveWidthThresholdValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a4e60eb73464afa559c692c59d356a239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mMaxNrDefectivePixelsValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a62630225ef2999f5178c069790c8aec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mSaturationThresholdValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a93a88ae87fb4cfa1d821216484620edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mIntervalWidth</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a13997be5b9489ab029cf8591f680b56b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mIntervalHeight</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a1e1566bf5203e7f51677894906a3872a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mNrFilesForTraining</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a6386bc399747880908386133ee06a9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mWidthStatisticsLength</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a10a55fb6c33d1b09bfc1e7a1ed6cf2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mYarnStraightnessAveragingWindow</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>acd4f431ca3d2ec245e959fa324199b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mYarnStraightnessThreshold</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ac8d6b4f1d9713aa0630ab1f6c2b9b51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mIntervalWidthValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a57cbdc6b3466c6b7d30fe812dcede923</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mIntervalHeightValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>ac40b0c4d1da4b3a96dca3305a232ec55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNrFilesForTrainingValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a407584091713100edf8aa07ff1aae0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mWidthStatisticsLengthValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>a37d2357129beead60ad84156a61cc6d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mYarnStraightnessAveragingWindowValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>afa68b3283b5e6ce0b3028d0e7f3b0091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mYarnStraightnessThresholdValue</name>
      <anchorfile>classParameterSet.html</anchorfile>
      <anchor>af7963a080a2f075b5f6380b739a19f25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Parse</name>
    <filename>structParse.html</filename>
    <class kind="struct">Parse::yColCache</class>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a44364e5e1197927f89864ec345bc5491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rc</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a897c2ea40a1065d49a134f18ca251637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zErrMsg</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a04146757986ff4654c7b321654896e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vdbe *</type>
      <name>pVdbe</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a81774053fd5063046f532c07e3daa98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>colNamesSet</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a4c71fde634168abc1e3e32c70704b1ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>nameClash</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a7181d6ce88c6ebef5f774148632dec91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>checkSchema</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a13b660ed90fc83565aa542a10549ec9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>nested</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a33d62687b6d368acf94e954490358819</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>parseError</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a88a55ea01daa87419b1f85d38a08cd90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>nTempReg</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ae292001c732781b6b94d28ca303e1aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>nTempInUse</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a40c148052fab032ca5110052c6be97d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>aTempReg</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ae2bd2e74d0caaab7a741d17b62f01ebc</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRangeReg</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ae32922d3d20171f4acc426714b497e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iRangeReg</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a715f56a596d5172926c20dd7f91600b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nErr</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ac7206f0c7e580ab32b7dfb20950bb1c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nTab</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a6b3a46e1f275962fa8808dddba20ba23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nMem</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>aa66b48b0ababc17403615c899cddec9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nSet</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ac84102ff47885dfa854de5af1d15605b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ckBase</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a07e8e916fb569a86acfa5f380afaaf77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iCacheLevel</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a5b06d03e7605a6f55369481c050ac0a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iCacheCnt</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ac4633493fd5f100fa823344be1c19d1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>nColCache</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a23b721a6d1beab831c1b88ebbf30f57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>iColCache</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a619672481a55a6e31bc03c00d1d6954c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Parse::yColCache</type>
      <name>aColCache</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a788b85979d58b84e06bc367bac5b3f3f</anchor>
      <arglist>[SQLITE_N_COLCACHE]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>writeMask</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a026177f2db1edd3fe2ca69ef683ebb75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cookieMask</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>aed208e9a47fbcf93b91aa08ef9ff90e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isMultiWrite</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a027d06007eab8e01b8930357f321344b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>mayAbort</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a1813c80797fcdba29e95813284619e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cookieGoto</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a38a03495b8b18e86c2855c70b717d921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cookieValue</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a6023169734f87ce27a760e0f9026c381</anchor>
      <arglist>[SQLITE_MAX_ATTACHED+2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nTableLock</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a8c61b1b13dcb394b190fa09f5c253928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TableLock *</type>
      <name>aTableLock</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ae8e553d660dc69d285945d3db8f127c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>regRowid</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a63f71c268a7a77cb0df5619dd8ebbacd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>regRoot</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>afcf3d47e9424b79e6911cf366cb73bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutoincInfo *</type>
      <name>pAinc</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a23de0e2b2dc60ac5f5932c5b2cd34f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nMaxArg</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>aab781bff62f93c0f9a7ca979a3b3a820</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Parse *</type>
      <name>pToplevel</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a739df7b56510f22e64aba1ed203fec76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pTriggerTab</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>aad9b1145e39b240e842f9c2ad8e7e230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>oldmask</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>acda3334b932ac6541f45fa939053e942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>newmask</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a698d9e9d4938cc35a4ef9137a46f1840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>eTriggerOp</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>addd3028173ab100a8802dfcc9b13ffb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>eOrconf</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a67083fd2286b7d5276831e84a1a16680</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>disableTriggers</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a5ea9b658f4cfacf4b35f18c51e144ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nQueryLoop</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a8b6b486066f71bdf750de91be23e3e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nVar</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a088771dc116d91113bed715a1968d42e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nVarExpr</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a4d5051bb0608f0766e859fb38ed41dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nVarExprAlloc</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>adad4778e7658569016747818aad1bb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr **</type>
      <name>apVarExpr</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>accb46003a1f43d6e3da1a336303da6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vdbe *</type>
      <name>pReprepare</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a5e250f77353fb3df6660ff29ffa53790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nAlias</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a47336e4cdbb0edeeac919980c8cde018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nAliasAlloc</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ae9fd11b4a9be965fe741d9d9bb83bbfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>aAlias</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a5d59266be4e256238d3bbdf1a9ff7d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>explain</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a41f7ea55f0d6523295a5d958e25a2787</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Token</type>
      <name>sNameToken</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>afd929c54566cfc4d6f748fcc6b79b973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Token</type>
      <name>sLastToken</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>ad499020d1bf06f3c98c8d36e2ceb83fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zTail</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a14f58728b3ae2a297272510ae4bd9a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pNewTable</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a4788769c077dc86ffa3ee1e40ed6b4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Trigger *</type>
      <name>pNewTrigger</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a92ea8f2ac3190dd7c8360e0334ae78b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zAuthContext</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a12c6e2fb69848bcc57169d44993c351f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Token</type>
      <name>sArg</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>aa3fe38b31dd1cd0fbea4de0e77891642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>declareVtab</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a86c869df65cd788025680de9b6a9b1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nVtabLock</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a7db8fe1ce2f0ec6bda7dc729a0e6a6e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table **</type>
      <name>apVtabLock</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>acdfd318c0f04ec640d6affc85ef8a009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nHeight</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>af4ec053d44a2a3bc8ae82b69a7327c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pZombieTab</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a4e8319f0a7f0d21e472c13ac6cf67060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TriggerPrg *</type>
      <name>pTriggerPrg</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a0891dbd3b583594c5d07d7b061026ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iSelectId</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>a7474fa0bf9ad160cbdf723406c306d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iNextSelectId</name>
      <anchorfile>structParse.html</anchorfile>
      <anchor>aab76240bd43c005941431179d4f9bf49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Parse::yColCache</name>
    <filename>structParse_1_1yColCache.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iTable</name>
      <anchorfile>structParse_1_1yColCache.html</anchorfile>
      <anchor>a7d99a4e00555cb0ff7fb3990bb7b549e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iColumn</name>
      <anchorfile>structParse_1_1yColCache.html</anchorfile>
      <anchor>a67bdb189ef88aca5fc30b551da9a0f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>tempReg</name>
      <anchorfile>structParse_1_1yColCache.html</anchorfile>
      <anchor>a61561cab1ce2e1914083777ae84c8fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iLevel</name>
      <anchorfile>structParse_1_1yColCache.html</anchorfile>
      <anchor>a656ea77cf538db00249221de58fd9066</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iReg</name>
      <anchorfile>structParse_1_1yColCache.html</anchorfile>
      <anchor>aadb47e545234142bd1e9ca4803953ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lru</name>
      <anchorfile>structParse_1_1yColCache.html</anchorfile>
      <anchor>ac163bb2b692f3037054f92294322f999</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PCache</name>
    <filename>structPCache.html</filename>
    <member kind="variable">
      <type>PgHdr *</type>
      <name>pDirty</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>a1c692ce92c7d3fc7c6c1324d5658b252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr *</type>
      <name>pDirtyTail</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>a8eaca309bfb8fa49e7c5e77dd3398bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr *</type>
      <name>pSynced</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>a607eabd6768dd8df47d8fa353542b106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>a8270710a90112645a69cea03ab5a2d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nMax</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>aa8797980e4f40eb9cc79afd41b0b279b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>szPage</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>abb0bd0a3292780dcc07cb59bc577990d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>szExtra</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>abcb37fcd3ea098b98a196a3f69e3c135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bPurgeable</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>a6dbb1820ecbfb378841ee81186ea5902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xStress</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>a8b177ebb03aaf4774b6137d48733eeb5</anchor>
      <arglist>)(void *, PgHdr *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pStress</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>af04a2ea8a2c6d6b3eea7bb7051b8f447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_pcache *</type>
      <name>pCache</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>ad0248655d30d327e0eeced6c3651b161</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr *</type>
      <name>pPage1</name>
      <anchorfile>structPCache.html</anchorfile>
      <anchor>a190ece57aafde4310e424f82998776cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PCache1</name>
    <filename>structPCache1.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>szPage</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>a1425039a858b7518c097d8ae92597de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bPurgeable</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>a2af7d24e27369252addec9bef45afcfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nMin</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>a9e96c79ec60c2e368f92a2ba52d01c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nMax</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>aef08139a0b86b0c0a7ee2bec0bab2405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nRecyclable</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>a3501394bd251f08d1f9d26d3b2d4c67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nPage</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>ace332c276e28352992529f60f0ac457c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nHash</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>a09d9488a8a3a52822e33dd43e14c69e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr1 **</type>
      <name>apHash</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>a1169ec7ba2a628d89841d16ced651e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>iMaxKey</name>
      <anchorfile>structPCache1.html</anchorfile>
      <anchor>a2dff616ad2d1873ad3a8d20d53bcb4d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PgFreeslot</name>
    <filename>structPgFreeslot.html</filename>
    <member kind="variable">
      <type>PgFreeslot *</type>
      <name>pNext</name>
      <anchorfile>structPgFreeslot.html</anchorfile>
      <anchor>ac38a6e51f86c650fb943585d7b6c8b70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PgHdr</name>
    <filename>structPgHdr.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>pData</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>a0f9f2ac8492c0cdad5898036db20b798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pExtra</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>a8ff7430ed04077f1ae20d10801968164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr *</type>
      <name>pDirty</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>a7732b1c0f19d9555ac93d4879fc95bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>pgno</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>ab6e2223e410acf9bae7f12f1b1293589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pager *</type>
      <name>pPager</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>aaa4879a9510c8a819a1e10a8ee21495b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>flags</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>a8ef58380f7e04f1e3c76fa208e227f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i16</type>
      <name>nRef</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>ac68c685d117788c18849e8853dd419d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PCache *</type>
      <name>pCache</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>a557aeaddd1b0805815ce06f1bfd27782</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr *</type>
      <name>pDirtyNext</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>a61b56eb694ce445799963f7eb912e367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr *</type>
      <name>pDirtyPrev</name>
      <anchorfile>structPgHdr.html</anchorfile>
      <anchor>a8392b45bb05d88c734020beb912304dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PgHdr1</name>
    <filename>structPgHdr1.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>iKey</name>
      <anchorfile>structPgHdr1.html</anchorfile>
      <anchor>ad122ef74f5f0137414882aabd111a01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr1 *</type>
      <name>pNext</name>
      <anchorfile>structPgHdr1.html</anchorfile>
      <anchor>acde43ab0ed0fbba33e526058d9c343b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PCache1 *</type>
      <name>pCache</name>
      <anchorfile>structPgHdr1.html</anchorfile>
      <anchor>aa5b23de466773e72e1b6edf07b3a4570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr1 *</type>
      <name>pLruNext</name>
      <anchorfile>structPgHdr1.html</anchorfile>
      <anchor>ae22cfc3a39fe029a8f8fdd70e7ca4055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PgHdr1 *</type>
      <name>pLruPrev</name>
      <anchorfile>structPgHdr1.html</anchorfile>
      <anchor>adf220ef63d6ceb782ac87a08aeb1722d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Point</name>
    <filename>structPoint.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structPoint.html</anchorfile>
      <anchor>a05dfe2dfbde813ad234b514f30e662f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structPoint.html</anchorfile>
      <anchor>a6101960c8d2d4e8ea1d32c9234bbeb8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>qParam</name>
    <filename>structqParam.html</filename>
    <member kind="variable">
      <type>union qParam::@18</type>
      <name>inPtr</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>ad9d6f037fd8a0e499c505b222aa832a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short *</type>
      <name>s</name>
      <anchorfile>unionqParam_1_1@18.html</anchorfile>
      <anchor>afc71031f715829be63c9069af56a4f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>f</name>
      <anchorfile>unionqParam_1_1@18.html</anchorfile>
      <anchor>a1226c895675e246f68fced86f5247e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union qParam::@19</type>
      <name>outPtr</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a15afa4ea355aeaaabd23afd5066ab94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short *</type>
      <name>s</name>
      <anchorfile>unionqParam_1_1@19.html</anchorfile>
      <anchor>ad78e6ecd3db04e9c7c6a2a6bdf4f6809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>f</name>
      <anchorfile>unionqParam_1_1@19.html</anchorfile>
      <anchor>a8e11dc87e6adabf4734728fb440534a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>tstMsk</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>abc7a030f38cd4578d0eecfbab689d8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>refMsk</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>ae243e9d2bd3527325c52b084a8ea6b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fileName</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a7f92c02a6d04d199dbf96b61d7f70fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum qBrands mode</type>
      <name>labels</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>ac6bbb21d15c69abcbcc354387a0fbc1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>entropy</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a0ca12e895800ce7603a55d3510def0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mse</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>afb53dd3e67bd424d23aa8b8e02a1ddd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>snr</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a0d20550b459d6907b1d82961ed6e0212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsilon</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>aa89945a4b7cb6ee1b7a205af3d1a3d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>threshold</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>abdbfaa02fb780fbb40db9b507a67fd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>foregrnd</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a3cb7553eea6f7c423c0b0eb64af4a06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>backgrnd</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>abf9e0b6eae033f1d2ee240b40d9e91f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>oMin</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a86662018197b56e0faadadbb3d3d1384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>oMax</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>adc6eabaf98dc3dc5e4a433eec046fe81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>floatInput</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>aff516c96e7c944404263e4f7676eb78e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>floatOutput</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a0802d87b453ac7c62bb484d8f2bc964d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nx</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a2914e6c7b396aea0f42720327b05d7fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ny</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>ae2c989e3426ef561a9a20887358c5bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nz</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a709216cc2c183da2dbe5b8adca4399d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>parzenDegree</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a59cf76b66fcc5ee91f01e406a316cd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>iMin</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>af4969d755f72f70aaa6b698cac8b2607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>iMax</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a0d83bb6b37f638472ef2f92a40f040e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>first</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a21744a22cff8fa18bf72e39fea41ed40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>step</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>a87dbb9f6f91d8a2b7197dbd97b4cc376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>bins</name>
      <anchorfile>structqParam.html</anchorfile>
      <anchor>abaa57d74732e942ec109872ea4ed2a16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Random</name>
    <filename>classRandom.html</filename>
    <class kind="struct">Random::dSquared</class>
    <member kind="function">
      <type></type>
      <name>Random</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a79e25c5b2fe5e43dd77627378939660e</anchor>
      <arglist>(long seed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Random</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>aa61dcc20537e03b1501c901b9bc8f384</anchor>
      <arglist>(const Random &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>Random &amp;</type>
      <name>operator=</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a121d77ccc56b66542f83a891e9cf303b</anchor>
      <arglist>(const Random &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a3dc5a087c9b83bace8fb851989925b3a</anchor>
      <arglist>(long seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>abf0ad5327bf036ce5bc974c3a320c9f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>arcsine</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a1ae471d1b0e37bc5b567ee5dba12e5be</anchor>
      <arglist>(double xMin=0., double xMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>beta</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a0d41e1fbc5395eaa4220c6143c1b51bf</anchor>
      <arglist>(double v, double w, double xMin=0., double xMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cauchy</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a8839841f5f01450bd12ff7a62223b2c3</anchor>
      <arglist>(double a=0., double b=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>chiSquare</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a74d97a87e9862c9ce1678bca140a9d86</anchor>
      <arglist>(int df)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cosine</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a47cd4c801fa87e970030ae2538121bca</anchor>
      <arglist>(double xMin=0., double xMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>doubleLog</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>aca3c435d30b3348e0ec9fbebe934e6bd</anchor>
      <arglist>(double xMin=-1., double xMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>erlang</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a465040b6470813c7ed3fce6134f73369</anchor>
      <arglist>(double b, int c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>exponential</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a998f1da1738f6e8bfbed6b93641a15cc</anchor>
      <arglist>(double a=0., double c=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>extremeValue</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a120805ee409a608cddc7dc7689bee229</anchor>
      <arglist>(double a=0., double c=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>fRatio</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a3775fc1f9158f8d5ebbb02fb50f9e153</anchor>
      <arglist>(int v, int w)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>gamma</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ad7f72d880661ea36ae5e494d356c4be7</anchor>
      <arglist>(double a, double b, double c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>laplace</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ac91158c0c23f67c0a4876f9ffc9c4305</anchor>
      <arglist>(double a=0., double b=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>logarithmic</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a4d5e60d650d1a2557c74870a3a8d20fd</anchor>
      <arglist>(double xMin=0., double xMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>logistic</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>adc5cbc46a921792cc8f6bcebcbdbad27</anchor>
      <arglist>(double a=0., double c=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lognormal</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>afeed9a6dafc7c906c0f24ea3ee60dbae</anchor>
      <arglist>(double a, double mu, double sigma)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>normal</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a520b3d6747869379f05a7e2232ceaf8c</anchor>
      <arglist>(double mu=0., double sigma=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>parabolic</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a88508bd63c66e7123c3b93d126845e71</anchor>
      <arglist>(double xMin=0., double xMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pareto</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a9eb5d757daaf7d84e05f7c07637b7de3</anchor>
      <arglist>(double c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pearson5</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a5deb7b6cfc3bb6d926170f21307f6d08</anchor>
      <arglist>(double b, double c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pearson6</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a2617eb32c10c8c7128182c50a7edbd3f</anchor>
      <arglist>(double b, double v, double w)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>power</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a6d6ed37dce481c55a99111271eda821f</anchor>
      <arglist>(double c)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rayleigh</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ae7739ded4eb7315ab5d205982a4b28d6</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>studentT</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ae76de901ffa3895228fa1231836a318d</anchor>
      <arglist>(int df)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>triangular</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a6ea96c716e7bb37c0b8921b413fe0a06</anchor>
      <arglist>(double xMin=0., double xMax=1., double c=0.5)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>uniform</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a8ff91690c6a99b80f5da078d3c9dd491</anchor>
      <arglist>(double xMin=0., double xMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>userSpecified</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a4f042aba7670944069819f5bb2e5f743</anchor>
      <arglist>(double(*usf)(double, double, double), double xMin, double xMax, double yMin, double yMax)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weibull</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ae59980fee6097f592636a991fa2d147e</anchor>
      <arglist>(double a, double b, double c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>bernoulli</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a871f3607c779d13d76f3b52d07a18cf6</anchor>
      <arglist>(double p=0.5)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>binomial</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ac6495506a148e7b18f9d7b067030609c</anchor>
      <arglist>(int n, double p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>geometric</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a77a14975ccb53764ee22cb0af54ebb84</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hypergeometric</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a844a67e29d94dc13d276ae235eb01d4e</anchor>
      <arglist>(int n, int N, int K)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multinomial</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a86403b68973930261fcf4d8d09de70c1</anchor>
      <arglist>(int n, double p[], int count[], int m)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>negativeBinomial</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a2b90a4650b378899f021df5ad0685c08</anchor>
      <arglist>(int s, double p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pascalDistribution</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a5570ab422fa63a161b58b2986294c655</anchor>
      <arglist>(int s, double p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>poisson</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>af8c61f5db76609c69f17cce9f21f60bd</anchor>
      <arglist>(double mu)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>uniformDiscrete</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ab52a49f0037d562b375b9d7e88dbb632</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>empirical</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ae5cd108bfba6b427d02e99756107d836</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empiricalDiscrete</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a1c3a54844ed888b75bb08147ce0d7436</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sample</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a967e99fe1651bd6579c3655e0dcb27de</anchor>
      <arglist>(bool replace=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sample</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>abd7ce835f1fbe92605216c11cf5143c2</anchor>
      <arglist>(double x[], int ndim)</arglist>
    </member>
    <member kind="function">
      <type>cartesianCoord</type>
      <name>stochasticInterpolation</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a5b2ed5a47e8605f6734dcb463022a2ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>cartesianCoord</type>
      <name>bivariateNormal</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>aeb0c2edb33f0b2e6a74d9543b85b4fb9</anchor>
      <arglist>(double muX=0., double sigmaX=1., double muY=0., double sigmaY=1.)</arglist>
    </member>
    <member kind="function">
      <type>cartesianCoord</type>
      <name>bivariateUniform</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a13412c8c707e2b7732912effca928ef9</anchor>
      <arglist>(double xMin=-1., double xMax=1., double yMin=-1., double yMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>cartesianCoord</type>
      <name>corrNormal</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a08aac392a67f0629e6b107492f9ce026</anchor>
      <arglist>(double r, double muX=0., double sigmaX=1., double muY=0., double sigmaY=1.)</arglist>
    </member>
    <member kind="function">
      <type>cartesianCoord</type>
      <name>corrUniform</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ac79489e45d8a59b225106694d78fdffa</anchor>
      <arglist>(double r, double xMin=0., double xMax=1., double yMin=0., double yMax=1.)</arglist>
    </member>
    <member kind="function">
      <type>sphericalCoord</type>
      <name>spherical</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>aa606378350a39a50bef451cb5c23c7fa</anchor>
      <arglist>(double thMin=0., double thMax=M_PI, double phMin=0., double phMax=2.*M_PI)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sphericalND</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a5209a6804f074a40a7440a201dcf909c</anchor>
      <arglist>(double x[], int n)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>avoidance</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>aa104625e2ef6bc938287c8916fa6d45b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>avoidance</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ac3992b036bbf693944b89e1cff19922f</anchor>
      <arglist>(double x[], int ndim)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tausworthe</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a9b2abc6e8e0f39b901adf04171116dfc</anchor>
      <arglist>(unsigned n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tausworthe</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a244616f39e2189a8bd83f00aa5f0c434</anchor>
      <arglist>(bool *bitvec, unsigned n)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ab6671bf1a17e69635f071d1f3106e338</anchor>
      <arglist>(const Random &amp;p, const Random &amp;q)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>ae8480058e885d08e323e13380082309b</anchor>
      <arglist>(const Random &amp;p, const Random &amp;q)</arglist>
    </member>
    <member kind="friend">
      <type>friend istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classRandom.html</anchorfile>
      <anchor>a5fe5b67b30386d6a8104c2e7d651ad50</anchor>
      <arglist>(istream &amp;is, Random &amp;rv)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Random::dSquared</name>
    <filename>structRandom_1_1dSquared.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structRandom_1_1dSquared.html</anchorfile>
      <anchor>ade0935c572c71200cf1afe57306e0418</anchor>
      <arglist>(cartesianCoord p, cartesianCoord q)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RecursiveLeastSquares</name>
    <filename>classRecursiveLeastSquares.html</filename>
    <member kind="function">
      <type></type>
      <name>RecursiveLeastSquares</name>
      <anchorfile>classRecursiveLeastSquares.html</anchorfile>
      <anchor>ac57534ccf42cc4755aeb8f7a42cf04a6</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pDataGrid, int fittingOrder=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecursiveLeastSquares</name>
      <anchorfile>classRecursiveLeastSquares.html</anchorfile>
      <anchor>aa687661c7561e294a73d37e76b8a62c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>FindRealY</name>
      <anchorfile>classRecursiveLeastSquares.html</anchorfile>
      <anchor>aee094ce2cf679f01a51996ef9b2e5cc9</anchor>
      <arglist>(int x, int yEstimated)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetStartPoint</name>
      <anchorfile>classRecursiveLeastSquares.html</anchorfile>
      <anchor>a5e3f1e3cfaf87fe1d735edc46740fac9</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; int, int &gt;</type>
      <name>EstimationStep</name>
      <anchorfile>classRecursiveLeastSquares.html</anchorfile>
      <anchor>adeddf7b7650ac88efaeba6f4dfc9f6ec</anchor>
      <arglist>(int x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>response_t</name>
    <filename>classresponse__t.html</filename>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>ad42652e0fee042dffd7baeb317835011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a2da4768238b0e94036f9ee13bb6c775b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>local_maxima</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>ace413ddf4534f4fd2796e9f1a840d4a1</anchor>
      <arglist>(signal32_t &amp;y_max, signal32_t &amp;d_max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>global_maximum</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a64078f5868d636b46ff0011be490b398</anchor>
      <arglist>(int &amp;ymax, int &amp;dmax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_responsed</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a6b73b12cba38b3302f2644bea202bd78</anchor>
      <arglist>(signal32_t &amp;responsed, signal32_t &amp;responsedmin1, int d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>acc5c3c830cc265d59f12869b642856a1</anchor>
      <arglist>(Mat &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>response_t</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a3733a71c5f205a7dbf1bf224dae6de9e</anchor>
      <arglist>(signal32_t &amp;_in, signal32_t _input_integral_buffer, signal32_t _response_buffer, int _c, int _min_d, int _max_d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>ad42652e0fee042dffd7baeb317835011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a2da4768238b0e94036f9ee13bb6c775b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>local_maxima</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>ace413ddf4534f4fd2796e9f1a840d4a1</anchor>
      <arglist>(signal32_t &amp;y_max, signal32_t &amp;d_max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>global_maximum</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a64078f5868d636b46ff0011be490b398</anchor>
      <arglist>(int &amp;ymax, int &amp;dmax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_responsed</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a6b73b12cba38b3302f2644bea202bd78</anchor>
      <arglist>(signal32_t &amp;responsed, signal32_t &amp;responsedmin1, int d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>acc5c3c830cc265d59f12869b642856a1</anchor>
      <arglist>(Mat &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>response_t</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a3733a71c5f205a7dbf1bf224dae6de9e</anchor>
      <arglist>(signal32_t &amp;_in, signal32_t _input_integral_buffer, signal32_t _response_buffer, int _c, int _min_d, int _max_d)</arglist>
    </member>
    <member kind="variable">
      <type>signal32_t &amp;</type>
      <name>input</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>ac1793431761312293abfd3e909f09ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signal32_t</type>
      <name>input_integral</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>af09a283839839b4f583c3172b7c0668f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signal32_t</type>
      <name>response</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>aa68496fa40e5788535a33dd7a1b3fda1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>c</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a0bb1b45a3e29d6bccd58db03e5a804e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min_d</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>af7e4bdc863d00f4890e3c59eaef13681</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_d</name>
      <anchorfile>classresponse__t.html</anchorfile>
      <anchor>a927fca6490c35c88cd9225e3fe32e3de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResultReporter</name>
    <filename>classResultReporter.html</filename>
    <member kind="function">
      <type></type>
      <name>ResultReporter</name>
      <anchorfile>classResultReporter.html</anchorfile>
      <anchor>afb46619a28e12e81e10e74e71fe571c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteLegend</name>
      <anchorfile>classResultReporter.html</anchorfile>
      <anchor>a58ef5352689f933e8870118f9cb07176</anchor>
      <arglist>(std::ofstream &amp;ofp, BatchParameters *pBP, std::vector&lt; std::string &gt; fileList)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteYarnPositionAndLocalWidths</name>
      <anchorfile>classResultReporter.html</anchorfile>
      <anchor>ae53d52d8c7fa8cddfd71908d480da907</anchor>
      <arglist>(YarnResults *pYarnStatus, int frameNr, BatchParameters *pBP)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteResultsOfYarnToFile</name>
      <anchorfile>classResultReporter.html</anchorfile>
      <anchor>a20d87fe8605b8eb19a3bc93400b7e275</anchor>
      <arglist>(std::ofstream &amp;ofp, YarnResults *pYarnStatus, int frameNr, BatchParameters *pBP, bool isGoodYarnAccordingToStatistics)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteClassifierFeaturesOfYarnToFile</name>
      <anchorfile>classResultReporter.html</anchorfile>
      <anchor>a3065c310de3f03a24848a42ad1d1319d</anchor>
      <arglist>(std::ofstream &amp;globalFilePointer, YarnResults *pYarnStatus, int frameNr, BatchParameters *pBP)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>MakeReportInFile</name>
      <anchorfile>classResultReporter.html</anchorfile>
      <anchor>abf1e4271bafbcdb31060b047e751df16</anchor>
      <arglist>(std::ofstream &amp;ofp, std::vector&lt; int &gt; foundErrorFrameNumbers, BatchParameters *pBP)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>MakeReportOnConsole</name>
      <anchorfile>classResultReporter.html</anchorfile>
      <anchor>a91079148378a3afc004b6d146e6ee69d</anchor>
      <arglist>(std::vector&lt; int &gt; foundErrorFrameNumbers, BatchParameters *pBP, std::string reportExperimentOutPath)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rOper</name>
    <filename>structrOper.html</filename>
    <member kind="variable">
      <type>enum mBrands</type>
      <name>maskCombine</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a55f99831a4a965a6c2aab44cd6a8204c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum kBrands referenceMask</type>
      <name>testMask</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a4061ea9a5a64dfe20d0dff1b57991502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum iDegree</type>
      <name>interpolation</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>afd190896ad288caabe3e2c0326e32880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum cBrands</type>
      <name>convergence</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a895ac4c7ca1fed723d0684708795d886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>clipping</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a875b129655818bb915dd178e764f7c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>importFit</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a7ecdedc29d7f724cfb1c376f12456fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>exportFit</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a041cd17008f2514eb035328ed5e3cc4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xTrans</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a4f595816cb1cdde06090daa037315cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yTrans</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a624e60b21466f65cae6ab14007c90b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zTrans</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>af768ef0588828e8eb26a2e0f2d856eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xRot</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a36bf308208424759816d7f2fd56b3a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yRot</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>abcb5f2f63658ce0291639ee4edea6af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zRot</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>aeb1d7dda957d1d1922ae9c69d1129f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>isoScaling</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a56eb02edf9d09650aad752726d55cf3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xSkew</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a64bdf75bdb0451109ab1a072898bb812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ySkew</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>aa2b6d0a97152d336944e60b23dd85c74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zSkew</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a604d81f7829353f1a2e4ef09bdfebb2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>matchGrey</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a8045f16dec0392fb1f6f05fd6e19e70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>greyRendering</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a1ff487ff83baeb90e2147d9335424c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zapMean</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>aec94e65adad8c436a0b542382b8ed8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zSqueeze</name>
      <anchorfile>structrOper.html</anchorfile>
      <anchor>a8bbbd6fe20599f437356b4969785846d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RowSet</name>
    <filename>structRowSet.html</filename>
    <member kind="variable">
      <type>struct RowSetChunk *</type>
      <name>pChunk</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>af064f9ec7b1ba820a3d53622bde9d42f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>a7da847a06c2f90025fbd89c57516c6f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RowSetEntry *</type>
      <name>pEntry</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>a3eccaf69ad7863abae2541a7c0b94e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RowSetEntry *</type>
      <name>pLast</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>a040c4b798e6f20d20aa99a45e93b2079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RowSetEntry *</type>
      <name>pFresh</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>a7c4e95bd08ff77135068bb3987be5ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RowSetEntry *</type>
      <name>pTree</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>a10dee0e9d9998a3726bcd4f20754991b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nFresh</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>a0ed2a47d6789a70081f3454ef2604e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isSorted</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>a59ef5b2dc2d3d8317307254743f92545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>iBatch</name>
      <anchorfile>structRowSet.html</anchorfile>
      <anchor>af33d206290792936cb1ebbb8e03baf64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RowSetChunk</name>
    <filename>structRowSetChunk.html</filename>
    <member kind="variable">
      <type>struct RowSetChunk *</type>
      <name>pNextChunk</name>
      <anchorfile>structRowSetChunk.html</anchorfile>
      <anchor>ae8f0975c86633ae2bb8b212d3a767554</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RowSetEntry</type>
      <name>aEntry</name>
      <anchorfile>structRowSetChunk.html</anchorfile>
      <anchor>abde97bbb07c3bf9454e719ff860bdd1f</anchor>
      <arglist>[ROWSET_ENTRY_PER_CHUNK]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RowSetEntry</name>
    <filename>structRowSetEntry.html</filename>
    <member kind="variable">
      <type>i64</type>
      <name>v</name>
      <anchorfile>structRowSetEntry.html</anchorfile>
      <anchor>ac72670935246f1bff5e4d96703574071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RowSetEntry *</type>
      <name>pRight</name>
      <anchorfile>structRowSetEntry.html</anchorfile>
      <anchor>ac39c09525dd24f42af522587d1bc5026</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct RowSetEntry *</type>
      <name>pLeft</name>
      <anchorfile>structRowSetEntry.html</anchorfile>
      <anchor>a59365203c30ce782ae38e534c90db14b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rParam</name>
    <filename>structrParam.html</filename>
    <member kind="variable">
      <type>struct rOper</type>
      <name>directives</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>ac92dc113b9326fcaf8869fc6bae65f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>inPtr1</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>aeaeeab48e2a7da9cd4d6bf3e25962d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>inPtr2</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a84555996e5b48d3eba3f5c9dc98225e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>inMsk1</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a3fef6afad1fd5b043c91ed446b3904fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>inMsk2</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a4ea0b3ce57e451c55e8b1564258cbbcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>outPtr</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a2904dd0b1cd00c70ffc2965fbf2c00d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>mskPtr</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a5c9babf1eab0490a5c0593339b16e4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>inFit</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a9d1c13921e2d3f7320199805ad62d437</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>outFit</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>ab2035160cc5d364d577b0a8de69f4435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sx</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a8f98c5c92302039270af37dbf8caf031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sy</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a176da5f277b7a7968edaffaa8f4be95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sz</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a6460704a861f1d8485719a49f6a7c75a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>firstLambda</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a7056865b29fedfc0f39ee01af41f6827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lambdaScale</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a9fb6998c6bb06dd899080ec9b9769f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minGain</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a9b4672992d4022a19db50ef027e1607f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>epsilon</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>ae2ff55f17a2c89c3a79794bfbe8d1d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>backgrnd</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a10be8a3397d86fc0f58d35c0ce967bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nx</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a4d04d52647128130a00724c470ccec62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ny</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a22f265741c835feaff3dcc141dfc0bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nz</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>af266691588e63c5f2e5af1c177d36409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>levels</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a66e4809cf0b878f7f15c0fae47eef5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastLevel</name>
      <anchorfile>structrParam.html</anchorfile>
      <anchor>a463a0e9a5b63cddfa90604b15c8bd296</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Savepoint</name>
    <filename>structSavepoint.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structSavepoint.html</anchorfile>
      <anchor>a0ba08ea77fcfd93099288375e2e9b1ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>nDeferredCons</name>
      <anchorfile>structSavepoint.html</anchorfile>
      <anchor>ae00dd8f725701d9e31da2edbb0b27435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Savepoint *</type>
      <name>pNext</name>
      <anchorfile>structSavepoint.html</anchorfile>
      <anchor>a8d785c3c0eeb6f0c62ea5391892c78cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Schema</name>
    <filename>structSchema.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>schema_cookie</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>a3eef54a64f4f962d64577646bd34a47c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Hash</type>
      <name>tblHash</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>af841eadc93b289944b95f72b784bfaae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Hash</type>
      <name>idxHash</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>ac0dd242f486d17ddadca1e47af76c6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Hash</type>
      <name>trigHash</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>ab521f4545d200329d8e1a46bbb67e7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Hash</type>
      <name>fkeyHash</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>ad51ed96351701cfe8d9e871722827c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pSeqTab</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>ad580e4e662724bee95571d297f94da37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>file_format</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>ab9f0371436e41b3080772995407a4cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>enc</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>a1338d09fe9cbb5a8162929202cb73cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>flags</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>a14838766a0a438e590a27f300beff459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cache_size</name>
      <anchorfile>structSchema.html</anchorfile>
      <anchor>a0a66691be95a30c099ca4840da7110dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScratchFreeslot</name>
    <filename>structScratchFreeslot.html</filename>
    <member kind="variable">
      <type>struct ScratchFreeslot *</type>
      <name>pNext</name>
      <anchorfile>structScratchFreeslot.html</anchorfile>
      <anchor>aca5c55a56a2a63a5be0756707a04bee8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Select</name>
    <filename>structSelect.html</filename>
    <member kind="variable">
      <type>ExprList *</type>
      <name>pEList</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>acf92c5d6b0e0e6a3263a77696baaadc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>op</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a84506d61248313b5e10f7891cb7482be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>affinity</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a92417c2f75c710d2a7919b0d2e0b1d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>selFlags</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a1c445561ea66d48573c8d8751108c743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SrcList *</type>
      <name>pSrc</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a4e3b9b176a8e1b4af988405ff1f090db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pWhere</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a0562c1e19acde263a04af015611d8ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExprList *</type>
      <name>pGroupBy</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a5b625c7495468ae56ca2f214a76231a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pHaving</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>ad09e0b115e6e1599e3075b87dfa6e66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExprList *</type>
      <name>pOrderBy</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a73c474cd4a9a9b9aa4e3187d8bf2d886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Select *</type>
      <name>pPrior</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a51d1a253b0aba5a54b11b3bf3896d056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Select *</type>
      <name>pNext</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a96aa0caf60390b8f5e88589639205c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Select *</type>
      <name>pRightmost</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a6ee045fa4305f1d68be5bdc22555e624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pLimit</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a11d3b48d04d58be818cdefb10aa061a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pOffset</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>aeaf016a10203b911000354122562fb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iLimit</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>abf68908bf029af42a32c60a2558a8b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iOffset</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>ac12bebd00ed988df3ad1efb8e6c63fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>addrOpenEphm</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a5cad3b59bf1803be552d002e74bdfd47</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nSelectRow</name>
      <anchorfile>structSelect.html</anchorfile>
      <anchor>a177125317478139f9ce834e4f7a93c52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SelectDest</name>
    <filename>structSelectDest.html</filename>
    <member kind="variable">
      <type>u8</type>
      <name>eDest</name>
      <anchorfile>structSelectDest.html</anchorfile>
      <anchor>a779c1809acadd15898db0b20e31cc23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>affinity</name>
      <anchorfile>structSelectDest.html</anchorfile>
      <anchor>a7a5b76f4fd40a1b84356fc58e0d6b173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iParm</name>
      <anchorfile>structSelectDest.html</anchorfile>
      <anchor>a6ca726a6f8054df61baa150c5010c53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iMem</name>
      <anchorfile>structSelectDest.html</anchorfile>
      <anchor>ab060aa655304afa76b1a2f923a2b0ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nMem</name>
      <anchorfile>structSelectDest.html</anchorfile>
      <anchor>a1868d637be46616a4206fd8ff9f4ac52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Set</name>
    <filename>structSet.html</filename>
    <member kind="variable">
      <type>Hash</type>
      <name>hash</name>
      <anchorfile>structSet.html</anchorfile>
      <anchor>aeea736b00f6b4351bfe703722fffc6f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashElem *</type>
      <name>prev</name>
      <anchorfile>structSet.html</anchorfile>
      <anchor>aebad2b96aa6e907b06ad5c3258879643</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>signal32_t</name>
    <filename>classsignal32__t.html</filename>
    <base>signal_t&lt; int32_t &gt;</base>
    <base>signal_t&lt; int32_t &gt;</base>
    <member kind="function">
      <type>int32_t *</type>
      <name>get_data</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>acfa4aea455b125267eaa62f3849fc297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal32_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a912e6870eb0643f4e0596a9f11f1ad40</anchor>
      <arglist>(int32_t *data, int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal32_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a70f6ccc2f94eef97980a1c9d4483e32f</anchor>
      <arglist>(const signal32_t &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal32_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>ad6cdc0ae0b884230a5122ee24a15768e</anchor>
      <arglist>(const signal32_t &amp;other, int offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal32_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>abc5ee6e3d1c768042a66b2a87c1f75bf</anchor>
      <arglist>(const signal32_t &amp;other, int offset, int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>surpress_non_local_maxima</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>abf25831bd8da6ed77c3255e704f0d7cf</anchor>
      <arglist>(signal32_t &amp;result, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a16096bbb57ba7d1eb52b75570117904d</anchor>
      <arglist>(signal32_t &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>ab5b3313e543356a022fbe02a2e2a1a89</anchor>
      <arglist>(signal32_t &amp;out, signal32_t &amp;delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate_vertical</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a8a2080841c80445bc65685f7772093d9</anchor>
      <arglist>(signal32_t &amp;out, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate2d</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a5713396dedab45bc617a177a3c2bda7a</anchor>
      <arglist>(signal32_t &amp;out, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate2d_with_delta</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a5e6adfc81a4285aa3387c533d268715c</anchor>
      <arglist>(signal32_t &amp;out, signal32_t &amp;outdelta, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>response_d0</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a4a6dc8c8199ac7bf9c3fe244a235acde</anchor>
      <arglist>(signal32_t &amp;response, int c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>response</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a18b86e31eb03892a7e1da14dc38da55a</anchor>
      <arglist>(signal32_t &amp;responsed, signal32_t &amp;responsedmin1, int c, int d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dr_dd_start_left</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a4a978027cc5119e7ec1f259518bf0521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dr_dd_left</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a3811077d65089926c0ce0df766a62489</anchor>
      <arglist>(int y, int c, int d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dr_dd_right</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a221e6fb32ede1d7ae4d6d56ca9c1acaa</anchor>
      <arglist>(const signal32_t &amp;input_integral, int y, int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dr_dd_end_right</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a0f4e7e939f9fd18a3e7d917eb516c051</anchor>
      <arglist>(const signal32_t &amp;input_integral, int y, int c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_integral</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a024a8adde6eaccab2b5267f48e4ca671</anchor>
      <arglist>(signal32_t &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>ac51c143e25e8488dbe0d95ae360531c1</anchor>
      <arglist>(const char *p=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump2d</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a17b358c7291e3f642fbf326791c2bd52</anchor>
      <arglist>(int numcols, const char *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump2d</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a7b47f3c66f9d674777cabf0a9a4a8980</anchor>
      <arglist>(int numcols)</arglist>
    </member>
    <member kind="function">
      <type>int32_t *</type>
      <name>get_data</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>acfa4aea455b125267eaa62f3849fc297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal32_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a912e6870eb0643f4e0596a9f11f1ad40</anchor>
      <arglist>(int32_t *data, int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal32_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a70f6ccc2f94eef97980a1c9d4483e32f</anchor>
      <arglist>(const signal32_t &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal32_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>ad6cdc0ae0b884230a5122ee24a15768e</anchor>
      <arglist>(const signal32_t &amp;other, int offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal32_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>abc5ee6e3d1c768042a66b2a87c1f75bf</anchor>
      <arglist>(const signal32_t &amp;other, int offset, int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>surpress_non_local_maxima</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>abf25831bd8da6ed77c3255e704f0d7cf</anchor>
      <arglist>(signal32_t &amp;result, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a16096bbb57ba7d1eb52b75570117904d</anchor>
      <arglist>(signal32_t &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>ab5b3313e543356a022fbe02a2e2a1a89</anchor>
      <arglist>(signal32_t &amp;out, signal32_t &amp;delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate_vertical</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a8a2080841c80445bc65685f7772093d9</anchor>
      <arglist>(signal32_t &amp;out, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate2d</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a5713396dedab45bc617a177a3c2bda7a</anchor>
      <arglist>(signal32_t &amp;out, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dilate2d_with_delta</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a5e6adfc81a4285aa3387c533d268715c</anchor>
      <arglist>(signal32_t &amp;out, signal32_t &amp;outdelta, int numrows, int numcols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>response_d0</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a4a6dc8c8199ac7bf9c3fe244a235acde</anchor>
      <arglist>(signal32_t &amp;response, int c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>response</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a18b86e31eb03892a7e1da14dc38da55a</anchor>
      <arglist>(signal32_t &amp;responsed, signal32_t &amp;responsedmin1, int c, int d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dr_dd_start_left</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a4a978027cc5119e7ec1f259518bf0521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dr_dd_left</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a3811077d65089926c0ce0df766a62489</anchor>
      <arglist>(int y, int c, int d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dr_dd_right</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a221e6fb32ede1d7ae4d6d56ca9c1acaa</anchor>
      <arglist>(const signal32_t &amp;input_integral, int y, int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dr_dd_end_right</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a0f4e7e939f9fd18a3e7d917eb516c051</anchor>
      <arglist>(const signal32_t &amp;input_integral, int y, int c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_integral</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a024a8adde6eaccab2b5267f48e4ca671</anchor>
      <arglist>(signal32_t &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>ac51c143e25e8488dbe0d95ae360531c1</anchor>
      <arglist>(const char *p=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump2d</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a17b358c7291e3f642fbf326791c2bd52</anchor>
      <arglist>(int numcols, const char *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump2d</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>a7b47f3c66f9d674777cabf0a9a4a8980</anchor>
      <arglist>(int numcols)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>response_t</name>
      <anchorfile>classsignal32__t.html</anchorfile>
      <anchor>ace59d8a1da81d077c414b8d464d31725</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>signal_t</name>
    <filename>classsignal__t.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>T *</type>
      <name>get_data</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a82b03aa5c6a2cb668b95cfa2902d67b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>signal_t &amp;</type>
      <name>operator=</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a7987390795961edc9b589f85397ee27b</anchor>
      <arglist>(const signal_t &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>signal_t &amp;</type>
      <name>operator=</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a6eae6a38a45e1fccf396c13cd368c30b</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>aa0a0e5484214cb3d9bb2dcbc81bbd72a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>signal_t &amp;</type>
      <name>operator+=</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a758b1afaedb41fd1d5f4f294cf9368a5</anchor>
      <arglist>(const signal_t &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a08f6d5aa64062e66a1ec9ef6b968f99d</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>aa183daf514d70b114a97d5b239260b6b</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a3c9788a985dccb12a5fd0ad7f9dbda70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a5e6f778041f989e21b3b4a50209f7309</anchor>
      <arglist>(T *_data, int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a6c02d5c886e2e05beda1e56df1a80980</anchor>
      <arglist>(const signal_t &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>abc0b05fbfd60c1e865b9efb4d268e1fe</anchor>
      <arglist>(const signal_t &amp;other, int offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>ab4ccdac338c4f95ea20cbc9185cb1917</anchor>
      <arglist>(const signal_t &amp;other, int offset, int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>ac9ff701f2521e131895f6432edf49a3a</anchor>
      <arglist>(const char *p=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump2d</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a83232f240c7861eaefd64e85f176eb4e</anchor>
      <arglist>(int numcols, const char *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump2d</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a154530a1d828cf8d7b2731f0aab8c06d</anchor>
      <arglist>(int numcols)</arglist>
    </member>
    <member kind="function">
      <type>signal_t &amp;</type>
      <name>copyTo</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>ae37b2f235e484cef01aae0bd663b4b09</anchor>
      <arglist>(signal_t &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get_data</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a82b03aa5c6a2cb668b95cfa2902d67b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>signal_t &amp;</type>
      <name>operator=</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a7987390795961edc9b589f85397ee27b</anchor>
      <arglist>(const signal_t &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>signal_t &amp;</type>
      <name>operator=</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a6eae6a38a45e1fccf396c13cd368c30b</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>aa0a0e5484214cb3d9bb2dcbc81bbd72a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>signal_t &amp;</type>
      <name>operator+=</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a758b1afaedb41fd1d5f4f294cf9368a5</anchor>
      <arglist>(const signal_t &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a08f6d5aa64062e66a1ec9ef6b968f99d</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>aa183daf514d70b114a97d5b239260b6b</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a3c9788a985dccb12a5fd0ad7f9dbda70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a5e6f778041f989e21b3b4a50209f7309</anchor>
      <arglist>(T *_data, int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a6c02d5c886e2e05beda1e56df1a80980</anchor>
      <arglist>(const signal_t &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>abc0b05fbfd60c1e865b9efb4d268e1fe</anchor>
      <arglist>(const signal_t &amp;other, int offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signal_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>ab4ccdac338c4f95ea20cbc9185cb1917</anchor>
      <arglist>(const signal_t &amp;other, int offset, int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>ac9ff701f2521e131895f6432edf49a3a</anchor>
      <arglist>(const char *p=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump2d</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>aa7cc06083ed8b4cbbf4c49a9d80a5941</anchor>
      <arglist>(int numcols, const char *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump2d</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a154530a1d828cf8d7b2731f0aab8c06d</anchor>
      <arglist>(int numcols)</arglist>
    </member>
    <member kind="function">
      <type>signal_t &amp;</type>
      <name>copyTo</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>aabd3eccf3cd86eec650d1033d39c03fb</anchor>
      <arglist>(signal_t &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>max</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a461993a1a8795515c48b25c79d1371b9</anchor>
      <arglist>(const signal_t &amp;in1, const signal_t &amp;in2, signal_t &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>aaa2b4ccef9052b60dc2e39023a0da881</anchor>
      <arglist>(const signal_t &amp;in1, const signal_t &amp;in2, signal_t &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>max</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a1e035c7aa54fc65b09173800e2e688bc</anchor>
      <arglist>(const signal_t &amp;in1, const signal_t &amp;in2, signal_t &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>ad285681c60f3909940b4a1b2a600eb25</anchor>
      <arglist>(const signal_t &amp;in1, const signal_t &amp;in2, signal_t &amp;out)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_size</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>ae89f3de0304753cde89f69822a8b0354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>a71ffcf53bf4fac5b22b5fb17d5f3674a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>response_t</name>
      <anchorfile>classsignal__t.html</anchorfile>
      <anchor>ace59d8a1da81d077c414b8d464d31725</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Site</name>
    <filename>structSite.html</filename>
    <member kind="variable">
      <type>struct Point</type>
      <name>coord</name>
      <anchorfile>structSite.html</anchorfile>
      <anchor>a6c615905ef667ce104d459235cf9ad8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sitenbr</name>
      <anchorfile>structSite.html</anchorfile>
      <anchor>aa5ec491ad3d019342ee18c34dabc2c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>refcnt</name>
      <anchorfile>structSite.html</anchorfile>
      <anchor>a20f41dc0653332dd930a13327fa8292e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sphericalCoord</name>
    <filename>structsphericalCoord.html</filename>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>structsphericalCoord.html</anchorfile>
      <anchor>a58f55b7a3f5ec9ece940e40cde1a25ee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>structsphericalCoord.html</anchorfile>
      <anchor>a0fc7bcdcff5907c596c8d7b4ba83544c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>z</name>
      <anchorfile>structsphericalCoord.html</anchorfile>
      <anchor>a266b70f657992b0a0d10a92e9264eb37</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>theta</name>
      <anchorfile>structsphericalCoord.html</anchorfile>
      <anchor>ac557147d55eb31372f2a039da8f6286a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>phi</name>
      <anchorfile>structsphericalCoord.html</anchorfile>
      <anchor>a632a5c23d804b185701c5a32ece4f291</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3</name>
    <filename>structsqlite3.html</filename>
    <class kind="struct">sqlite3::sqlite3InitInfo</class>
    <member kind="variable">
      <type>sqlite3_vfs *</type>
      <name>pVfs</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a8ad0bcb473e4cb492165739acff918cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nDb</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a03d047bc289999b0e39d8637f0762489</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Db *</type>
      <name>aDb</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a0abe1dccdea5f43e6c49360b42749697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flags</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a8dac784e669d6b8a9f936d3193c1aaec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>openFlags</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>abf9230ea98a57fa29b5babbec3a128dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>errCode</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a73adbb5395118bcbd9e4d705712966a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>errMask</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a12541dafcf60cfce52fb60f84e42f152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>autoCommit</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a11baf5e051b2e4ea03c5d03c09bb624e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>temp_store</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>acc46921b20f505ddce64526cac717af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>mallocFailed</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a79beb0036337ba7fc2de5ccbb9225935</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>dfltLockMode</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>af21b4bbd0d1cda779f2b9e8262e5deec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signed char</type>
      <name>nextAutovac</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a39dac5c9296edb15a46c458fb273bb11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>suppressErr</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ac6c776a68a0ce0cbacfc3c9fa5129252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nextPagesize</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>aceb220475d2e2fc37b8bf896128b1f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nTable</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>aaa280b566185a2ee333306f2f1a3cc3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CollSeq *</type>
      <name>pDfltColl</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a2e5d7e7ac07c33b11c936b181d07789a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>lastRowid</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a9fff52fc4eb087fbb3e3271994fa5198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>magic</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ad55cf0f70220c91382bc00b6a9423a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nChange</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>aaafd4eaa11ae4ea51d84ed4564a8d372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nTotalChange</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ade95b396eda5eb5929851abb581cff3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mutex *</type>
      <name>mutex</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a6328497ac0393204ab5f5083f05731c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>aLimit</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ad8acf663e1619905094c9dfe4125157b</anchor>
      <arglist>[SQLITE_N_LIMIT]</arglist>
    </member>
    <member kind="variable">
      <type>struct sqlite3::sqlite3InitInfo</type>
      <name>init</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a14bb7fbfa6b662021069fcdf6b334d70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nExtension</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>aa57fc38ef27d8fa59221cb5c0e54f7fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void **</type>
      <name>aExtension</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>aa97954113d8e35c97f8a3af534703f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Vdbe *</type>
      <name>pVdbe</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a596f0301f43c5e25575c2a1403f8b571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>activeVdbeCnt</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ada07202e7fd80f275e2e5063d96b5cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>writeVdbeCnt</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a632e51f8d35c1e8802639661e2fcd567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xTrace</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ae438713860c36ad393eb28702b67fec5</anchor>
      <arglist>)(void *, const char *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pTraceArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ae0920576e4e92f1b736255fcfad649d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xProfile</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>aa02bf4f3ffdaf52d43a3668661903ffb</anchor>
      <arglist>)(void *, const char *, u64)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pProfileArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a931c234df9b701c78de38ddf22869062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pCommitArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a355237725d3a535d702815b6ef8be75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xCommitCallback</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a1b12d797fb7f9c526ffb6665a7f42203</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pRollbackArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a3215967241f15d4599132a8dc2adfb93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xRollbackCallback</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ad09cbc96e3c4e322c1722b8c16b9cf24</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pUpdateArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ab4269aa44fea9906fe94045336f13d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xUpdateCallback</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a9177ce33e670ba38c97046e21482414a</anchor>
      <arglist>)(void *, int, const char *, const char *, sqlite_int64)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xWalCallback</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a895ca1f1d541060f1a43ac0267ab6437</anchor>
      <arglist>)(void *, sqlite3 *, const char *, int)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pWalArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>aa75309c2e522cf0f6ccbd7a3c38e1075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xCollNeeded</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ac43395ff160433e9811951232b1f6e63</anchor>
      <arglist>)(void *, sqlite3 *, int eTextRep, const char *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xCollNeeded16</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a6401c0e45eb82417cae62b8c5a6425f6</anchor>
      <arglist>)(void *, sqlite3 *, int eTextRep, const void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pCollNeededArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>addbc9c709cc728968132af5487d5c30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_value *</type>
      <name>pErr</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a90941a0c05641f623c257a7a65b22809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zErrMsg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a6227734abcc20349f2964c79cc267860</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zErrMsg16</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ac127667e438cda63969cc5f027522be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union sqlite3::@6</type>
      <name>u1</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a8fb1c4e91e3fd4b088559fac4d20531d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile int</type>
      <name>isInterrupted</name>
      <anchorfile>unionsqlite3_1_1@6.html</anchorfile>
      <anchor>a39fa16e38119476923a3524553c1e3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>notUsed1</name>
      <anchorfile>unionsqlite3_1_1@6.html</anchorfile>
      <anchor>a92cb9185d4ccad78855c48a61b58cd4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Lookaside</type>
      <name>lookaside</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a8a42788add62e1a59d0c930ecc190e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xAuth</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a7eb4472cad41b37417fcc6d2cc0561fa</anchor>
      <arglist>)(void *, int, const char *, const char *, const char *, const char *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pAuthArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a1c50e81c5e4a6e1faeea93489accd53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xProgress</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>aa691b02e7878f45a7c2b59a70e9c5ef3</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pProgressArg</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a1731a4d0a73f57415d35ef2a2997971b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nProgressOps</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>af124e2c511fea75ead3b1f180ce63447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Hash</type>
      <name>aModule</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a1e03e1fdee6fb7cb7337628c7f9b37c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pVTab</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ad5c10e0d79663fd7e5b1f26f5925514c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VTable **</type>
      <name>aVTrans</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a9628b6da0f4c7dbde32dcd1249d6a712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nVTrans</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a895162274d29fcd0658901bc5dcce99b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VTable *</type>
      <name>pDisconnect</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a048405f503316fad7d7116fd930299db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FuncDefHash</type>
      <name>aFunc</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a1f1c623a26e916021fbb2fe6d84dcede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Hash</type>
      <name>aCollSeq</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a259afda236b21b947f6dc7e0b3e605c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BusyHandler</type>
      <name>busyHandler</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a5f50915803efe2ad40dc1a5e31763671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>busyTimeout</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a69237f7a2b079706c544f09255fd8905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Db</type>
      <name>aDbStatic</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>ad99069213dff7fede71447b97d22d710</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>Savepoint *</type>
      <name>pSavepoint</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a47f4fe21bba981ccd47ee7f873f48a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nSavepoint</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a51d1dc4f5668dbc2282162bdfdca96ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nStatement</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a727c6da42aa4313c715de350303c90f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isTransactionSavepoint</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>acaca2a1d41db7b83a0fe8a477bd22d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>nDeferredCons</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a1d74627daa6fe93811e99cffe9362c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>pnBytesFreed</name>
      <anchorfile>structsqlite3.html</anchorfile>
      <anchor>a5559fb199b06ee59b635bb18f153fcf8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3::sqlite3InitInfo</name>
    <filename>structsqlite3_1_1sqlite3InitInfo.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iDb</name>
      <anchorfile>structsqlite3_1_1sqlite3InitInfo.html</anchorfile>
      <anchor>a1dd98d805ac1ba2c0fe4d911d0639927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>newTnum</name>
      <anchorfile>structsqlite3_1_1sqlite3InitInfo.html</anchorfile>
      <anchor>a65250c8c5f215989e64294ede6c1c268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>busy</name>
      <anchorfile>structsqlite3_1_1sqlite3InitInfo.html</anchorfile>
      <anchor>a6ac01842e0ae68023cb60fea93bd8688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>orphanTrigger</name>
      <anchorfile>structsqlite3_1_1sqlite3InitInfo.html</anchorfile>
      <anchor>ac292839cc81d109206133a80949c45a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_api_routines</name>
    <filename>structsqlite3__api__routines.html</filename>
    <member kind="variable">
      <type>void *(*</type>
      <name>aggregate_context</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a4af9ccf21e07862a8c3636c16d3acd19</anchor>
      <arglist>)(sqlite3_context *, int nBytes)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>aggregate_count</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a8373f7a5dd2d6f1c86bbf024b1796156</anchor>
      <arglist>)(sqlite3_context *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_blob</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>afeb41d70ab5a221fec488560934c825b</anchor>
      <arglist>)(sqlite3_stmt *, int, const void *, int n, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_double</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aca43a229ce28397ba8c18a4d6e03e40c</anchor>
      <arglist>)(sqlite3_stmt *, int, double)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_int</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a6fef49e6c9c1fa573c55cc6668a8448f</anchor>
      <arglist>)(sqlite3_stmt *, int, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_int64</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a489304cada65abca390da9b751da8800</anchor>
      <arglist>)(sqlite3_stmt *, int, sqlite_int64)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_null</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a74d16d0bb57db37d654e95fb7e72c93c</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_parameter_count</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ab27285b7fb132f697d5ef22f21469dd6</anchor>
      <arglist>)(sqlite3_stmt *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_parameter_index</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1985681b1e13047a8aae17676debb39d</anchor>
      <arglist>)(sqlite3_stmt *, const char *zName)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>bind_parameter_name</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae313944795333d76400e484b08027b01</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_text</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a4e64c1e01f7317ce0924683bf26b165a</anchor>
      <arglist>)(sqlite3_stmt *, int, const char *, int n, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_text16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a4613c5fa0a1fac009914ddd0f4415cfd</anchor>
      <arglist>)(sqlite3_stmt *, int, const void *, int, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_value</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aca47715615cc037cd2f850e8c87cd68d</anchor>
      <arglist>)(sqlite3_stmt *, int, const sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>busy_handler</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a4dd578712242bb36acf8568f1c0da278</anchor>
      <arglist>)(sqlite3 *, int(*)(void *, int), void *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>busy_timeout</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a403a82d983e3a60444761e4f78d6269c</anchor>
      <arglist>)(sqlite3 *, int ms)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>changes</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1379bef0cb6e5e352dc26a34e2d02477</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>close</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a26f93f921a5f6709be46902616ca8bcf</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>collation_needed</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aa26fb10907a304b5afd943061dd08ab7</anchor>
      <arglist>)(sqlite3 *, void *, void(*)(void *, sqlite3 *, int eTextRep, const char *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>collation_needed16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a35eb5a4b4df8b310e5e9ffbaa735d38f</anchor>
      <arglist>)(sqlite3 *, void *, void(*)(void *, sqlite3 *, int eTextRep, const void *))</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>column_blob</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a85459d5ec92d143a2a3da9143112a707</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>column_bytes</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a79150244afb5f778840bc9df72d55342</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>column_bytes16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ac1daf0a08de4a33c8db27a29f13a26ad</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>column_count</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>af750a4727dc59edb4ad2933e28bfa358</anchor>
      <arglist>)(sqlite3_stmt *pStmt)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>column_database_name</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a585bc7d559987f0621d7cf2230165e96</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>column_database_name16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a707ef52cfe0e07ebddb86e078f9f0caf</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>column_decltype</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>afca592a63d3a249ddb0a042416237a5a</anchor>
      <arglist>)(sqlite3_stmt *, int i)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>column_decltype16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a11d10f42586997006fd7ab07aaa365bf</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>double(*</type>
      <name>column_double</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>afd21003df28cb46354c00599b90e6de5</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>column_int</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a6211d95cf114f26cb48eed02d3b5eb70</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite_int64(*</type>
      <name>column_int64</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a523a8d125fe83c9ea45eb4057a4d2458</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>column_name</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a3bafa95a9ba845fa19408e9c3ac9aa69</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>column_name16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1c7063d3e335648a8482fb1cdc46a627</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>column_origin_name</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a6927f22bc705f4e518b1bc4a5d06a15d</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>column_origin_name16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ac2ae192edc01c361562796e873f33134</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>column_table_name</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1fc9721d32d8d99d26a97cae6882c34a</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>column_table_name16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>af01a003033c1ce2c671e495d35cf00eb</anchor>
      <arglist>)(sqlite3_stmt *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned char *(*</type>
      <name>column_text</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a958266b11061644abc6a542b30c0dded</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>column_text16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1e92761b9b7068a45dcb576229d1995a</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>column_type</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1bfa18703e814caf9b940bd89247fde5</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_value *(*</type>
      <name>column_value</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a2c5ab2f4eb5458dd17922e6ad6f33ca3</anchor>
      <arglist>)(sqlite3_stmt *, int iCol)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>commit_hook</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1fd4d534756988a2d709acffeb91d68a</anchor>
      <arglist>)(sqlite3 *, int(*)(void *), void *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>complete</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a4bd1a90b2a40c58ecc1c2ceb67be48f5</anchor>
      <arglist>)(const char *sql)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>complete16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae3e27f61b6c43cf549360f1bb8b3b591</anchor>
      <arglist>)(const void *sql)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>create_collation</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aed840be5b7cc7add4f21ba88f1981f58</anchor>
      <arglist>)(sqlite3 *, const char *, int, void *, int(*)(void *, int, const void *, int, const void *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>create_collation16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a2f05772713bb942bff670352a96ee1e6</anchor>
      <arglist>)(sqlite3 *, const void *, int, void *, int(*)(void *, int, const void *, int, const void *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>create_function</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aaf30781efad4fb70111f391e6fe20a9c</anchor>
      <arglist>)(sqlite3 *, const char *, int, int, void *, void(*xFunc)(sqlite3_context *, int, sqlite3_value **), void(*xStep)(sqlite3_context *, int, sqlite3_value **), void(*xFinal)(sqlite3_context *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>create_function16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a0c3f05b118b89293ff5d35774504b44d</anchor>
      <arglist>)(sqlite3 *, const void *, int, int, void *, void(*xFunc)(sqlite3_context *, int, sqlite3_value **), void(*xStep)(sqlite3_context *, int, sqlite3_value **), void(*xFinal)(sqlite3_context *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>create_module</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a25834b37191417562ecd2ee67b85617b</anchor>
      <arglist>)(sqlite3 *, const char *, const sqlite3_module *, void *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>data_count</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aea0a7b7483770202ef9eae88b4eb70cd</anchor>
      <arglist>)(sqlite3_stmt *pStmt)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3 *(*</type>
      <name>db_handle</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a243ede93aa98a2a339cdd693ca2855e1</anchor>
      <arglist>)(sqlite3_stmt *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>declare_vtab</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a6b6035b36ea9d0800181e69e20059b32</anchor>
      <arglist>)(sqlite3 *, const char *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>enable_shared_cache</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a3e6b7bbdd68cde43ef4afffd73e957ea</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>errcode</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a0f1cf42108e6d872d03b78eaf27dfc45</anchor>
      <arglist>)(sqlite3 *db)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>errmsg</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a8cc92411b7513a1009db9cc75bc486f5</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>errmsg16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a86767e26b770626fb788af5c7a75af9b</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>exec</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a16e1fe4f9dccfe8da742d7087822d379</anchor>
      <arglist>)(sqlite3 *, const char *, sqlite3_callback, void *, char **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>expired</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a574080049ce24e639e7487bcfc74e06a</anchor>
      <arglist>)(sqlite3_stmt *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>finalize</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ad7cee4127bfd0583ccfea40943858de2</anchor>
      <arglist>)(sqlite3_stmt *pStmt)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>free</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a5778783c18a96cff28a516168db77ae9</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>free_table</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a16d39862f10f54f34e2d52b4da51fdac</anchor>
      <arglist>)(char **result)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>get_autocommit</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a8724984acc7ccfefaa17f04a739fc396</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>get_auxdata</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>af5e805a1a5e4bcdfe26489a448a571a9</anchor>
      <arglist>)(sqlite3_context *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>get_table</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a49be6136a17441b04e3feec330d9dd52</anchor>
      <arglist>)(sqlite3 *, const char *, char ***, int *, int *, char **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>global_recover</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a9b90b5ea9b2fae5a60b9ddc86c72e1a8</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>interruptx</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a3cfec591003c4e8b1f1bdb82a80b8e19</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite_int64(*</type>
      <name>last_insert_rowid</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aeeda8d84c8060c99e24d97ae60bf6046</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>libversion</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a46319faed9d5268d7f2347cbb6b0faa0</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>libversion_number</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a70d0b04a52493c15f26815990a50afa7</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>malloc</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a91c1d01e779d2064f8ea553a4a5829ee</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>char *(*</type>
      <name>mprintf</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a5e0114e7ac180815d2b11c6d51d21f1a</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>open</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1d0126d7384e1e4e0975d3084007af89</anchor>
      <arglist>)(const char *, sqlite3 **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>open16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a8394f1e962c0c3172ef7a0b6243303ca</anchor>
      <arglist>)(const void *, sqlite3 **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>prepare</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a6d5170ffef9564b7f9b157a14df4fd4d</anchor>
      <arglist>)(sqlite3 *, const char *, int, sqlite3_stmt **, const char **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>prepare16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a3877cfcfebeb05e357317ab50a47e52e</anchor>
      <arglist>)(sqlite3 *, const void *, int, sqlite3_stmt **, const void **)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>profile</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aa3613866ee257c4b50e78bec33b7fb3a</anchor>
      <arglist>)(sqlite3 *, void(*)(void *, const char *, sqlite_uint64), void *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>progress_handler</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a2888055619addf1d754e25d159d85718</anchor>
      <arglist>)(sqlite3 *, int, int(*)(void *), void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>realloc</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a8acf7aa698ed5e3a6ecc09ba9ced9fec</anchor>
      <arglist>)(void *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>reset</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a0ac99b0282f1843dbd0170c22be99957</anchor>
      <arglist>)(sqlite3_stmt *pStmt)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_blob</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aab44964ab19917a95c1513890c5cdca2</anchor>
      <arglist>)(sqlite3_context *, const void *, int, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_double</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a2a30d668aa648384ab1058cf77924c33</anchor>
      <arglist>)(sqlite3_context *, double)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_error</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aa056e7b903ab75742336977a511ef14c</anchor>
      <arglist>)(sqlite3_context *, const char *, int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_error16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a70665eda481c4fcafdfd1462700be04e</anchor>
      <arglist>)(sqlite3_context *, const void *, int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_int</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aca3c3c95e95664898bf88da2e509e5af</anchor>
      <arglist>)(sqlite3_context *, int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_int64</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a92556e67d3485c59031e3d3acf401501</anchor>
      <arglist>)(sqlite3_context *, sqlite_int64)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_null</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a00666e8dbc927015e5885d8397fe87b5</anchor>
      <arglist>)(sqlite3_context *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_text</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aab7d23eb300244a843b8b88f07253b17</anchor>
      <arglist>)(sqlite3_context *, const char *, int, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_text16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a65aabe03e23304ceb885829bf2393aa5</anchor>
      <arglist>)(sqlite3_context *, const void *, int, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_text16be</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a328415dd9961d9e0d6b15a76fe134b9d</anchor>
      <arglist>)(sqlite3_context *, const void *, int, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_text16le</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ac8f4c207ad255db5b0f8e0974fdcba16</anchor>
      <arglist>)(sqlite3_context *, const void *, int, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_value</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae1ff210b0883098bb16c807e0dae6a80</anchor>
      <arglist>)(sqlite3_context *, sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>rollback_hook</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a980df7d8c480cf9f050e534d1d994efb</anchor>
      <arglist>)(sqlite3 *, void(*)(void *), void *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>set_authorizer</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ad271da3c9d522555a4be69114f57de13</anchor>
      <arglist>)(sqlite3 *, int(*)(void *, int, const char *, const char *, const char *, const char *), void *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>set_auxdata</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a71c6f4befd8497adcf3bd78b720d4c6d</anchor>
      <arglist>)(sqlite3_context *, int, void *, void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>char *(*</type>
      <name>snprintf</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a204fab9a7bbc4afa0ff208e0aca21afd</anchor>
      <arglist>)(int, char *, const char *,...)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>step</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a40f899787bbfd866efa43f5337addbdc</anchor>
      <arglist>)(sqlite3_stmt *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>table_column_metadata</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a8fdf517f6c889edf0e0206fd8846eba5</anchor>
      <arglist>)(sqlite3 *, const char *, const char *, const char *, char const **, char const **, int *, int *, int *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>thread_cleanup</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aafef606568e3b1706477c795e343da66</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>total_changes</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a5bf72c6b416c8a29ed60940947ce5737</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>trace</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>acfcae876299cbd94ea3c2da505f1ddc6</anchor>
      <arglist>)(sqlite3 *, void(*xTrace)(void *, const char *), void *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>transfer_bindings</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a76b183a79f69910802d39aa9898cef4e</anchor>
      <arglist>)(sqlite3_stmt *, sqlite3_stmt *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>update_hook</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aea19a900175c37e18c00382aa1ac26bb</anchor>
      <arglist>)(sqlite3 *, void(*)(void *, int, char const *, char const *, sqlite_int64), void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>user_data</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aa8781948e7c68d91a9c666469dca118b</anchor>
      <arglist>)(sqlite3_context *)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>value_blob</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a7e3904fdaa27da60c444d080331ed091</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>value_bytes</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a36456594eab68bf7907db9582a53ea0a</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>value_bytes16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a5bbfaab79c286e78fe420d96d65d7167</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>double(*</type>
      <name>value_double</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aa023ab267b40e50bec5ccacd32486eb8</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>value_int</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a31b7443c4d35480567266930a3d4e64f</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite_int64(*</type>
      <name>value_int64</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae2eb08ff1ad717cf6737d657fd8a11b5</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>value_numeric_type</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a9032977e99c01fc28d3c3f054192f7cd</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned char *(*</type>
      <name>value_text</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>abb9daaa43ca3ddb2c9bad4991f9a327c</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>value_text16</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a2a4f433b82df50bbb9178b33f851237a</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>value_text16be</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>abdb7dd82bf4147ac140df3f4d36a1c20</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>const void *(*</type>
      <name>value_text16le</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aa3a4150e9ecc70a364f09ae446ccab7d</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>value_type</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a682549a9b9c8d95f9dcee8428cd25377</anchor>
      <arglist>)(sqlite3_value *)</arglist>
    </member>
    <member kind="variable">
      <type>char *(*</type>
      <name>vmprintf</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a9de374e1a95d8b049dae5c5833fd93f0</anchor>
      <arglist>)(const char *, va_list)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>overload_function</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aae9b181f076ae18804590924aa791101</anchor>
      <arglist>)(sqlite3 *, const char *zFuncName, int nArg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>prepare_v2</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>adf1956e4240b4573ec5d1c0e079a0dc2</anchor>
      <arglist>)(sqlite3 *, const char *, int, sqlite3_stmt **, const char **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>prepare16_v2</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aa2ac35f69a60c329e4129dd67f7c5662</anchor>
      <arglist>)(sqlite3 *, const void *, int, sqlite3_stmt **, const void **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>clear_bindings</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a6154fab4f9101c9ababb806dac91d01f</anchor>
      <arglist>)(sqlite3_stmt *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>create_module_v2</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ad95940b07bd59f087160cf3a3428c8fa</anchor>
      <arglist>)(sqlite3 *, const char *, const sqlite3_module *, void *, void(*xDestroy)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>bind_zeroblob</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1a1257f2722e96c06e8db5aa22aebddb</anchor>
      <arglist>)(sqlite3_stmt *, int, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>blob_bytes</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a435b470368220faf25063c1a673952ea</anchor>
      <arglist>)(sqlite3_blob *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>blob_close</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a7b7749cb4e412443b7903205c0ebacf2</anchor>
      <arglist>)(sqlite3_blob *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>blob_open</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>abec3f9100c800aaac49c7eb881f24d4c</anchor>
      <arglist>)(sqlite3 *, const char *, const char *, const char *, sqlite3_int64, int, sqlite3_blob **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>blob_read</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a916f53dfaedab13e9fcf33c80b10c341</anchor>
      <arglist>)(sqlite3_blob *, void *, int, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>blob_write</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a49a8e111c2b4f033b93820e0199a653e</anchor>
      <arglist>)(sqlite3_blob *, const void *, int, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>create_collation_v2</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>afeaa51f6fd046328ba845ebcacdeb335</anchor>
      <arglist>)(sqlite3 *, const char *, int, void *, int(*)(void *, int, const void *, int, const void *), void(*)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>file_control</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>afe67e4e8a6dd2e44cc24e99e0555b807</anchor>
      <arglist>)(sqlite3 *, const char *, int, void *)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_int64(*</type>
      <name>memory_highwater</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a56ce6c9b67e916c6c1aeda3aafbaa5da</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_int64(*</type>
      <name>memory_used</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a6e43dd2050d1ee2f2a178b698bed2aeb</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mutex *(*</type>
      <name>mutex_alloc</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a72625fedcf421081f687f99d163aca69</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>mutex_enter</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a8da853b8ddd55bdb71e3cb82bf6fa77a</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>mutex_free</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a055c0e268a30b76af04f7cfac6ad2b6d</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>mutex_leave</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae599184431cf669551ae88f4ca7373c0</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>mutex_try</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a04b95233a9977a34ff0f2d9fab44e507</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>open_v2</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ac6da992cdbb490e1d1e856a4864851bf</anchor>
      <arglist>)(const char *, sqlite3 **, int, const char *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>release_memory</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a2dbb78dde331812425108d9eaeba7bf1</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_error_nomem</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>abaccd85342d77c068d05de2b9cd9c7e0</anchor>
      <arglist>)(sqlite3_context *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_error_toobig</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>acc888c07a82710c1f0c791ba3058c44c</anchor>
      <arglist>)(sqlite3_context *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>sleep</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae7d2a4258889ab0de44cfce3a9f4b02b</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>soft_heap_limit</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a217004dbd021cb40d5ad24f963c68451</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_vfs *(*</type>
      <name>vfs_find</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae08c82348507252bf3775f265caa229e</anchor>
      <arglist>)(const char *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>vfs_register</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a0bc5bcc67851f8ceab8114b89f59328d</anchor>
      <arglist>)(sqlite3_vfs *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>vfs_unregister</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ad501d3d8cf518597e863660dfe6922e8</anchor>
      <arglist>)(sqlite3_vfs *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xthreadsafe</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ab3607e01452a88c8bd0251cf732ff796</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_zeroblob</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a5d27abfb3889e2fffdb6bd0b087ce390</anchor>
      <arglist>)(sqlite3_context *, int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>result_error_code</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a9c1248e6ec11a77ea298a0d3b9f3bbe6</anchor>
      <arglist>)(sqlite3_context *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>test_control</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a5b1a547de99292de4aa0b474ffe3462e</anchor>
      <arglist>)(int,...)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>randomness</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a4135547c03dfacc513274bb007386d05</anchor>
      <arglist>)(int, void *)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3 *(*</type>
      <name>context_db_handle</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a2f64d6726587345c6c9f138542f14031</anchor>
      <arglist>)(sqlite3_context *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>extended_result_codes</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ab1f8f2e2de939f53365bf6b6f439e379</anchor>
      <arglist>)(sqlite3 *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>limit</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aa48e99fcfae600229799f773c3edfef6</anchor>
      <arglist>)(sqlite3 *, int, int)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_stmt *(*</type>
      <name>next_stmt</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a5629a4f4840068678d7429f1e0939d97</anchor>
      <arglist>)(sqlite3 *, sqlite3_stmt *)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>sql</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aca8e71f936e7e8c822588b82687ab129</anchor>
      <arglist>)(sqlite3_stmt *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>status</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a0021bed44509b5085f5187db3aa43eb8</anchor>
      <arglist>)(int, int *, int *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>backup_finish</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>abb9900ba9f5faed0031817665594eeec</anchor>
      <arglist>)(sqlite3_backup *)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_backup *(*</type>
      <name>backup_init</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>acde910f4e49914357c4939f434bca34b</anchor>
      <arglist>)(sqlite3 *, const char *, sqlite3 *, const char *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>backup_pagecount</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ac796f94cb46e331a880131b5dc67e635</anchor>
      <arglist>)(sqlite3_backup *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>backup_remaining</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae376d7dfa771f1c72272b32e2203c6f1</anchor>
      <arglist>)(sqlite3_backup *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>backup_step</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a3a8f0bc14589950ee606d5354ff364ed</anchor>
      <arglist>)(sqlite3_backup *, int)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>compileoption_get</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1d94408829d5cc628c2947f321367e80</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>compileoption_used</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a788dd672feeff349c417beff9a7eb26c</anchor>
      <arglist>)(const char *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>create_function_v2</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ae2cd022f6c2bb188773ef656d79d26f1</anchor>
      <arglist>)(sqlite3 *, const char *, int, int, void *, void(*xFunc)(sqlite3_context *, int, sqlite3_value **), void(*xStep)(sqlite3_context *, int, sqlite3_value **), void(*xFinal)(sqlite3_context *), void(*xDestroy)(void *))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>db_config</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a60ceed179513c5ac09b0ed39c725dbf6</anchor>
      <arglist>)(sqlite3 *, int,...)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mutex *(*</type>
      <name>db_mutex</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a3b6e71fa5b3a8b01af308189d68a6f88</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>db_status</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ac3ea73ff30ee0c21446f94a643581280</anchor>
      <arglist>)(sqlite3 *, int, int *, int *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>extended_errcode</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>abc8b842c381e74bd6880f49df71ec395</anchor>
      <arglist>)(sqlite3 *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>log</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ab7e50803433fe04a73e581b0c293f417</anchor>
      <arglist>)(int, const char *,...)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_int64(*</type>
      <name>soft_heap_limit64</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a823e82c8ced7470846ff94857b67c1f0</anchor>
      <arglist>)(sqlite3_int64)</arglist>
    </member>
    <member kind="variable">
      <type>const char *(*</type>
      <name>sourceid</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a0f98ac98b5dc72f7910103f7cc861c96</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>stmt_status</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a965fb4dd8b649c8192bcdb436ea8ee4c</anchor>
      <arglist>)(sqlite3_stmt *, int, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>strnicmp</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a1ca0d03d2340d21b5f1d2d6b60651e5c</anchor>
      <arglist>)(const char *, const char *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>unlock_notify</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>aad63fcc63d8102991ba13bcb23d3d42c</anchor>
      <arglist>)(sqlite3 *, void(*)(void **, int), void *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>wal_autocheckpoint</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a6f9743cc31d029be8a765529bc693552</anchor>
      <arglist>)(sqlite3 *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>wal_checkpoint</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>a8161479d3298a910a21e9d6dd92e1083</anchor>
      <arglist>)(sqlite3 *, const char *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>wal_hook</name>
      <anchorfile>structsqlite3__api__routines.html</anchorfile>
      <anchor>ad2420d28d695f23941f69e53777819a9</anchor>
      <arglist>)(sqlite3 *, int(*)(void *, sqlite3 *, const char *, int), void *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_backup</name>
    <filename>structsqlite3__backup.html</filename>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>pDestDb</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>ad9b5074a860e01b31bbf9cb27f3808d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Btree *</type>
      <name>pDest</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>a9e011336a89274f0ebfefdcede198f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iDestSchema</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>a3f294f50b4ef206452dddd14f2a7cf6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bDestLocked</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>aa0d385678bc5c3fd4da4201ff03a5856</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>iNext</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>a92454bf354f928aade2b2f92e6cfd088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>pSrcDb</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>a0bcc0528bb3f5ec52eb40c3e7a4f7adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Btree *</type>
      <name>pSrc</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>aa48f873d1de446638ff71fdae606e672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rc</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>aab860dbed6181702b4c6b80d43cde411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>nRemaining</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>a4287faa23d4534e8a33915740604d1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Pgno</type>
      <name>nPagecount</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>a98599d5a3a13173a6a126242d1fbbaa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>isAttached</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>af515f0d9265847d820cbaad41cef78ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_backup *</type>
      <name>pNext</name>
      <anchorfile>structsqlite3__backup.html</anchorfile>
      <anchor>a3a87332e045fe4a477fe262409c6011a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_context</name>
    <filename>structsqlite3__context.html</filename>
    <member kind="variable">
      <type>FuncDef *</type>
      <name>pFunc</name>
      <anchorfile>structsqlite3__context.html</anchorfile>
      <anchor>af4215c87be2c0cb10868f623a552a2aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VdbeFunc *</type>
      <name>pVdbeFunc</name>
      <anchorfile>structsqlite3__context.html</anchorfile>
      <anchor>af35405f4f62cfc0b81bb2eb6c82b2363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem</type>
      <name>s</name>
      <anchorfile>structsqlite3__context.html</anchorfile>
      <anchor>a53d44518a1f7f57ce5a2d73b6e8d2c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem *</type>
      <name>pMem</name>
      <anchorfile>structsqlite3__context.html</anchorfile>
      <anchor>a7b84aa5920329cb0eb943832175b48b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>isError</name>
      <anchorfile>structsqlite3__context.html</anchorfile>
      <anchor>ae4351b8da8c6d2676074612c1b8d4af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CollSeq *</type>
      <name>pColl</name>
      <anchorfile>structsqlite3__context.html</anchorfile>
      <anchor>a4e4b12fb65814515fdb967559693f816</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_file</name>
    <filename>structsqlite3__file.html</filename>
    <member kind="variable">
      <type>struct sqlite3_io_methods *</type>
      <name>pMethods</name>
      <anchorfile>structsqlite3__file.html</anchorfile>
      <anchor>afb7c7beec15f0867d22f5260fcee24d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_index_info</name>
    <filename>structsqlite3__index__info.html</filename>
    <class kind="struct">sqlite3_index_info::sqlite3_index_constraint</class>
    <class kind="struct">sqlite3_index_info::sqlite3_index_constraint_usage</class>
    <class kind="struct">sqlite3_index_info::sqlite3_index_orderby</class>
    <member kind="variable">
      <type>int</type>
      <name>nConstraint</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>ae861993a30ce914a5214eab2579d935a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sqlite3_index_info::sqlite3_index_constraint *</type>
      <name>aConstraint</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>a634aa93834e2b47acf34454746c0f248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nOrderBy</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>a3ef850fdc57eddbc8189fe84d0a9044e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sqlite3_index_info::sqlite3_index_orderby *</type>
      <name>aOrderBy</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>a6823a68979e19d8e332389361e920ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sqlite3_index_info::sqlite3_index_constraint_usage *</type>
      <name>aConstraintUsage</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>a79b8a969dd7d582fc2ea3c0fbc5adb56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>idxNum</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>afcee17707a1c147fbd55c23c807fdae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>idxStr</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>ac63f4ebfe8d9331b040fa9e0e47c9d70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>needToFreeIdxStr</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>a5410066c067c3891cdf165c70cc4d6b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>orderByConsumed</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>a5515d9de0f37f68d7e0930c20a668b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>estimatedCost</name>
      <anchorfile>structsqlite3__index__info.html</anchorfile>
      <anchor>aa8b4fe1d2ee38aab57ba5e1da00d7830</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_index_info::sqlite3_index_constraint</name>
    <filename>structsqlite3__index__info_1_1sqlite3__index__constraint.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iColumn</name>
      <anchorfile>structsqlite3__index__info_1_1sqlite3__index__constraint.html</anchorfile>
      <anchor>a0f1e207060420058ee2881f2ea368e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>op</name>
      <anchorfile>structsqlite3__index__info_1_1sqlite3__index__constraint.html</anchorfile>
      <anchor>a362f4ec1f71975cb0ac39a8b5e4b1476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>usable</name>
      <anchorfile>structsqlite3__index__info_1_1sqlite3__index__constraint.html</anchorfile>
      <anchor>ae16e62caeab743cc68bb22227dacb501</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iTermOffset</name>
      <anchorfile>structsqlite3__index__info_1_1sqlite3__index__constraint.html</anchorfile>
      <anchor>a4e8368da66f34b7f07b369984b813d1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_index_info::sqlite3_index_constraint_usage</name>
    <filename>structsqlite3__index__info_1_1sqlite3__index__constraint__usage.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>argvIndex</name>
      <anchorfile>structsqlite3__index__info_1_1sqlite3__index__constraint__usage.html</anchorfile>
      <anchor>a2cbf680033c2937b3de226e091743a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>omit</name>
      <anchorfile>structsqlite3__index__info_1_1sqlite3__index__constraint__usage.html</anchorfile>
      <anchor>ad07fa17d30e4fb3abe23ceaf84edf0ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_index_info::sqlite3_index_orderby</name>
    <filename>structsqlite3__index__info_1_1sqlite3__index__orderby.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iColumn</name>
      <anchorfile>structsqlite3__index__info_1_1sqlite3__index__orderby.html</anchorfile>
      <anchor>a266396085bfda9acef3f13eaa170cd2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>desc</name>
      <anchorfile>structsqlite3__index__info_1_1sqlite3__index__orderby.html</anchorfile>
      <anchor>a0586d1b5d36221af96aeba8cfc56e9c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_io_methods</name>
    <filename>structsqlite3__io__methods.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iVersion</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>ad1c72bdfde750a09a797f314a096a965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xClose</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a3c021d16959e0533f507b3212681a22e</anchor>
      <arglist>)(sqlite3_file *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xRead</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a19870694752f65e8738d89d871d0ca7f</anchor>
      <arglist>)(sqlite3_file *, void *, int iAmt, sqlite3_int64 iOfst)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xWrite</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a803b39bc86bbff522602597fa4390e0f</anchor>
      <arglist>)(sqlite3_file *, const void *, int iAmt, sqlite3_int64 iOfst)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xTruncate</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a981cc60fc305bfb38eecd7123a513a20</anchor>
      <arglist>)(sqlite3_file *, sqlite3_int64 size)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xSync</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a8d39ac02aeb1eb63622008217031b098</anchor>
      <arglist>)(sqlite3_file *, int flags)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xFileSize</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>ad269e3cbda39d0a2383aef13b60b02f8</anchor>
      <arglist>)(sqlite3_file *, sqlite3_int64 *pSize)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xLock</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a3e4749687788b89ed0f672db7a4f6ac8</anchor>
      <arglist>)(sqlite3_file *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xUnlock</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>ac90eeb9153eb6608a1872760660e718f</anchor>
      <arglist>)(sqlite3_file *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xCheckReservedLock</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a97f5eb0c2dc7e1cf2f8ecd6857e4c77c</anchor>
      <arglist>)(sqlite3_file *, int *pResOut)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xFileControl</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a5d2a5ba7937b4a6c6c5ba62c4e2b9166</anchor>
      <arglist>)(sqlite3_file *, int op, void *pArg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xSectorSize</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a8436e6eeac404b35057be97f3c2b5c3d</anchor>
      <arglist>)(sqlite3_file *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xDeviceCharacteristics</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>ace5e9e9f267c6c57023109c0658f2683</anchor>
      <arglist>)(sqlite3_file *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xShmMap</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a42d21006b7f01acb258986f2c090c64d</anchor>
      <arglist>)(sqlite3_file *, int iPg, int pgsz, int, void volatile **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xShmLock</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>a58f4a6b0df86440029cc5fa1b65b1b4e</anchor>
      <arglist>)(sqlite3_file *, int offset, int n, int flags)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xShmBarrier</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>aedf4a59fa25ad33e0625a2aa0f6f2184</anchor>
      <arglist>)(sqlite3_file *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xShmUnmap</name>
      <anchorfile>structsqlite3__io__methods.html</anchorfile>
      <anchor>af69cbc7ece1854576ac262f986871563</anchor>
      <arglist>)(sqlite3_file *, int deleteFlag)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_mem_methods</name>
    <filename>structsqlite3__mem__methods.html</filename>
    <member kind="variable">
      <type>void *(*</type>
      <name>xMalloc</name>
      <anchorfile>structsqlite3__mem__methods.html</anchorfile>
      <anchor>acb9151cf501c851b61ab6b378832b159</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xFree</name>
      <anchorfile>structsqlite3__mem__methods.html</anchorfile>
      <anchor>aa2e7fe8d030adaa17fd23a44fec1eca1</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>xRealloc</name>
      <anchorfile>structsqlite3__mem__methods.html</anchorfile>
      <anchor>a5bb7e62164d0934888473c618c61dc77</anchor>
      <arglist>)(void *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xSize</name>
      <anchorfile>structsqlite3__mem__methods.html</anchorfile>
      <anchor>a6c68275b577d66ae659ef30344c8f86c</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xRoundup</name>
      <anchorfile>structsqlite3__mem__methods.html</anchorfile>
      <anchor>a8b3f0d1ddeb498c4aaf9bbce5b92a268</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xInit</name>
      <anchorfile>structsqlite3__mem__methods.html</anchorfile>
      <anchor>ad0997b548928358d655000b6ac825cf4</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xShutdown</name>
      <anchorfile>structsqlite3__mem__methods.html</anchorfile>
      <anchor>a6f48100692bd935d7f3dbb8c701ab6ca</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pAppData</name>
      <anchorfile>structsqlite3__mem__methods.html</anchorfile>
      <anchor>af91b7adfa1f6aace0b129bac800bd444</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_module</name>
    <filename>structsqlite3__module.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iVersion</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a42b11d080dc205aea43581b18f925afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xCreate</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a95e327c9d32abd731013395d9e12b8f9</anchor>
      <arglist>)(sqlite3 *, void *pAux, int argc, const char *const *argv, sqlite3_vtab **ppVTab, char **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xConnect</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>acdd9ccc4a6acff230b2d579172ae32d0</anchor>
      <arglist>)(sqlite3 *, void *pAux, int argc, const char *const *argv, sqlite3_vtab **ppVTab, char **)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xBestIndex</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a66577e230ca8de525b30ee6f287eafb1</anchor>
      <arglist>)(sqlite3_vtab *pVTab, sqlite3_index_info *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xDisconnect</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a5dbaa6ff075eaff25ccfddaedba06934</anchor>
      <arglist>)(sqlite3_vtab *pVTab)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xDestroy</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a296dae8dadd4eb1f7d0f1187650c7aa5</anchor>
      <arglist>)(sqlite3_vtab *pVTab)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xOpen</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a2cb9f8c149617189efa6ceec0a3211e9</anchor>
      <arglist>)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xClose</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a514c66634a5297ca9879947fa6f8f10f</anchor>
      <arglist>)(sqlite3_vtab_cursor *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xFilter</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a1ddde32dcae461910096ebb2c42d1a6a</anchor>
      <arglist>)(sqlite3_vtab_cursor *, int idxNum, const char *idxStr, int argc, sqlite3_value **argv)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xNext</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>aa739d9a2081db7bf786f1f9fb9d92264</anchor>
      <arglist>)(sqlite3_vtab_cursor *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xEof</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>ae10cf7d9a7edfecf1daa34a214bf6a64</anchor>
      <arglist>)(sqlite3_vtab_cursor *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xColumn</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a4c82dc60335ba40c816cdd6c4dce2950</anchor>
      <arglist>)(sqlite3_vtab_cursor *, sqlite3_context *, int)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xRowid</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a1e119b28bd3ad706d1982aaa938aac79</anchor>
      <arglist>)(sqlite3_vtab_cursor *, sqlite3_int64 *pRowid)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xUpdate</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a029d0713dbb3c847a6de773a0a179605</anchor>
      <arglist>)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xBegin</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>af3ea97df2b110da6ceb4797222e6d86f</anchor>
      <arglist>)(sqlite3_vtab *pVTab)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xSync</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a895d78529db2e28e13d1d842512770b6</anchor>
      <arglist>)(sqlite3_vtab *pVTab)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xCommit</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a465df78231717713e98677c19e60cece</anchor>
      <arglist>)(sqlite3_vtab *pVTab)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xRollback</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>a3f8676e941a3080557fe10528e04e2f1</anchor>
      <arglist>)(sqlite3_vtab *pVTab)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xFindFunction</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>ae70a020a7dda960b91943e9f67695dbb</anchor>
      <arglist>)(sqlite3_vtab *pVtab, int nArg, const char *zName, void(**pxFunc)(sqlite3_context *, int, sqlite3_value **), void **ppArg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xRename</name>
      <anchorfile>structsqlite3__module.html</anchorfile>
      <anchor>af886782e9a1ea5c4b131b2bc373c8092</anchor>
      <arglist>)(sqlite3_vtab *pVtab, const char *zNew)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_mutex</name>
    <filename>structsqlite3__mutex.html</filename>
    <member kind="variable">
      <type>pthread_mutex_t</type>
      <name>mutex</name>
      <anchorfile>structsqlite3__mutex.html</anchorfile>
      <anchor>a6eef25bee73a3640dbbd052d707dbfdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_mutex_methods</name>
    <filename>structsqlite3__mutex__methods.html</filename>
    <member kind="variable">
      <type>int(*</type>
      <name>xMutexInit</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>af0a78d79b6029444d4a2ac7c474030d4</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xMutexEnd</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>a4963efb4bfede244d4d2a14510dbfe68</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mutex *(*</type>
      <name>xMutexAlloc</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>a1092d5c1659c494c5235e884def5e275</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xMutexFree</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>a4e58d446a7225ce91073eb0af91d219a</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xMutexEnter</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>ac60f7bb165e9770949a8a2b2c2632830</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xMutexTry</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>a45682df41bdfcb267a696090c80ebd06</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xMutexLeave</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>acfa193f9130bfc68caf7f1849bcd0dac</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xMutexHeld</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>a5d30a95c614bc08fe156c9ea0f0d88e8</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xMutexNotheld</name>
      <anchorfile>structsqlite3__mutex__methods.html</anchorfile>
      <anchor>a7bc1edfd01c67c6dcee26299bc31a7bf</anchor>
      <arglist>)(sqlite3_mutex *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_pcache_methods</name>
    <filename>structsqlite3__pcache__methods.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>pArg</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>a90394a920f6a09dd13553aeb79bbed88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xInit</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>ab5f54101f6060de1af0c87b2456231ad</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xShutdown</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>aa88bb238d288631e7e06f4da232c3dbb</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_pcache *(*</type>
      <name>xCreate</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>a36b1da95aeb7972c3c0d358aedf2a3d4</anchor>
      <arglist>)(int szPage, int bPurgeable)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xCachesize</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>a9cf385dbec7f0d19793e2616a73a3b7f</anchor>
      <arglist>)(sqlite3_pcache *, int nCachesize)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xPagecount</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>a0ab192dc811798e8f17c445dbf379989</anchor>
      <arglist>)(sqlite3_pcache *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>xFetch</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>a2e054ad70c9672b504d3d7291e4eb487</anchor>
      <arglist>)(sqlite3_pcache *, unsigned key, int createFlag)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xUnpin</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>ade2ab50cc6896be03ee86541877fa85e</anchor>
      <arglist>)(sqlite3_pcache *, void *, int discard)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xRekey</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>adc5552190f1de86eb95d91e9cf8430e6</anchor>
      <arglist>)(sqlite3_pcache *, void *, unsigned oldKey, unsigned newKey)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xTruncate</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>aad73f9335999770bcd2dc6a2d914b4f0</anchor>
      <arglist>)(sqlite3_pcache *, unsigned iLimit)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDestroy</name>
      <anchorfile>structsqlite3__pcache__methods.html</anchorfile>
      <anchor>aac18fc581d8d63550a6657016c24ba5d</anchor>
      <arglist>)(sqlite3_pcache *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_rtree_geometry</name>
    <filename>structsqlite3__rtree__geometry.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>pContext</name>
      <anchorfile>structsqlite3__rtree__geometry.html</anchorfile>
      <anchor>a62fe439a49ed5b8628464c418f35f572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nParam</name>
      <anchorfile>structsqlite3__rtree__geometry.html</anchorfile>
      <anchor>ada7b9eba82660e3321dd4c93526697c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>aParam</name>
      <anchorfile>structsqlite3__rtree__geometry.html</anchorfile>
      <anchor>a0c8490f1e003fd50729b87fa97bf0526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pUser</name>
      <anchorfile>structsqlite3__rtree__geometry.html</anchorfile>
      <anchor>add62e1cd5faa6000c815104af3c540d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDelUser</name>
      <anchorfile>structsqlite3__rtree__geometry.html</anchorfile>
      <anchor>afa1ed10f488b306df354efe56efdf287</anchor>
      <arglist>)(void *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_vfs</name>
    <filename>structsqlite3__vfs.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iVersion</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a694dd264949bd163545fe174510ed019</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>szOsFile</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a549399081342d61134b6398562a0a997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mxPathname</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>adb2d82c74891b00b5529fb94e7710135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_vfs *</type>
      <name>pNext</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a4b12c503e4083854a9c4d91697a12de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zName</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a01a82d3e1a7efc00a762a00751ed592b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pAppData</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a8de686c5e679ba421479ac96d6654527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xOpen</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a5f35d5528d8fdf1d26e1e206879afbe1</anchor>
      <arglist>)(sqlite3_vfs *, const char *zName, sqlite3_file *, int flags, int *pOutFlags)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xDelete</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a5f547a3e54f91c7ebef140d51054bbc0</anchor>
      <arglist>)(sqlite3_vfs *, const char *zName, int syncDir)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xAccess</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>ab4344474034c2dbc9223a362c65ff235</anchor>
      <arglist>)(sqlite3_vfs *, const char *zName, int flags, int *pResOut)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xFullPathname</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a02fafc56d26adab5f236df6493a8bd55</anchor>
      <arglist>)(sqlite3_vfs *, const char *zName, int nOut, char *zOut)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>xDlOpen</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>ad6587e730f4f8bce2b0129664a9a86b9</anchor>
      <arglist>)(sqlite3_vfs *, const char *zFilename)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDlError</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a3cda3a00a43861cef4d5554354cdfda4</anchor>
      <arglist>)(sqlite3_vfs *, int nByte, char *zErrMsg)</arglist>
    </member>
    <member kind="variable">
      <type>void(*(*</type>
      <name>xDlSym</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a20ef3dacb974e3e480782629cbbf7534</anchor>
      <arglist>)(sqlite3_vfs *, void *, const char *zSymbol))(void)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDlClose</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>adaa986b55a44971e7048d160ac5071ad</anchor>
      <arglist>)(sqlite3_vfs *, void *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xRandomness</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>ace3fcb41cb01a947457532f645ba4c88</anchor>
      <arglist>)(sqlite3_vfs *, int nByte, char *zOut)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xSleep</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a8ebcfaceced9713024cb8e2508fe6c1b</anchor>
      <arglist>)(sqlite3_vfs *, int microseconds)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xCurrentTime</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>ab85a8a3ab59f76a6685508fefaa7b691</anchor>
      <arglist>)(sqlite3_vfs *, double *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xGetLastError</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>a4994110c79d082f7770ce553d507748f</anchor>
      <arglist>)(sqlite3_vfs *, int, char *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xCurrentTimeInt64</name>
      <anchorfile>structsqlite3__vfs.html</anchorfile>
      <anchor>aa281584c422969b7f0df0e5f918fc590</anchor>
      <arglist>)(sqlite3_vfs *, sqlite3_int64 *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_vtab</name>
    <filename>structsqlite3__vtab.html</filename>
    <member kind="variable">
      <type>const sqlite3_module *</type>
      <name>pModule</name>
      <anchorfile>structsqlite3__vtab.html</anchorfile>
      <anchor>acf0d906e36b113669eaa883c5f8b5ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structsqlite3__vtab.html</anchorfile>
      <anchor>ab3c80d385849bdd82363a0df7d6fcba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zErrMsg</name>
      <anchorfile>structsqlite3__vtab.html</anchorfile>
      <anchor>a47331586775d674ae951b07ebb902fca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sqlite3_vtab_cursor</name>
    <filename>structsqlite3__vtab__cursor.html</filename>
    <member kind="variable">
      <type>sqlite3_vtab *</type>
      <name>pVtab</name>
      <anchorfile>structsqlite3__vtab__cursor.html</anchorfile>
      <anchor>a7bb57f3f9c7c618a9d6d33c6d9820bdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Sqlite3Config</name>
    <filename>structSqlite3Config.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>bMemstat</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>aae01de5f37a66422f2a7413e108e03fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bCoreMutex</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a202216a82e0823d0a4629c4884215a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bFullMutex</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>aab880bf54370cd0f6210afce0fb646ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mxStrlen</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a66f1f85ec9b7724f7fe0bebad61a634f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>szLookaside</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>ad7504c4c1867db9837b40d7c22ba7582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nLookaside</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a2519388eb9688eb3dbdc9b279ee73e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mem_methods</type>
      <name>m</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a922ec99508e346db8e4fbaec58aa1ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mutex_methods</type>
      <name>mutex</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>afa8189b51142fd800d1dee1987187f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_pcache_methods</type>
      <name>pcache</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>aa9d1e3517abb5ba50017870f34f1a77e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pHeap</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a52f66f1870b47adde44507d6bd523113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nHeap</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a06d6d22e0fca1b713f9c7a110a89abba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mnReq</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a2abbe78d2443b7408a01f59299da1174</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mxReq</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a060f9ef5a2bda888a8253229384ab4a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pScratch</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>aafbeaaeee4df0b98598c19a8af6cefed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>szScratch</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>aed5cee0c084b3298b4f15debdab90272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nScratch</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a63b88fc0b4f1dd3dfd11edc7ac0f657b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pPage</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a059fe8443905388d65d741ba655438f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>szPage</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>aab2aff0daff6b09c1d77299c81892a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nPage</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a46af661bdb7a466b046a04b032868a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mxParserStack</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a5622c6caef3cd04007517a3a0c5e7ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sharedCacheEnabled</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>ad9837f5e2f338d708234afdb8878184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>isInit</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a11f18afbc3476ee16d97e75ad770670e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>inProgress</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a3cc1f0564475ead1840892e8ac6989ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>isMutexInit</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>af576d567cc36956e0c4c3a7487b53edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>isMallocInit</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>ab0ec050075ee245df0a54623b0073bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>isPCacheInit</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a945ec3af8fd8f2efaccec88e2597393b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mutex *</type>
      <name>pInitMutex</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>af8ffb8388972c384840dd36beca35e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRefInitMutex</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a423f5c1b3f68d9c569661a542ebe7220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xLog</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a59bd59da6676dc62f9acdd6ff6d27d82</anchor>
      <arglist>)(void *, int, const char *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pLogArg</name>
      <anchorfile>structSqlite3Config.html</anchorfile>
      <anchor>a501ab4552bc7c54bb413aced5889dcdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SrcList</name>
    <filename>structSrcList.html</filename>
    <class kind="struct">SrcList::SrcList_item</class>
    <member kind="variable">
      <type>i16</type>
      <name>nSrc</name>
      <anchorfile>structSrcList.html</anchorfile>
      <anchor>a99c1d923c49fc0598d92f1cb54958ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i16</type>
      <name>nAlloc</name>
      <anchorfile>structSrcList.html</anchorfile>
      <anchor>aae88b994b131fea8c733aa609bae7e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct SrcList::SrcList_item</type>
      <name>a</name>
      <anchorfile>structSrcList.html</anchorfile>
      <anchor>acd181938f7144b40022b28072247aa3d</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SrcList::SrcList_item</name>
    <filename>structSrcList_1_1SrcList__item.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zDatabase</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a2f7bf0921794dc46d74d2546fc10f7de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>afee5c5a84594fed8100be3cdb3e3ff1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zAlias</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a461ef8d80828ed8dd4409b9244ae2919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pTab</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a8779b2d10d0e25af78ad90e57f9cd4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Select *</type>
      <name>pSelect</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>ab44822fca7618c4f41f4f770ad41425b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isPopulated</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a15344798686ebe498de3aac0a9b3cab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>jointype</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a36193fe4914ddc86222e5c70d9639a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>notIndexed</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a4465537a30765604006ec58f0fcc3a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>iSelectId</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a099cfe9b7559b42c49dda02e57188738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iCursor</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>af2e8aae90bd7a00b814db5a2d31f6607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pOn</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a525f683af2ffa8f094d941a5a4972720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IdList *</type>
      <name>pUsing</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a38ecf205dcaebad098b73c56e48ba944</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitmask</type>
      <name>colUsed</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a4fd7e7e26995048b58006d020e8c48d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zIndex</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>a72b8e117712e49607b770a462fb42d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Index *</type>
      <name>pIndex</name>
      <anchorfile>structSrcList_1_1SrcList__item.html</anchorfile>
      <anchor>ab4722e97bd4852c8b84e620185955c28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>StatisticsROI</name>
    <filename>structStatisticsROI.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>mIntensityMean</name>
      <anchorfile>structStatisticsROI.html</anchorfile>
      <anchor>a25ea15ce8fc04ac6bf458e56256acc16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mIntensityVariance</name>
      <anchorfile>structStatisticsROI.html</anchorfile>
      <anchor>aeddb797ebcd1e190df97ef50133cdf3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stira::common::RectangularROI&lt; int &gt;</type>
      <name>mROI</name>
      <anchorfile>structStatisticsROI.html</anchorfile>
      <anchor>a0fd51f75609d7084b77282af7dd6fd73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>StrAccum</name>
    <filename>structStrAccum.html</filename>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>ade44091c9a91671c9457b9e4a98a9a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zBase</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>a5797e2f288573ee98a4025f0f96fe50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zText</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>ac45a51cb7b85da2ae9865eac21d416dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nChar</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>a88bf779588ca597a41fde3e41186e003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nAlloc</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>ae2f21c484b737b9903e695977c27815a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mxAlloc</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>ab9985e4aabc65bebbf026881ce0b59bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>mallocFailed</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>a6bc89e5ed8495ddcddadf0940f236c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>useMalloc</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>abc135ceee2e63f41c101aceca5e9417b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>tooBig</name>
      <anchorfile>structStrAccum.html</anchorfile>
      <anchor>ae5b62e58c33302b44fedf0e204757ced</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SubProgram</name>
    <filename>structSubProgram.html</filename>
    <member kind="variable">
      <type>VdbeOp *</type>
      <name>aOp</name>
      <anchorfile>structSubProgram.html</anchorfile>
      <anchor>aa9bb1992fed633d182076a35d6448c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nOp</name>
      <anchorfile>structSubProgram.html</anchorfile>
      <anchor>a6fe204a75ab8254c453be77f024b6d69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nMem</name>
      <anchorfile>structSubProgram.html</anchorfile>
      <anchor>a9bece42fdeb81085809d7c2f8aa05616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nCsr</name>
      <anchorfile>structSubProgram.html</anchorfile>
      <anchor>a83b18aa5cc63aecdbf996c16af1e48bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>token</name>
      <anchorfile>structSubProgram.html</anchorfile>
      <anchor>aaea3b67899b092476b107d22a4e2022d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SubProgram *</type>
      <name>pNext</name>
      <anchorfile>structSubProgram.html</anchorfile>
      <anchor>a7da35488ac58a64fa30b88da56aac8b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SumCtx</name>
    <filename>structSumCtx.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>rSum</name>
      <anchorfile>structSumCtx.html</anchorfile>
      <anchor>a1774080b9bcada2f4e867eaf40763f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>iSum</name>
      <anchorfile>structSumCtx.html</anchorfile>
      <anchor>ace6196fb30ebc0687997a723d55683db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>cnt</name>
      <anchorfile>structSumCtx.html</anchorfile>
      <anchor>ada00261fe604a7cc6719fdcd8bb5914c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>overflow</name>
      <anchorfile>structSumCtx.html</anchorfile>
      <anchor>a3b14a5da00584aff08314d5e9ddbe9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>approx</name>
      <anchorfile>structSumCtx.html</anchorfile>
      <anchor>a035a2a22271fee066d9a92d12fe3b9a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Table</name>
    <filename>structTable.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a20ca62607d6da596b1016b76cf677809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iPKey</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>ab6c8b60da43ccc8a2e2b5b65cc74058f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nCol</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a2b3925b85368f0367322ab66bf289163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Column *</type>
      <name>aCol</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a87ec3b706ecf9545bd9ed582a12ce3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Index *</type>
      <name>pIndex</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a5dffd0c9e8f0265d6a47b32bd0e6d59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tnum</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>aebe1abbfb2fd4b5e5dff8e74a4f3c890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>nRowEst</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>ab02e911d8ea2a75de3fa2d4823194428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Select *</type>
      <name>pSelect</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a39d620182fe2174fc97d04094421fa60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nRef</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a5c3d59f52186917d412d42e008dd302c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>tabFlags</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>ab0aeb112ae7e1b81e2a18bc493f7992c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>keyConf</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>add1b22425db781d976d25b4465a2965a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FKey *</type>
      <name>pFKey</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a37ccce5ee6d530001d49c82788c6616d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zColAff</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>ac95c0c7b04f2c8367beb98d386d4228f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pCheck</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>af1f659d88810fcd5813c2b415a4e0167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>addColOffset</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>ab6f1ad10bce5c20faca55cd0a9c3f1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VTable *</type>
      <name>pVTable</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a7b9903cfbfefe7b8bf872c4f50cb2e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nModuleArg</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a74a2c5547ea876ebe77dbea0d99361bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>azModuleArg</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>af3af6596efa41894bcd3c3c9f9b6781f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Trigger *</type>
      <name>pTrigger</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>aca61c40bb0164f2c6fc3406c28988660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Schema *</type>
      <name>pSchema</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>a1d6ce038a061722cebaeba0f3ffceacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Table *</type>
      <name>pNextZombie</name>
      <anchorfile>structTable.html</anchorfile>
      <anchor>ae365eb0d8f6d3cb39f3908323cba45e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TableLock</name>
    <filename>structTableLock.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iDb</name>
      <anchorfile>structTableLock.html</anchorfile>
      <anchor>ad5cc726ef29ffcca39ec0b72942513f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iTab</name>
      <anchorfile>structTableLock.html</anchorfile>
      <anchor>ab25b5d9ba21ed96ed68ce8064ff84e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isWriteLock</name>
      <anchorfile>structTableLock.html</anchorfile>
      <anchor>a171121af9886ee08044d4b82b991ceeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zName</name>
      <anchorfile>structTableLock.html</anchorfile>
      <anchor>ad1ce077fbd2600dd6d23ec08706dd227</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TabResult</name>
    <filename>structTabResult.html</filename>
    <member kind="variable">
      <type>char **</type>
      <name>azResult</name>
      <anchorfile>structTabResult.html</anchorfile>
      <anchor>a7446a22a7b39c17e447c65ba200490a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zErrMsg</name>
      <anchorfile>structTabResult.html</anchorfile>
      <anchor>a6e7104bb622be05f16b6470dbb68a6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nAlloc</name>
      <anchorfile>structTabResult.html</anchorfile>
      <anchor>a6a1d5bc64a1eeef54b56cb2602b663b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRow</name>
      <anchorfile>structTabResult.html</anchorfile>
      <anchor>ae803d6f07364c9e03bee8abd13056e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nColumn</name>
      <anchorfile>structTabResult.html</anchorfile>
      <anchor>a44237b9ab33cdbca7a5a158470ebcaa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nData</name>
      <anchorfile>structTabResult.html</anchorfile>
      <anchor>a959e8dd3348f76e4cdabad9c89ee62d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rc</name>
      <anchorfile>structTabResult.html</anchorfile>
      <anchor>a44bb015ce660ed3f987e324919d73f4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tAVI_RGB</name>
    <filename>classtAVI__RGB.html</filename>
    <class kind="struct">tAVI_RGB::tAVIHEADER</class>
    <class kind="struct">tAVI_RGB::tAVIINDEX</class>
    <class kind="struct">tAVI_RGB::tAVIJUNK</class>
    <class kind="struct">tAVI_RGB::tAVISTREAMFORMAT</class>
    <class kind="struct">tAVI_RGB::tAVISTREAMHEADER</class>
    <class kind="struct">tAVI_RGB::tRECT</class>
    <class kind="struct">tAVI_RGB::tRGBQUAD</class>
    <member kind="function">
      <type>void</type>
      <name>SetFPS</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>ad06021dcb3381083bf54b1f57832eaa6</anchor>
      <arglist>(int fps)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFPS</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a666e77ccbfe1c1074629d9b554c6f94c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToggleInterleaved</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a4053100737d42751ae1433b2442fdcd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IsInterleaved</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a84e25a6e32021259bd482276a757e1e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToggleIndex</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>aa7830fcb3f957c01ce0b21540a57f336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IsIndex</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a965e3a664d5bb2e18b2b6602bad61715</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetNumberOfFrames</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a154dfbf8ee3908d6d0339055affaad83</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetWidth</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a28ef41a951ac18db220848118e5af643</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetHeight</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a28b717b44835c10f6c15e099ca5deefa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a769f73320238d7058987683bb382e990</anchor>
      <arglist>(char const *fname, uint nframes, uint width, uint height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Read</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a4efafbe689b604ebd05b2f5831688fd6</anchor>
      <arglist>(char const *fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteFrame</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a3377a9112773a1dfdff2d9c70e993740</anchor>
      <arglist>(uint frame_nr, tFrame *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteImageToFrame</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a026ea6dae5b9bad4c10031787aeb4b63</anchor>
      <arglist>(uint frame_nr, tFrame *pFrame, stira::image::Image *pImage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteGridToFrame</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a3ba07ca24c9be6932aafe38682d40966</anchor>
      <arglist>(uint frame_nr, tFrame *pFrame, stira::image::ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function">
      <type>stira::image::Image *</type>
      <name>GetFrameAsImage</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>aee812a621303e1abe85d7b40ffbe35b4</anchor>
      <arglist>(uint frame_nr, tFrame *buffer)</arglist>
    </member>
    <member kind="function">
      <type>tFrame *</type>
      <name>ReadFrame</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a86bb0b51aac34e0bda324d0a9406bfef</anchor>
      <arglist>(uint frame_nr, tFrame *buffer=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CreateRIFF</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a4da9941b934c74190813b756b592ec0e</anchor>
      <arglist>(uint nframes, uint width, uint height)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>DestroyRIFF</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>ade1a044b56abf51c1b82ba0239c0ae0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>close_file</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>acaa90cbc078e19d3fb1ad3a926ce545b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tAVIHEADER</type>
      <name>m_AVIh</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a9ecf4b62742c6b447defebed6f018296</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tAVISTREAMHEADER</type>
      <name>m_AVIsh</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a8479fbc7f0dad60a96192f18d202f7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tAVISTREAMFORMAT</type>
      <name>m_AVIsf</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>ac47043a5cc4b4d8a40e94d13bb79c6cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tAVIINDEX</type>
      <name>m_AVIid</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a05a26c4f71970992dacd7509e2d5545b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tRIFF *</type>
      <name>m_RIFF</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a3c1d3626b773991136664bc935a69523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_Fps</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a076be5df42c87e4ea543ae651b3c3658</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DWORD</type>
      <name>m_Flags</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>afb6b1868699376c5d3d4d86c906a187e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint *</type>
      <name>m_FileOffset</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a8997302c6d26052592691104249b1697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FILE *</type>
      <name>m_File</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>afa393d3110f99407dbc15307319b3c7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_CONTAIN_IDX</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a606209ae0ce7f785e116a174fc734e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_USE_IDX_FOR_ORDER</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a4da305fa05478abf57fcea8bccb0c456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_INTERLEAVED</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a913f5367961544b30c7fd17cddc07d70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_CAPTURE_OPTIMIZE</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>a3b3c86ea4f2d3e4a56016dbcb6df99b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_COPYRIGHTED</name>
      <anchorfile>classtAVI__RGB.html</anchorfile>
      <anchor>acdb02f1834f9026fed976319708d7d42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_RGB::tAVIHEADER</name>
    <filename>structtAVI__RGB_1_1tAVIHEADER.html</filename>
    <member kind="variable">
      <type>DWORD</type>
      <name>TimeBetweenFrames</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a7ad0e4c24d3271c39f9aeecc8303894a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>MaximumDataRate</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a376ae838471f7659a8f5b0c4402b91f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>PaddingGranularity</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>afeab829aab011a05ae1c35a32185baa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Flags</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a7e5a1c5756e7edf58c14f3c353db09cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>TotalNumberOfFrames</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a5d5969ba8d008de640ef0f2e7f9273a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>NumberOfInitialFrames</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a453e693deddb51a58e3f2258c9cee642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>NumberOfStreams</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>aff247cdac4a37e0cb50953d3a37d6149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>SuggestedBufferSize</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a212909b5b9c653413c58f3a9abfa05f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Width</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>afe168c9ea2c3f4d7cc469d8f41a36aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Height</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a0eae16fb94535868ee3e13fe642d5873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>TimeScale</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>ac17446e390feb1bafc06b1772ef3cfd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>DataRate</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a5e98e82216995f2c93d489cf246a9424</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>StartTime</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>a9cd93a4a5630324c44ad74d706fd22d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>DataLength</name>
      <anchorfile>structtAVI__RGB_1_1tAVIHEADER.html</anchorfile>
      <anchor>ad4d533c9be4430500edd278634a07094</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_RGB::tAVIINDEX</name>
    <filename>structtAVI__RGB_1_1tAVIINDEX.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>Identifier</name>
      <anchorfile>structtAVI__RGB_1_1tAVIINDEX.html</anchorfile>
      <anchor>a7e30b7d35dae1515c1bbdcb39b78f8bc</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Flags</name>
      <anchorfile>structtAVI__RGB_1_1tAVIINDEX.html</anchorfile>
      <anchor>ab8e2b49fec923c6dfabf09da7096f799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Offset</name>
      <anchorfile>structtAVI__RGB_1_1tAVIINDEX.html</anchorfile>
      <anchor>a42ab46e2d154a083e391078f26f2f431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Length</name>
      <anchorfile>structtAVI__RGB_1_1tAVIINDEX.html</anchorfile>
      <anchor>a6d32e4fdb10959d4f4cc7303d487c06c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_RGB::tAVIJUNK</name>
    <filename>structtAVI__RGB_1_1tAVIJUNK.html</filename>
    <member kind="variable">
      <type>DWORD</type>
      <name>ChunckId</name>
      <anchorfile>structtAVI__RGB_1_1tAVIJUNK.html</anchorfile>
      <anchor>a9c4329c0bc5eda0acac3c2e2194367d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>PaddingSize</name>
      <anchorfile>structtAVI__RGB_1_1tAVIJUNK.html</anchorfile>
      <anchor>a483f4e9d52ed072ba10df736b2bbae9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BYTE *</type>
      <name>Padding</name>
      <anchorfile>structtAVI__RGB_1_1tAVIJUNK.html</anchorfile>
      <anchor>aa367b3973f343822841593f8df30225b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_RGB::tAVISTREAMFORMAT</name>
    <filename>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</filename>
    <member kind="variable">
      <type>DWORD</type>
      <name>FormatLength</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a72c839fad1dd27e17e331beadc23bdcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Width</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a84ba624c424eb50f6464eed85b3cf801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Height</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a9aa89443694b5a8024ef49edcc0deadc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>NumberOfPlanes</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>aa6a90796154ea57ca12d2a55eb299423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>BitCount</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a1d8311b050b9a49ace3c93a6ab206be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>Type</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a93b010beb383888af6fda424f0d25cd2</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>PlaneSize</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a7768361b1388102343449a29a6726804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>XperMeter</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>ade40a2c6f376dde4f755cc32e854d17b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>YperMeter</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a64dbf5e15cf2c934d24014a3dd102a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>ClrUsed</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a42dc9a321df2e836e08976dd9fa3fcc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>ClrImportant</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a6c7257a3281812864f0d95768b91e709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tRGBQUAD</type>
      <name>Colors</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a3d30fa93f28c5546253848e68203cf36</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_RGB::tAVISTREAMHEADER</name>
    <filename>structtAVI__RGB_1_1tAVISTREAMHEADER.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>DataType</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a17b90e2ce917d868cee19734df00a738</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>DataHandler</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>ac3bc7fb30a3fdda7e8114d6c813a821c</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Flags</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a684ab46df001861a8b261e29e96a51cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>Priority</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>aaf6bbbdf76f3a2d67411e62faad02f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>Language</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>aae877d64c1bfd9b4aacd7e8ce0c17d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>InitialFrames</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a2290566fd82858af17c3fe03e9c22e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>TimeScale</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a45e08eb88b864ca897f1f85fc45e6478</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>DataRate</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>ad936da95f8168c33b1737ef514d3cbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>StartTime</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>aac98942abf15d1722a8568bd9268aabf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>DataLength</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>af391bfc67f996de9d7baa39a172f1791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>SuggestedBufferSize</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a9a5cad77c167d0c911e133e1dab791e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Quality</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a722f1cd909325279fbae554bc1790ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>SampleSize</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a67e326f6cc6feca61fa5dd4fc46756ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tRECT</type>
      <name>Rectangle</name>
      <anchorfile>structtAVI__RGB_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a8dde0fb945881c6e56435f37cea2616d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_RGB::tRECT</name>
    <filename>structtAVI__RGB_1_1tRECT.html</filename>
    <member kind="variable">
      <type>WORD</type>
      <name>left</name>
      <anchorfile>structtAVI__RGB_1_1tRECT.html</anchorfile>
      <anchor>a07791d89ff66e56a17b4fd68ded0d236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>top</name>
      <anchorfile>structtAVI__RGB_1_1tRECT.html</anchorfile>
      <anchor>a7830af5585fc84a38023f8b49ced02f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>right</name>
      <anchorfile>structtAVI__RGB_1_1tRECT.html</anchorfile>
      <anchor>ae9634b19c5e1aa68828df33798f99002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>bottom</name>
      <anchorfile>structtAVI__RGB_1_1tRECT.html</anchorfile>
      <anchor>aa2123698e55aa63650a98d418aedf5e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_RGB::tRGBQUAD</name>
    <filename>structtAVI__RGB_1_1tRGBQUAD.html</filename>
    <member kind="variable">
      <type>BYTE</type>
      <name>rgbBlue</name>
      <anchorfile>structtAVI__RGB_1_1tRGBQUAD.html</anchorfile>
      <anchor>ac04395bfa1bc3b0cc3a0bf1904c674a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BYTE</type>
      <name>rgbGreen</name>
      <anchorfile>structtAVI__RGB_1_1tRGBQUAD.html</anchorfile>
      <anchor>ae61580cb57dc5c80add55c54eb943784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BYTE</type>
      <name>rgbRed</name>
      <anchorfile>structtAVI__RGB_1_1tRGBQUAD.html</anchorfile>
      <anchor>a372a19e9c256463893594433393e791e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BYTE</type>
      <name>rgbReserved</name>
      <anchorfile>structtAVI__RGB_1_1tRGBQUAD.html</anchorfile>
      <anchor>af86bfec006dc1667c6f45d79f0faaa43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tAVI_YUV</name>
    <filename>classtAVI__YUV.html</filename>
    <class kind="struct">tAVI_YUV::tAVIHEADER</class>
    <class kind="struct">tAVI_YUV::tAVIINDEX</class>
    <class kind="struct">tAVI_YUV::tAVIJUNK</class>
    <class kind="struct">tAVI_YUV::tAVISTREAMFORMAT</class>
    <class kind="struct">tAVI_YUV::tAVISTREAMHEADER</class>
    <class kind="struct">tAVI_YUV::tRECT</class>
    <class kind="struct">tAVI_YUV::tYUVQUAD</class>
    <member kind="function">
      <type>void</type>
      <name>SetFPS</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>ac3a1abccd1e5590af92870f0d245f710</anchor>
      <arglist>(int fps)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFPS</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a7a58c5a7bf867258f851ba2daf5c0f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToggleInterleaved</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>aad71308d8dc1a5e03746e14e66504c0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IsInterleaved</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>ac1174b9d6594ef212d3a0a0e9d560e29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToggleIndex</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a69a4a554b351a16dae3ae1d66100a741</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IsIndex</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a6994f8b73e4581d9313d0f57ec7fde6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetNumberOfFrames</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>ac64ee515d96b372a069985d4a8a394c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetWidth</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>ae7a299d2adda3afaa62b2b361752402a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetHeight</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a0e0c975315f0c3c318266290a716b911</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a40d08722e352a3a43efe5ff2165408a4</anchor>
      <arglist>(char *fname, uint nframes, uint width, uint height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Read</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a5b858f8e1ab3aa6edabc08e8bf684bf3</anchor>
      <arglist>(char *fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteFrame</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>ad457da3624dcfd79ce65ffa5bad8f696</anchor>
      <arglist>(uint frame_nr, tFrame *)</arglist>
    </member>
    <member kind="function">
      <type>tFrame *</type>
      <name>ReadFrame</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a48394eee0b2b81b1648a3a1194bbc385</anchor>
      <arglist>(uint frame_nr, tFrame *buffer=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CreateRIFF</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>ad8632daebb524d8ff59f759e4d97d3af</anchor>
      <arglist>(uint nframes, uint width, uint height)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>DestroyRIFF</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a7d3dc74f937b76e6cd81ffbdf9872380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>close_file</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>ad47778eb9d2699294530a6b454e6465f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tAVIHEADER</type>
      <name>m_AVIh</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a8092cf050531fd8e65b1ab07d1d59578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tAVISTREAMHEADER</type>
      <name>m_AVIsh</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a9efc4abfe2d8bea2c0617846e625ca22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tAVISTREAMFORMAT</type>
      <name>m_AVIsf</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a73288a1f46efa03c8eadc1f2ae78e683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tAVIINDEX</type>
      <name>m_AVIid</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>adb2d0b700996b2ae84beb6a013063497</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tRIFF *</type>
      <name>m_RIFF</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a08771e4a79e80cbd47e7709002f3d4b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_Fps</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a5db11b12efeab5a161d905c9ef619194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DWORD</type>
      <name>m_Flags</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a14cedef3fe1f9d4106bea0933fa9f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint *</type>
      <name>m_FileOffset</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>af429b4727c6fee62a497e2448830f151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FILE *</type>
      <name>m_File</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a67ec0abe0d016dddfce8031fe1b587f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_CONTAIN_IDX</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>af2dea5c5a6195aafd424597e6ee790e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_USE_IDX_FOR_ORDER</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>ace5187789a8720811d0b62d5e6c5d1b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_INTERLEAVED</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a1095024b6db19d1441c2f3a924430aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_CAPTURE_OPTIMIZE</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a801cdad5045ad484ebc0ad1ba2768fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const DWORD</type>
      <name>FLAGS_COPYRIGHTED</name>
      <anchorfile>classtAVI__YUV.html</anchorfile>
      <anchor>a2c243f90a57f8234f3015e689b65e6ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_YUV::tAVIHEADER</name>
    <filename>structtAVI__YUV_1_1tAVIHEADER.html</filename>
    <member kind="variable">
      <type>DWORD</type>
      <name>TimeBetweenFrames</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>af76651d4a92c75e54de80e9d1e0eb671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>MaximumDataRate</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>af7bdaf779fa22f40ce2425f00e05dd2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>PaddingGranularity</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>a1c9fff18ea5580080b5c370798cc926b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Flags</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>a5bab19cb970474e25acbbf0755c81b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>TotalNumberOfFrames</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>a781b93c0aeb517b641ddc01631d466f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>NumberOfInitialFrames</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>a8dafb9707f55276c309645ef991c45bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>NumberOfStreams</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>a6cc6d764c7b16fc682e715ad498a6313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>SuggestedBufferSize</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>a9bb47fb109a6e6a6b3907ebb33095160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Width</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>abbf8de33f4d625d9688d90bbdd0db46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Height</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>ae8b95d5c3ea917bc26f67cabd6b5c34e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>TimeScale</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>a7c521e08332823dcdd274d91fe9b5a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>DataRate</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>a49cd569cc2703de88df978d68dea9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>StartTime</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>ad72d962c24ef77d454627f4d35233544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>DataLength</name>
      <anchorfile>structtAVI__YUV_1_1tAVIHEADER.html</anchorfile>
      <anchor>af9ec3f6a63a6b2dbe649911b978eb746</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_YUV::tAVIINDEX</name>
    <filename>structtAVI__YUV_1_1tAVIINDEX.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>Identifier</name>
      <anchorfile>structtAVI__YUV_1_1tAVIINDEX.html</anchorfile>
      <anchor>af8003bc928f652fda4ff15cdd6e5dfd8</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Flags</name>
      <anchorfile>structtAVI__YUV_1_1tAVIINDEX.html</anchorfile>
      <anchor>a3d104991dd552e02b74d392737b30d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Offset</name>
      <anchorfile>structtAVI__YUV_1_1tAVIINDEX.html</anchorfile>
      <anchor>a4ba2aea58e9c50ba3093b95be9e8deef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Length</name>
      <anchorfile>structtAVI__YUV_1_1tAVIINDEX.html</anchorfile>
      <anchor>a4dc4c060c9956212c2ac65ff931d625f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_YUV::tAVIJUNK</name>
    <filename>structtAVI__YUV_1_1tAVIJUNK.html</filename>
    <member kind="variable">
      <type>DWORD</type>
      <name>ChunckId</name>
      <anchorfile>structtAVI__YUV_1_1tAVIJUNK.html</anchorfile>
      <anchor>a34284356cf42f3316661d0dc55789f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>PaddingSize</name>
      <anchorfile>structtAVI__YUV_1_1tAVIJUNK.html</anchorfile>
      <anchor>aeb10b25a3b6cbaa3fdcf866fc8a6c382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BYTE *</type>
      <name>Padding</name>
      <anchorfile>structtAVI__YUV_1_1tAVIJUNK.html</anchorfile>
      <anchor>a3fe44ab6f019baf07c20d089370a3d01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_YUV::tAVISTREAMFORMAT</name>
    <filename>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</filename>
    <member kind="variable">
      <type>DWORD</type>
      <name>FormatLength</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a4e88c315dbc0ffecc5304e681fac53f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Width</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>ab02c2252c32c621eea0368febaacd8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Height</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a54c36401a850ac6271c6a9ca27f382af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>NumberOfPlanes</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a29e95275fed94b9a80844df87876ec52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>BitCount</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a889574e8c48ee1739dffc91300b9897c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>Type</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a6f7fa59ad5c75251a60f13315c2bf083</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>PlaneSize</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>aa5e8ec18f6110731f9d3c84e50bcf4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>XperMeter</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a4e053638078b0b4e76319e87100b5c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>YperMeter</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a11c2399e782ab86223b2fc9ac22fab4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>ClrUsed</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>ad8a391dd51e41ef11fdeb0c7924c2070</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>ClrImportant</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>af34a0d3ef61e0a780ed8fa4aa21af7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tYUVQUAD</type>
      <name>Colors</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMFORMAT.html</anchorfile>
      <anchor>a483dc89d48f3b066867ddf3f27620152</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_YUV::tAVISTREAMHEADER</name>
    <filename>structtAVI__YUV_1_1tAVISTREAMHEADER.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>DataType</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>abc473ed84140bc2c88105d1df021cf34</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>DataHandler</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a3eedf8135dbcbe0a24985f8d9f8d0fe5</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Flags</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a0f164ce4b9522dc4ac68eb0df134f3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>Priority</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a5c398b919f1afe8545a56d5740563142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>Language</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a23e71ad822ec218630975af07c81e143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>InitialFrames</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>abe6ca79a7dc7249b4101ad0f68cbe608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>TimeScale</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>ad4ea159430e894a3fb11f408f052c98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>DataRate</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>aa58faea0a610ba896463b1e26ff4fa23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>StartTime</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>ad8173d5869e0c17e0d32938518d55fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>DataLength</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>a8f9bee68c0ae920dffc5ee576b34f6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>SuggestedBufferSize</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>ac93a8376647270c73e58ef73ea02343e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>Quality</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>aa8f223d6b58cdfc394365e92a116a368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DWORD</type>
      <name>SampleSize</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>aa73e088648ac5c0323acebe3228659cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tRECT</type>
      <name>Rectangle</name>
      <anchorfile>structtAVI__YUV_1_1tAVISTREAMHEADER.html</anchorfile>
      <anchor>ab4e1a469d40a3844ea618af3c30eea3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_YUV::tRECT</name>
    <filename>structtAVI__YUV_1_1tRECT.html</filename>
    <member kind="variable">
      <type>WORD</type>
      <name>left</name>
      <anchorfile>structtAVI__YUV_1_1tRECT.html</anchorfile>
      <anchor>ae6ae588930a97a1370d674bf6cc68f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>top</name>
      <anchorfile>structtAVI__YUV_1_1tRECT.html</anchorfile>
      <anchor>af73a01a6c27cf1c48b9b7d5b72c0a874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>right</name>
      <anchorfile>structtAVI__YUV_1_1tRECT.html</anchorfile>
      <anchor>acfa6fc87bba6a761e85e14d99cec9e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD</type>
      <name>bottom</name>
      <anchorfile>structtAVI__YUV_1_1tRECT.html</anchorfile>
      <anchor>a459fd077fef0ada25b9295d08a688f53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tAVI_YUV::tYUVQUAD</name>
    <filename>structtAVI__YUV_1_1tYUVQUAD.html</filename>
    <member kind="variable">
      <type>BYTE</type>
      <name>yuvY</name>
      <anchorfile>structtAVI__YUV_1_1tYUVQUAD.html</anchorfile>
      <anchor>a7046e26b03417d424eb787e6157b4e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BYTE</type>
      <name>yuvU</name>
      <anchorfile>structtAVI__YUV_1_1tYUVQUAD.html</anchorfile>
      <anchor>ad56f1cae2e07dc8d2818a111405a5ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BYTE</type>
      <name>yuvV</name>
      <anchorfile>structtAVI__YUV_1_1tYUVQUAD.html</anchorfile>
      <anchor>a316157dd79d57ba2d15b043809e3edb1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tChunck</name>
    <filename>classtChunck.html</filename>
    <base>tChunckList</base>
    <member kind="function">
      <type></type>
      <name>tChunck</name>
      <anchorfile>classtChunck.html</anchorfile>
      <anchor>a9ba4c686574b87c2cd5536919092de21</anchor>
      <arglist>(char const *, int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tChunck</name>
      <anchorfile>classtChunck.html</anchorfile>
      <anchor>aa9476bb65f91711961c248e169c062ef</anchor>
      <arglist>(char const *, int, BYTE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChunckList</name>
      <anchorfile>classtChunck.html</anchorfile>
      <anchor>a8f98adefc2e245b96835fe6ebbade23b</anchor>
      <arglist>(tChunckList *const &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToChunck</name>
      <anchorfile>classtChunck.html</anchorfile>
      <anchor>ac06565e88931a570cb63a877ba56df86</anchor>
      <arglist>(int, BYTE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classtChunck.html</anchorfile>
      <anchor>a60778da1743ca11238d3710b3a6001c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint *</type>
      <name>write</name>
      <anchorfile>classtChunck.html</anchorfile>
      <anchor>a86ebc2df9b779297b8564966c28e0e8a</anchor>
      <arglist>(FILE *, uint *FileOffset)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_Size</name>
      <anchorfile>classtChunck.html</anchorfile>
      <anchor>abc71a8216df50686ac056602d425e0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BYTE *</type>
      <name>m_Data</name>
      <anchorfile>classtChunck.html</anchorfile>
      <anchor>a7ab5c50cb24666a8eb4645cd427186d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tChunckList</name>
    <filename>classtChunckList.html</filename>
    <member kind="function">
      <type></type>
      <name>tChunckList</name>
      <anchorfile>classtChunckList.html</anchorfile>
      <anchor>a13db4ee5e916135d1737d6daf4dda0c1</anchor>
      <arglist>(char const *id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addChunckList</name>
      <anchorfile>classtChunckList.html</anchorfile>
      <anchor>a03d71610de1d3d62368eecf21878fc96</anchor>
      <arglist>(tChunckList *const &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToChunck</name>
      <anchorfile>classtChunckList.html</anchorfile>
      <anchor>a7dd16b96306f532d295a5956b9a7de02</anchor>
      <arglist>(int, BYTE *)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getSize</name>
      <anchorfile>classtChunckList.html</anchorfile>
      <anchor>a57e20404cba3d4afbe8263b45805420f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint *</type>
      <name>write</name>
      <anchorfile>classtChunckList.html</anchorfile>
      <anchor>a3f27582f4738d4f836eb710122b8dfab</anchor>
      <arglist>(FILE *, uint *)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>not_implemented</name>
      <anchorfile>classtChunckList.html</anchorfile>
      <anchor>a5757cf1edd95d9c6993b66772f572b6f</anchor>
      <arglist>(char const *s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>m_Id</name>
      <anchorfile>classtChunckList.html</anchorfile>
      <anchor>aaa4e30087aaa72a2811aaf53ca2792e0</anchor>
      <arglist>[RIFF_IDENTIFIER_LEN]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; tChunckList * &gt;</type>
      <name>m_Elements</name>
      <anchorfile>classtChunckList.html</anchorfile>
      <anchor>a4030337bc98ef28346333d53102f718d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tester2d_t</name>
    <filename>classtester2d__t.html</filename>
    <member kind="function">
      <type>void</type>
      <name>test</name>
      <anchorfile>classtester2d__t.html</anchorfile>
      <anchor>aa70975a4aa63be4c9ea2cdb7ded2b806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test</name>
      <anchorfile>classtester2d__t.html</anchorfile>
      <anchor>aa70975a4aa63be4c9ea2cdb7ded2b806</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tester_t</name>
    <filename>classtester__t.html</filename>
    <member kind="function">
      <type>void</type>
      <name>test</name>
      <anchorfile>classtester__t.html</anchorfile>
      <anchor>acddc0220d769350f2e52f59bbdf4ee06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_dilate</name>
      <anchorfile>classtester__t.html</anchorfile>
      <anchor>a96187041aa1b5d7d774eabac69a7da30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test</name>
      <anchorfile>classtester__t.html</anchorfile>
      <anchor>acddc0220d769350f2e52f59bbdf4ee06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_dilate</name>
      <anchorfile>classtester__t.html</anchorfile>
      <anchor>a96187041aa1b5d7d774eabac69a7da30</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tFrame</name>
    <filename>classtFrame.html</filename>
    <member kind="function">
      <type></type>
      <name>tFrame</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a319d1336c44d847c55ee4c7b3cfbe125</anchor>
      <arglist>(uint width, uint height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a7b06c4e17c2fc4eb6d5a3670e411f792</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Read</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a1eb06d0579ef84c4babc1ffb2a8c83c8</anchor>
      <arglist>(FILE *fd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a91eff8aaed756728dce15497ecc286eb</anchor>
      <arglist>(FILE *fd)</arglist>
    </member>
    <member kind="function">
      <type>uchar</type>
      <name>GetComponent</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a28877ddc0c81189cc767672d7a19fb10</anchor>
      <arglist>(uint x, uint y, uint component)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutComponent</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a689741ebc7a04fd1ee4e0207b4654068</anchor>
      <arglist>(uint x, uint y, uint component, uchar val)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetPixel</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>adc322f2c2fbb7496bb60cb1235af8560</anchor>
      <arglist>(uint x, uint y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutPixel</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a70179b3d2660b55cb76354b96249eb2f</anchor>
      <arglist>(uint x, uint y, uint val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutMonoPixel</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a5db0d48ef5f93966438a84e19f3215ad</anchor>
      <arglist>(uint x, uint y, uchar val)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetWidth</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a2117295dde6cacff015a637adc6e3c55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>GetHeight</name>
      <anchorfile>classtFrame.html</anchorfile>
      <anchor>a4411ada871c665bf1d23838674c47afd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tList</name>
    <filename>classtList.html</filename>
    <base>tChunckList</base>
    <member kind="function">
      <type></type>
      <name>tList</name>
      <anchorfile>classtList.html</anchorfile>
      <anchor>a6d64d6b847fcd1ec22f5df8dd43660dc</anchor>
      <arglist>(char const *id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classtList.html</anchorfile>
      <anchor>aa01903bbf1de1452e29e9ad8f7da2b36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint *</type>
      <name>write</name>
      <anchorfile>classtList.html</anchorfile>
      <anchor>aea35ad7fc91a45aca13239cb1659a6aa</anchor>
      <arglist>(FILE *, uint *FileOffset)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Token</name>
    <filename>structToken.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>z</name>
      <anchorfile>structToken.html</anchorfile>
      <anchor>a57b502141e3018e4a02773424acb4ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>n</name>
      <anchorfile>structToken.html</anchorfile>
      <anchor>ad8442439e00ab9713a9b91a53e44c2aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracer_t</name>
    <filename>classtracer__t.html</filename>
    <member kind="function">
      <type></type>
      <name>tracer_t</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>a4d41ed45edfb938de10d13cc3c31cbf3</anchor>
      <arglist>(int _c, int _min_d, int _max_d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trace</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>ae9cb1468cbf42cb0599df98d5ce7ad25</anchor>
      <arglist>(Mat &amp;input, Mat &amp;output, Mat &amp;outcontour, int trace_interval, bool only_local_maxima, bool show_intermediate, float display_threshold)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>backpropagate</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>a895ef14cc6cf597fd8850a4300df0a6f</anchor>
      <arglist>(int ymax, signal32_t &amp;curcumulated, signal32_t &amp;indelta, contoursignal_t &amp;incontoursy, contoursignal_t &amp;incontoursd, signal32_t &amp;backpropagated, contoursignal_t &amp;outcontoursy, contoursignal_t &amp;outcontoursd, int &amp;maxresponse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_column_display_output</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>a7b8d88e2d050e451d9909b7123150c63</anchor>
      <arglist>(Mat output, Mat outcontour, int outputcol, signal32_t &amp;response, int ymax, int dmax, int threshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tracer_t</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>a4d41ed45edfb938de10d13cc3c31cbf3</anchor>
      <arglist>(int _c, int _min_d, int _max_d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trace</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>ae9cb1468cbf42cb0599df98d5ce7ad25</anchor>
      <arglist>(Mat &amp;input, Mat &amp;output, Mat &amp;outcontour, int trace_interval, bool only_local_maxima, bool show_intermediate, float display_threshold)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>backpropagate</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>a895ef14cc6cf597fd8850a4300df0a6f</anchor>
      <arglist>(int ymax, signal32_t &amp;curcumulated, signal32_t &amp;indelta, contoursignal_t &amp;incontoursy, contoursignal_t &amp;incontoursd, signal32_t &amp;backpropagated, contoursignal_t &amp;outcontoursy, contoursignal_t &amp;outcontoursd, int &amp;maxresponse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_column_display_output</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>a7b8d88e2d050e451d9909b7123150c63</anchor>
      <arglist>(Mat output, Mat outcontour, int outputcol, signal32_t &amp;response, int ymax, int dmax, int threshold)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>sumofdelta</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>aea58fbc0ad4bcba13669647a8b729048</anchor>
      <arglist>(uint64_t x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>testimage</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>aa2de2a76f98541c69d7034bcd62e79aa</anchor>
      <arglist>(Mat &amp;input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>sumofdelta</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>abc9f9372000523c45e16a4a5d3075f11</anchor>
      <arglist>(uint64_t x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>testimage</name>
      <anchorfile>classtracer__t.html</anchorfile>
      <anchor>a4b0414d15e96c3488c91021b802ca747</anchor>
      <arglist>(Mat &amp;input)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TransformCoordinates</name>
    <filename>classTransformCoordinates.html</filename>
  </compound>
  <compound kind="class">
    <name>tRIFF</name>
    <filename>classtRIFF.html</filename>
    <member kind="function">
      <type></type>
      <name>tRIFF</name>
      <anchorfile>classtRIFF.html</anchorfile>
      <anchor>abb27af8c6ec4769fd4b53e28c8c71bfe</anchor>
      <arglist>(char const *type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChunckList</name>
      <anchorfile>classtRIFF.html</anchorfile>
      <anchor>a0f5aa08d1d3c6398529c3f8e7f9bd9ae</anchor>
      <arglist>(tChunckList *const &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write</name>
      <anchorfile>classtRIFF.html</anchorfile>
      <anchor>ab43ac7a35c2865bd34076eb2b3b945cd</anchor>
      <arglist>(FILE *, uint *FileOffset)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>m_Type</name>
      <anchorfile>classtRIFF.html</anchorfile>
      <anchor>ada909d89055ac923aa613df7481513fc</anchor>
      <arglist>[RIFF_IDENTIFIER_LEN]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; tChunckList * &gt;</type>
      <name>m_Elements</name>
      <anchorfile>classtRIFF.html</anchorfile>
      <anchor>a488cc2c4d627b2902a7014f04d57410f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TrigEvent</name>
    <filename>structTrigEvent.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>a</name>
      <anchorfile>structTrigEvent.html</anchorfile>
      <anchor>a19ac5a5e59e08350f72ec49cf8fccbb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IdList *</type>
      <name>b</name>
      <anchorfile>structTrigEvent.html</anchorfile>
      <anchor>a86ef160cde95382e98b7934614e7f79f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Trigger</name>
    <filename>structTrigger.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>zName</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>a9aecea5dadd7ae93b7f585c4b914791c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>table</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>ab9d5500f7fc43382e867733a2968ecae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>op</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>a855d6b6a302d8d80e1d30ddd70fd403e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>tr_tm</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>af0d10da140b068bfd76aaeb6607fa6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pWhen</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>a1b6cdd46e8b98562920d1acee86281ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IdList *</type>
      <name>pColumns</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>a8505fbdf63ca9eadf4b2585e99faa4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Schema *</type>
      <name>pSchema</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>a83edbfa91ce6520a6ebc1a21acc2cd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Schema *</type>
      <name>pTabSchema</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>a8e4a9b3f4bcc5c645e1777b3bb94a6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TriggerStep *</type>
      <name>step_list</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>a4206faaae6cdf1a2b22a2c9f15c88642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Trigger *</type>
      <name>pNext</name>
      <anchorfile>structTrigger.html</anchorfile>
      <anchor>ac28107e1c45789e0146fe45867b8dfdb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TriggerPrg</name>
    <filename>structTriggerPrg.html</filename>
    <member kind="variable">
      <type>Trigger *</type>
      <name>pTrigger</name>
      <anchorfile>structTriggerPrg.html</anchorfile>
      <anchor>af70e5a74c954bc7a1eb8ee1162c40368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>orconf</name>
      <anchorfile>structTriggerPrg.html</anchorfile>
      <anchor>aa475acda58c472b3491f6aa17020bf68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SubProgram *</type>
      <name>pProgram</name>
      <anchorfile>structTriggerPrg.html</anchorfile>
      <anchor>aa770aee270c7c5df85578dc4a6686134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>aColmask</name>
      <anchorfile>structTriggerPrg.html</anchorfile>
      <anchor>aeac0a4cd1f1d287981ae33c4d171b614</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>TriggerPrg *</type>
      <name>pNext</name>
      <anchorfile>structTriggerPrg.html</anchorfile>
      <anchor>a551b8a29a8c4ff785afab1596e5d8710</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TriggerStep</name>
    <filename>structTriggerStep.html</filename>
    <member kind="variable">
      <type>u8</type>
      <name>op</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a20269855c80d869d498fcb93401832fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>orconf</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a4ed8b2571fde96e84f637184453e73e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Trigger *</type>
      <name>pTrig</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a70671e85796776db06c732ab6ae4ae0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Select *</type>
      <name>pSelect</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a90bf3353653cedf364a7fb2eb89a19c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Token</type>
      <name>target</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a8b860bb5f466b1522125d446b58d860a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>pWhere</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>ad4c293b04dfda535f3aad5b9e02726c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExprList *</type>
      <name>pExprList</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a607602af65ecf6c7e6cac4ea8532ac1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IdList *</type>
      <name>pIdList</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a6b91bf578544104f8bd4bd5b958ddd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TriggerStep *</type>
      <name>pNext</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a0757a0d22dbe2f7f57706014dd35759b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TriggerStep *</type>
      <name>pLast</name>
      <anchorfile>structTriggerStep.html</anchorfile>
      <anchor>a0aae9ea7f436881c0e9e614476a69584</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>unixFile</name>
    <filename>structunixFile.html</filename>
    <member kind="variable">
      <type>sqlite3_io_methods const *</type>
      <name>pMethod</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>a2a2b40e965f91aa9ee21135bfb0c17ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unixInodeInfo *</type>
      <name>pInode</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>ac17292fe29bb6cc9eceed9db6d1209e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>h</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>a1c58798d4ff3ac6232765c8b76bb7450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dirfd</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>aa4d81dba57e69451d4bc2c4593faaef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>eFileLock</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>a001e59bdb9d3f396952c2c8e3229f7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastErrno</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>afde57c2e118fac8041918dac2ee6f7d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>lockingContext</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>afaeb4425a6de3e913db4b03e8a0d098a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnixUnusedFd *</type>
      <name>pUnused</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>a3820ccead5805d2ea61ca1c752646852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fileFlags</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>a43e6df5096c2a58cb009b7c407f7cfeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zPath</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>afc5eff0948d553308cf90a79d4a06f17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unixShm *</type>
      <name>pShm</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>a53c653bd73cdc6f518ecffe95062e91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>szChunk</name>
      <anchorfile>structunixFile.html</anchorfile>
      <anchor>a5f6307d3446ce1b149df756c00c3bd2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>unixFileId</name>
    <filename>structunixFileId.html</filename>
    <member kind="variable">
      <type>dev_t</type>
      <name>dev</name>
      <anchorfile>structunixFileId.html</anchorfile>
      <anchor>acf703d95b9a1ae2f34affb7e9ae45e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ino_t</type>
      <name>ino</name>
      <anchorfile>structunixFileId.html</anchorfile>
      <anchor>a2cc2d43e9d3f0a60810daa8fc353e692</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>unixInodeInfo</name>
    <filename>structunixInodeInfo.html</filename>
    <member kind="variable">
      <type>struct unixFileId</type>
      <name>fileId</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>ae692731d449f4462a921dda9a061faa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nShared</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>a0d7f8dd92964f53e59c8d741dbe00a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>eFileLock</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>a615196e91c97d2ebb0e41b54aeb7e59e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>a65cbd1fd05ed00f03a252266b04a8221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unixShmNode *</type>
      <name>pShmNode</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>a302a8b82e27d5b3624ec122bc9c2ed61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nLock</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>a477f3357a32adbc1a9b05017e535444d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnixUnusedFd *</type>
      <name>pUnused</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>a0dda9ad35734fa161d1f0b13b671c1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unixInodeInfo *</type>
      <name>pNext</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>a80181ba4ef71dd0d8e55e97baedc761e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unixInodeInfo *</type>
      <name>pPrev</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>a6575edce9898b48870c6f48047c01d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long long</type>
      <name>sharedByte</name>
      <anchorfile>structunixInodeInfo.html</anchorfile>
      <anchor>ab71436b34e8e12e6d192f611a6786270</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>unixShm</name>
    <filename>structunixShm.html</filename>
    <member kind="variable">
      <type>unixShmNode *</type>
      <name>pShmNode</name>
      <anchorfile>structunixShm.html</anchorfile>
      <anchor>a8ab421232d29e3237262ef46775199ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unixShm *</type>
      <name>pNext</name>
      <anchorfile>structunixShm.html</anchorfile>
      <anchor>a0d5229cf734581f51cdf16dd7d5ce93a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>hasMutex</name>
      <anchorfile>structunixShm.html</anchorfile>
      <anchor>a43903be262472299c5eee917ba7c523c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>sharedMask</name>
      <anchorfile>structunixShm.html</anchorfile>
      <anchor>a768aa62a6ea2bd91ab60a34d7654811b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>exclMask</name>
      <anchorfile>structunixShm.html</anchorfile>
      <anchor>ac6f786d95952e51cab941cbfb9243c8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>unixShmNode</name>
    <filename>structunixShmNode.html</filename>
    <member kind="variable">
      <type>unixInodeInfo *</type>
      <name>pInode</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>ab6bc1cf84d65887a3395da6406843817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_mutex *</type>
      <name>mutex</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>aa90850530f48fec6f2a872874f8ddf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zFilename</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>a188c3bc5fcb4666ad0817ac093e7505d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>h</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>a9cd93c8052eb47f257e2d752e8f1fdba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>szRegion</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>ae8126f9db70a758c2f340ec06869e02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRegion</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>a7cb3ca3dd29e6f845304000b83dff03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>apRegion</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>a8eff550f9b10a2de463e9874f84efc5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>a6d9f0c9dec3f6710cb09c90723a8284b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unixShm *</type>
      <name>pFirst</name>
      <anchorfile>structunixShmNode.html</anchorfile>
      <anchor>a0ddd6c4625acf5994a60b0c368bc665e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UnixUnusedFd</name>
    <filename>structUnixUnusedFd.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>fd</name>
      <anchorfile>structUnixUnusedFd.html</anchorfile>
      <anchor>a3f1a6127218af971aeb7b131c9c1600d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flags</name>
      <anchorfile>structUnixUnusedFd.html</anchorfile>
      <anchor>a744cd118bd91ec2019108e8205708684</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UnixUnusedFd *</type>
      <name>pNext</name>
      <anchorfile>structUnixUnusedFd.html</anchorfile>
      <anchor>a6bbcba75beeabdd2df126638bc1d8bc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UnpackedRecord</name>
    <filename>structUnpackedRecord.html</filename>
    <member kind="variable">
      <type>KeyInfo *</type>
      <name>pKeyInfo</name>
      <anchorfile>structUnpackedRecord.html</anchorfile>
      <anchor>aeb43e7a1e300857cab2cbe98eacd575b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nField</name>
      <anchorfile>structUnpackedRecord.html</anchorfile>
      <anchor>a2c5062735cdbc5039679d255cc900668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>flags</name>
      <anchorfile>structUnpackedRecord.html</anchorfile>
      <anchor>a133514faed51f2eda9a26b838fe2c21d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>rowid</name>
      <anchorfile>structUnpackedRecord.html</anchorfile>
      <anchor>a5ec2064b28fcf43b46bf92a515e9203e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem *</type>
      <name>aMem</name>
      <anchorfile>structUnpackedRecord.html</anchorfile>
      <anchor>a3299c322ceb8b758dacc59701021ae9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Vdbe</name>
    <filename>structVdbe.html</filename>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a495366101a593999f4d2ed905e839029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vdbe *</type>
      <name>pPrev</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a2afc3b6cd2f5b38d991148b809b3c53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vdbe *</type>
      <name>pNext</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a9d52c1a2d64f132c6994eeac00063df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nOp</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a81e72e6812c71e13651f81cc3a6ca1d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nOpAlloc</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>aa52020050ea42e10ad8be8ebdf470850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Op *</type>
      <name>aOp</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a1ba82f08947b275dd72a3e3095ad02d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nLabel</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ae74cf1db577889e4f7ee669d613939a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nLabelAlloc</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a9368c53f69ebfdcb9d06f787597b4236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>aLabel</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a8d9c9a70f5a5ffd037cc29cd3d3815b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem **</type>
      <name>apArg</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a74fd4612c55ac2fde475096a4d2605b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem *</type>
      <name>aColName</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a900f557143e7d2ab8c560f7ada66d0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem *</type>
      <name>pResultSet</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a0dec47b8d8c481df2b73d5bbf9cdde11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nResColumn</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a525830c709542b280d11c764e9a9994a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nCursor</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>adf7c35ba970bfc5f6e06a9f8248d5a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VdbeCursor **</type>
      <name>apCsr</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a8bd1b6ecdc16918e10ee1ae90b4e19ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>errorAction</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ab2fde65c1d4728e92d100ce21313dcd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>okVar</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a75398951926ae2c77224c69148443a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ynVar</type>
      <name>nVar</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a2acd8f1fa65e19eb48fc62ddb6cb7569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem *</type>
      <name>aVar</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a8877b72591926e3597fa93e22f84b99c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>azVar</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>af3c62ca5eee6b2549c97a6bb87fb2f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>magic</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a01c61f8cafa6ad3eaafcc85c6f53f8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nMem</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a10a19309607617a75d3722219d3c7615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem *</type>
      <name>aMem</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ac36776c53b6ec9054a2826ec83f29953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cacheCtr</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ace5722464070f2055f536b737955b9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pc</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ae25264a36877487fb58814608a46689c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rc</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>af82fb0227a5b8db9d3b9bdb03964a4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zErrMsg</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>add7679059dd1e3cd483ddcb9153ca844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>explain</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>aa1bbd3dcd803eb59dc73e681b6a585ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>changeCntOn</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a448850e8bd320c590ca2d75588fe3a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>expired</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ab281d7519a1e6f60163eab9b15048eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>runOnlyOnce</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a96a96a973a8df70821723ccd4b94a2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>minWriteFileFormat</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a679ac87f7b835982cd7c1990fbc3605b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>inVtabMethod</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a3b715d5a30b4d2751e638cfd2cefab62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>usesStmtJournal</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>aaac5176003bc8760200364c7752786a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>readOnly</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a723ca4a68712aed8d37b3d682c336e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isPrepareV2</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>affdb27e044f23b560fb9fa9314d60278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nChange</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a59d1ece56f21e260cdd0fef936242b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>btreeMask</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a30b4e20cc4e4dc9f6652f37d86759fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>startTime</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a1de76a5c58ed36608a163bfdc2e9e8b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BtreeMutexArray</type>
      <name>aMutex</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>aeeff59f076cad0b73997113e4e29bd76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>aCounter</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a9838a4909a9a19ead07ca7482a472665</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zSql</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a5a61fd8f84ae0399ef73327e48048ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pFree</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a68dcaae5d4f061da3d7bb96c120fe9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>nFkConstraint</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a7f46ff5e6b3dbf3632e941e27c82a485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>nStmtDefCons</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ab6a710cd4796c6adc8967e7b5bf35757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iStatement</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ae2b5893f3d37e004acac58bffee1a229</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VdbeFrame *</type>
      <name>pFrame</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>afd754aaedd6cd5b229fbeff33177fe04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VdbeFrame *</type>
      <name>pDelFrame</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>ab8f22136c8bdb4c02962a1ae081e9116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nFrame</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a27fbd083a0335ac2b332d37ea2b90bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>expmask</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a5e22eedb6ee963a0bcf27fc9fd8b8e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SubProgram *</type>
      <name>pProgram</name>
      <anchorfile>structVdbe.html</anchorfile>
      <anchor>a9239ea72573142101328be15c90de62b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VdbeCursor</name>
    <filename>structVdbeCursor.html</filename>
    <member kind="variable">
      <type>BtCursor *</type>
      <name>pCursor</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a9ecb4ab9f7374f92da69f03fc336c293</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iDb</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a1215b7b0d1bbd882d6bfb8b118712d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>lastRowid</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>af2ff971acc308c012c60b1e949c64411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>zeroed</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>abcc5ef422583a743105243e2a0c7859e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>rowidIsValid</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a2dabf623f6e3c31aa8310c72ec1843bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>atFirst</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a00d121ca0f21e7381aacb89adf40e8b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>useRandomRowid</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a067fff911d6d37190785a0cf5ba4fc8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>nullRow</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>af7c01a62f0445440e4200f7601ab0a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>deferredMoveto</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>ad2da7e0fd569b01c89c18e4dff1b335d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>isTable</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a2c9ae9907e6649324d65d8cbd889806e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>isIndex</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a60a947acdb24b640fe0ff6112d0ae104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bool</type>
      <name>isOrdered</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a8d9e802372b801c4eb5aef6340cfa21a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>movetoTarget</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>af3c157d480c0597ba50aca227eb8e3b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Btree *</type>
      <name>pBt</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a287db3fe6d84102fad3d69494b565e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pseudoTableReg</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a8618d7c5669c83856e95b8ef72ef67b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyInfo *</type>
      <name>pKeyInfo</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a72a6c26ab2ab2ad699dfb45703ea4765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nField</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>aa115a60e335e738945127141303eaedb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>seqCount</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a4f11f0befb0dcf16273cc832ca6d92a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_vtab_cursor *</type>
      <name>pVtabCursor</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a2f58fca4f47a313a461f40a0ac553bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const sqlite3_module *</type>
      <name>pModule</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>ab385a7fa060ff00bbe9e6861bb599505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>seekResult</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a5eff86e2a9c87dc15956ad362aa03f05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cacheStatus</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>acf243b5a94a6e5a11341d6fece473c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>payloadSize</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a5c1fa124d7f27a30e14ef0f455955cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32 *</type>
      <name>aType</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a6992d2bf9eb8480985aec47dae58f1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32 *</type>
      <name>aOffset</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a17431e67b341282aeb6c026cd01ec1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8 *</type>
      <name>aRow</name>
      <anchorfile>structVdbeCursor.html</anchorfile>
      <anchor>a6bd10979ffb5d4828967eea1d6e0d2c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VdbeFrame</name>
    <filename>structVdbeFrame.html</filename>
    <member kind="variable">
      <type>Vdbe *</type>
      <name>v</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>a2f6258356959c94398d1d006a740c4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pc</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>aed0e6d8cb1908580a3c2aca04516b46c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Op *</type>
      <name>aOp</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>a0e5670c52e8eeb7e66bf1e3bff8ce2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nOp</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>acffd5d53fbb5cb55e257c34a547c1762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem *</type>
      <name>aMem</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>a98b9eabf633e77d4ae2dfe9d13a43fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nMem</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>ab340f2b5f6d6e09a872f5f8a64fec245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VdbeCursor **</type>
      <name>apCsr</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>a5d373b3a195dbd1a31f5aa0dbe1822ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>nCursor</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>af6d743df3f86ff683959562c1b615655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>token</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>a11de10011ea2164995c6b616bba8a576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nChildMem</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>a833bdf519676567bc3a700cdedc6562d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nChildCsr</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>a2d2900348092258d12eb71057812429a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64</type>
      <name>lastRowid</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>af655193217fb53c7acab9d24c94344aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nChange</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>a77aacb67d627f4446dd50a795b5a2f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VdbeFrame *</type>
      <name>pParent</name>
      <anchorfile>structVdbeFrame.html</anchorfile>
      <anchor>afb11d8aa920f34720333f52737375d59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VdbeFunc</name>
    <filename>structVdbeFunc.html</filename>
    <class kind="struct">VdbeFunc::AuxData</class>
    <member kind="variable">
      <type>FuncDef *</type>
      <name>pFunc</name>
      <anchorfile>structVdbeFunc.html</anchorfile>
      <anchor>a73cbc96029bec2f37c7e2a79052a2f65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nAux</name>
      <anchorfile>structVdbeFunc.html</anchorfile>
      <anchor>ad78feda4c310ea0bc17b7bba53bccd3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct VdbeFunc::AuxData</type>
      <name>apAux</name>
      <anchorfile>structVdbeFunc.html</anchorfile>
      <anchor>abb466d61a0d36b913418460e5922166a</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VdbeFunc::AuxData</name>
    <filename>structVdbeFunc_1_1AuxData.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>pAux</name>
      <anchorfile>structVdbeFunc_1_1AuxData.html</anchorfile>
      <anchor>ad2ceeac1dec76bbb661f6418ec582539</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>xDelete</name>
      <anchorfile>structVdbeFunc_1_1AuxData.html</anchorfile>
      <anchor>a6742f89d0634b5fc6684f245bac76fd5</anchor>
      <arglist>)(void *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VdbeOp</name>
    <filename>structVdbeOp.html</filename>
    <member kind="variable">
      <type>u8</type>
      <name>opcode</name>
      <anchorfile>structVdbeOp.html</anchorfile>
      <anchor>ae12a8e7a8f5f7ba39fa379c9ad287837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signed char</type>
      <name>p4type</name>
      <anchorfile>structVdbeOp.html</anchorfile>
      <anchor>a124dee58d3e0d73c7dfaf811a3311023</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>opflags</name>
      <anchorfile>structVdbeOp.html</anchorfile>
      <anchor>a169a7bbe99a90c26ee01833723750b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>p5</name>
      <anchorfile>structVdbeOp.html</anchorfile>
      <anchor>a5e807981f52d29c06a5b6d4a8f2f4595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p1</name>
      <anchorfile>structVdbeOp.html</anchorfile>
      <anchor>a17c8326a1e3ac5612d4aaaa88f383b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p2</name>
      <anchorfile>structVdbeOp.html</anchorfile>
      <anchor>aba021fa9d30343c16794d9b76d8bffcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p3</name>
      <anchorfile>structVdbeOp.html</anchorfile>
      <anchor>ad7ef3319da20d5423b8cc5da6995d193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union VdbeOp::@5</type>
      <name>p4</name>
      <anchorfile>structVdbeOp.html</anchorfile>
      <anchor>a37b2b077c4e1b3cac5b44517b4a5251e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>ac27f37b7efda334f490db51c6664f4c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>p</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a2c7ba9a5d7237183564a15088fd3224c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>z</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a8a1146d54bc870642d18efd794ec3c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i64 *</type>
      <name>pI64</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a1b09c68f28b3183336d0904cdee6580f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>pReal</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a883b3405b547e2b899d3f82df3d9e7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FuncDef *</type>
      <name>pFunc</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a1bc4046184b38fdc0f050a8645c1bed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VdbeFunc *</type>
      <name>pVdbeFunc</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a23cb2f092d328f69895f82d8dbb35f6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CollSeq *</type>
      <name>pColl</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a27bc8498f760cec9df3ef28900a7625e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mem *</type>
      <name>pMem</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a89462dd607924ab10165cb54f3caae8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VTable *</type>
      <name>pVtab</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a35e70c6e522bcd2feb2eb84e64fb0045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyInfo *</type>
      <name>pKeyInfo</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a76909ad17686d7798cededdfadceea81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>ai</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a61c3df862266c74af0a50e4755ada364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SubProgram *</type>
      <name>pProgram</name>
      <anchorfile>unionVdbeOp_1_1@5.html</anchorfile>
      <anchor>a44428766484cd8d113a54504c9c87819</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VdbeOpList</name>
    <filename>structVdbeOpList.html</filename>
    <member kind="variable">
      <type>u8</type>
      <name>opcode</name>
      <anchorfile>structVdbeOpList.html</anchorfile>
      <anchor>a9c839a619aed99f91cb5e226487be7be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signed char</type>
      <name>p1</name>
      <anchorfile>structVdbeOpList.html</anchorfile>
      <anchor>a68641ef4313dfdfafe45b75203c49d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signed char</type>
      <name>p2</name>
      <anchorfile>structVdbeOpList.html</anchorfile>
      <anchor>a8493431402f7f91cea81c00e311dc4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signed char</type>
      <name>p3</name>
      <anchorfile>structVdbeOpList.html</anchorfile>
      <anchor>a584cdaa02042fd5d1bc8cffbdfd9441d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Vect</name>
    <filename>structVect.html</filename>
    <templarg></templarg>
    <templarg>LEN</templarg>
    <base>TCLAP::StringLikeTrait</base>
    <base>TCLAP::StringLikeTrait</base>
    <member kind="typedef">
      <type>TCLAP::StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a0ae65cc90cffab4939e220242321e5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a0ae65cc90cffab4939e220242321e5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vect &amp;</type>
      <name>operator=</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a56ff558ecbc3d9cbbe7d3048a49f1337</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a73f7809e4f6eb8a64731d2bfbe43cff9</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Vect &amp;</type>
      <name>operator=</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a56ff558ecbc3d9cbbe7d3048a49f1337</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a73f7809e4f6eb8a64731d2bfbe43cff9</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Vect &amp;</type>
      <name>operator=</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a56ff558ecbc3d9cbbe7d3048a49f1337</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a73f7809e4f6eb8a64731d2bfbe43cff9</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Vect &amp;</type>
      <name>operator=</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a56ff558ecbc3d9cbbe7d3048a49f1337</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a73f7809e4f6eb8a64731d2bfbe43cff9</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>v</name>
      <anchorfile>structVect.html</anchorfile>
      <anchor>a1814fdfcc671049bfe9096de1b633fc5</anchor>
      <arglist>[LEN]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Vect3D</name>
    <filename>structVect3D.html</filename>
    <member kind="function">
      <type>Vect3D &amp;</type>
      <name>operator=</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a51ae0e1b1f1b1637b9c93412a5d44e19</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a311443eb26d3034e8109523651cebd9c</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Vect3D &amp;</type>
      <name>operator=</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a51ae0e1b1f1b1637b9c93412a5d44e19</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a311443eb26d3034e8109523651cebd9c</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Vect3D &amp;</type>
      <name>operator=</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a51ae0e1b1f1b1637b9c93412a5d44e19</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a311443eb26d3034e8109523651cebd9c</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Vect3D &amp;</type>
      <name>operator=</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a51ae0e1b1f1b1637b9c93412a5d44e19</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a311443eb26d3034e8109523651cebd9c</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>v</name>
      <anchorfile>structVect3D.html</anchorfile>
      <anchor>a7c7e1f798b5774769984d4815458aeb9</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VoronoiDiagramGenerator</name>
    <filename>classVoronoiDiagramGenerator.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>generateVoronoi</name>
      <anchorfile>classVoronoiDiagramGenerator.html</anchorfile>
      <anchor>a01d949ad362c09368759fd0e4cde08a7</anchor>
      <arglist>(float *xValues, float *yValues, int numPoints, float minX, float maxX, float minY, float maxY, float minDist=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetIterator</name>
      <anchorfile>classVoronoiDiagramGenerator.html</anchorfile>
      <anchor>a4e5c5a28942781ed7c6985c9d1d87784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNext</name>
      <anchorfile>classVoronoiDiagramGenerator.html</anchorfile>
      <anchor>a6ee33d3a7c10006a9ed0a0269bb8e197</anchor>
      <arglist>(float &amp;x1, float &amp;y1, float &amp;x2, float &amp;y2)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VTable</name>
    <filename>structVTable.html</filename>
    <member kind="variable">
      <type>sqlite3 *</type>
      <name>db</name>
      <anchorfile>structVTable.html</anchorfile>
      <anchor>a855b43c118d693910e9060cc9d9ac91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Module *</type>
      <name>pMod</name>
      <anchorfile>structVTable.html</anchorfile>
      <anchor>ae444452a7168e2f4224a75768abe8312</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_vtab *</type>
      <name>pVtab</name>
      <anchorfile>structVTable.html</anchorfile>
      <anchor>ae15b9cb002c013019dcbac919bda9ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structVTable.html</anchorfile>
      <anchor>a12ffe156e5e8e7d19ed029ccfe4ab5dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VTable *</type>
      <name>pNext</name>
      <anchorfile>structVTable.html</anchorfile>
      <anchor>af3cac5e5a38508d0111acb9aa6c5f435</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vxworksFileId</name>
    <filename>structvxworksFileId.html</filename>
    <member kind="variable">
      <type>struct vxworksFileId *</type>
      <name>pNext</name>
      <anchorfile>structvxworksFileId.html</anchorfile>
      <anchor>a1941104384e7aa1ad9d8574d091abe3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nRef</name>
      <anchorfile>structvxworksFileId.html</anchorfile>
      <anchor>a59dde49ee027786a06de8ad59b1d7883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nName</name>
      <anchorfile>structvxworksFileId.html</anchorfile>
      <anchor>af7ed9a749d73b74b534bc06baf1abf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>zCanonicalName</name>
      <anchorfile>structvxworksFileId.html</anchorfile>
      <anchor>a032c9aaaa13ff100d9f3cd53926587fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wal</name>
    <filename>structWal.html</filename>
    <member kind="variable">
      <type>sqlite3_vfs *</type>
      <name>pVfs</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>a5431b060acbc998a7e3710587abaa11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_file *</type>
      <name>pDbFd</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>a3a4d051c55228e554b36691c5095ed14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_file *</type>
      <name>pWalFd</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>aea2a72ead42cfe57e3a6809e80884397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iCallback</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>aae230a2317817739a5f08ebb28b644b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nWiData</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>ae3e69420adab92acd90dd7c03d37815f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32 **</type>
      <name>apWiData</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>a2b0078e3adfd1fb21794561bb12bbfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>szPage</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>a771c3a8c81326babc7d623255a6034c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>i16</type>
      <name>readLock</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>a260550c859ac7224fbdad0586dca664a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>exclusiveMode</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>ada255c96ca65d9d8955bbf139af4e6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>writeLock</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>ad7f4ba84f07115b7ce3a6133479c9d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>ckptLock</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>a29153bfb37a9a32f1171e5c1d10994d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>readOnly</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>a38f0810e34bdc89acdf27574473c0495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WalIndexHdr</type>
      <name>hdr</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>adbeef9e632541fbf07c926652b165906</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>zWalName</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>ac54961758701702d67eaf3ce15c69ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nCkpt</name>
      <anchorfile>structWal.html</anchorfile>
      <anchor>a8fbe9b014342db76d8167b518b70acad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WalCkptInfo</name>
    <filename>structWalCkptInfo.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>nBackfill</name>
      <anchorfile>structWalCkptInfo.html</anchorfile>
      <anchor>a5185e508f7da44c391b692e957a84ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>aReadMark</name>
      <anchorfile>structWalCkptInfo.html</anchorfile>
      <anchor>a3bc01a8244045941d5f59f01123a7735</anchor>
      <arglist>[WAL_NREADER]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WalIndexHdr</name>
    <filename>structWalIndexHdr.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>iVersion</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>a49295f5eb9d6f37a1498cf1a66410b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>unused</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>aa00596b4ad38dce7f97261a49ce64d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iChange</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>a9fafc4d4af9ab741b3b8733380a7927f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>isInit</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>a1cc0dc2be6cd108a7bcca260be3e4cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>bigEndCksum</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>aa6be53a6a60ea0b2a97a245b5ca68d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>szPage</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>a74e9182803402942cf6e45d8e23589c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>mxFrame</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>aa697dbe8134daf3d02dce07feb897f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nPage</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>ae4ca33947cd629feb9dce2b1f976c364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>aFrameCksum</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>a425dff294e0f0b30b6819c273404c721</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>aSalt</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>af99b92f673fd7ba1e4e4f9feb955453f</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>aCksum</name>
      <anchorfile>structWalIndexHdr.html</anchorfile>
      <anchor>aa202339b02766d088717bfce9e3a9c0e</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WalIterator</name>
    <filename>structWalIterator.html</filename>
    <class kind="struct">WalIterator::WalSegment</class>
    <member kind="variable">
      <type>int</type>
      <name>iPrior</name>
      <anchorfile>structWalIterator.html</anchorfile>
      <anchor>a2f906125490dd3e967fc53768b03abbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nSegment</name>
      <anchorfile>structWalIterator.html</anchorfile>
      <anchor>ad81bc9447d6043212289d127dc9fdafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct WalIterator::WalSegment</type>
      <name>aSegment</name>
      <anchorfile>structWalIterator.html</anchorfile>
      <anchor>a6d3fcaaeeca5a0eee46f9fa7c3cb669b</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WalIterator::WalSegment</name>
    <filename>structWalIterator_1_1WalSegment.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>iNext</name>
      <anchorfile>structWalIterator_1_1WalSegment.html</anchorfile>
      <anchor>a329c939b196f907fe98cf762bb07d291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ht_slot *</type>
      <name>aIndex</name>
      <anchorfile>structWalIterator_1_1WalSegment.html</anchorfile>
      <anchor>adec397836a127acafcc551cb1fdcd851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32 *</type>
      <name>aPgno</name>
      <anchorfile>structWalIterator_1_1WalSegment.html</anchorfile>
      <anchor>a5e43273a11dc5856934834c0cdf7f198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nEntry</name>
      <anchorfile>structWalIterator_1_1WalSegment.html</anchorfile>
      <anchor>ad80cf479aa670eda7aa1adee607af7d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iZero</name>
      <anchorfile>structWalIterator_1_1WalSegment.html</anchorfile>
      <anchor>a3eedec5e8e8dd94be670d50ac144a959</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Walker</name>
    <filename>structWalker.html</filename>
    <member kind="variable">
      <type>int(*</type>
      <name>xExprCallback</name>
      <anchorfile>structWalker.html</anchorfile>
      <anchor>a6f4d546e4aea8e6ff1f9512e9190d411</anchor>
      <arglist>)(Walker *, Expr *)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>xSelectCallback</name>
      <anchorfile>structWalker.html</anchorfile>
      <anchor>a2850c95c634f9439bb403f0bb211c636</anchor>
      <arglist>)(Walker *, Select *)</arglist>
    </member>
    <member kind="variable">
      <type>Parse *</type>
      <name>pParse</name>
      <anchorfile>structWalker.html</anchorfile>
      <anchor>ac6e8e756b5da8f187b9cf6b94560f352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Walker::@13</type>
      <name>u</name>
      <anchorfile>structWalker.html</anchorfile>
      <anchor>a0488cefdf58e6e776a03ae3fc82ad9bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NameContext *</type>
      <name>pNC</name>
      <anchorfile>unionWalker_1_1@13.html</anchorfile>
      <anchor>af08a456f24c6e3027636ca2647f7de8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionWalker_1_1@13.html</anchorfile>
      <anchor>ad7c28ab749c729a162055c3403276b5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WhereAndInfo</name>
    <filename>structWhereAndInfo.html</filename>
    <member kind="variable">
      <type>WhereClause</type>
      <name>wc</name>
      <anchorfile>structWhereAndInfo.html</anchorfile>
      <anchor>a01cea99f069b1e598004a1cd0d0c3a80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WhereClause</name>
    <filename>structWhereClause.html</filename>
    <member kind="variable">
      <type>Parse *</type>
      <name>pParse</name>
      <anchorfile>structWhereClause.html</anchorfile>
      <anchor>a3ff6dfc93e7b9b97a9bf9a0618a1d542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WhereMaskSet *</type>
      <name>pMaskSet</name>
      <anchorfile>structWhereClause.html</anchorfile>
      <anchor>ae308a1600721b7dfa0855136926a5554</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitmask</type>
      <name>vmask</name>
      <anchorfile>structWhereClause.html</anchorfile>
      <anchor>aaef3dd42bb6c23890d8ad8824e2a00ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>op</name>
      <anchorfile>structWhereClause.html</anchorfile>
      <anchor>a7a56a5fe1ab6603e930f3b5372ff2f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nTerm</name>
      <anchorfile>structWhereClause.html</anchorfile>
      <anchor>ab84924c3c78af1ab387ab3919c5031c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nSlot</name>
      <anchorfile>structWhereClause.html</anchorfile>
      <anchor>ac92b93d65d4c3d9216707a049a4edb1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WhereTerm *</type>
      <name>a</name>
      <anchorfile>structWhereClause.html</anchorfile>
      <anchor>a140d726a3e20ac7b6853d539c59add72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WhereTerm</type>
      <name>aStatic</name>
      <anchorfile>structWhereClause.html</anchorfile>
      <anchor>a4acb8640bc9f42752900de5735bcd8e0</anchor>
      <arglist>[8]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WhereCost</name>
    <filename>structWhereCost.html</filename>
    <member kind="variable">
      <type>WherePlan</type>
      <name>plan</name>
      <anchorfile>structWhereCost.html</anchorfile>
      <anchor>ace6ca770eb1f123bcbf2ce6433e69822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rCost</name>
      <anchorfile>structWhereCost.html</anchorfile>
      <anchor>a4dba436b417d0d562e0a32519befa824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitmask</type>
      <name>used</name>
      <anchorfile>structWhereCost.html</anchorfile>
      <anchor>ab041bae4d0f6cc76f427c82d3840bfae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WhereInfo</name>
    <filename>structWhereInfo.html</filename>
    <member kind="variable">
      <type>Parse *</type>
      <name>pParse</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a26745055cd13360536fb4b074db358f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>wctrlFlags</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a85ac59be7be01c6b08f8b225585d27e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>okOnePass</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a851aa1747f940f6ab58505f9326fe9c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>untestedTerms</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a4f925cad7a0a9ff977eef944969673d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SrcList *</type>
      <name>pTabList</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a0f43432aeca75640c96a69f6a82aa138</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iTop</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a4edc0a92a162cbe63ac8f52e923fb038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iContinue</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a5b8eb73a6a5bba7ef126b9de13ee8537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iBreak</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a338ac73b84c81db455ad7db56b5e4a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nLevel</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>ab04fa676e481a8df69107201a362c686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct WhereClause *</type>
      <name>pWC</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>aad633b9e8b7ff4046fcfe798729c591a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>savedNQueryLoop</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a42261b8c4fbc968e0096fa13ea4c00a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nRowOut</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>aca7831db346643eddd5520c3bce4b7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WhereLevel</type>
      <name>a</name>
      <anchorfile>structWhereInfo.html</anchorfile>
      <anchor>a427337160cbeaf64b23a8241fb10dbf9</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WhereLevel</name>
    <filename>structWhereLevel.html</filename>
    <member kind="variable">
      <type>WherePlan</type>
      <name>plan</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a4567b2ab4792fea7a1bc4e9baa494394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iLeftJoin</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a600072864f71c568cabcbb6140f6955a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iTabCur</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>aa31c27c3304de936a6ce974450c55592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iIdxCur</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a0733f34c7987c721351ab0001d4b1dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>addrBrk</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a06f788bd4109f394d162250af9582e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>addrNxt</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>ab4b748f1fa2ec727f00ca42d9df60144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>addrCont</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a493d44d8f3b53d4d47191d751f8a9a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>addrFirst</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a2d87c8fb787ca4111d7ab38a838325a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>iFrom</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a4d8e905640b12a5075ff5e2f395876dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>op</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a0253c213b81cd17481601e495d421706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>p5</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a568ee11c7ecabb4259836ccc11025ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p1</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>ad544492b3388cb82a4b3674e6c1fdb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p2</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a9c60432a75f2252764e78128e4dad19b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union WhereLevel::@11</type>
      <name>u</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a8ce21bf241c4bd3ce15d7c6b098b5e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct WhereLevel::@11::@12</type>
      <name>in</name>
      <anchorfile>unionWhereLevel_1_1@11.html</anchorfile>
      <anchor>ae80fdc4fcd7802f4c2675ade5639aac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nIn</name>
      <anchorfile>structWhereLevel_1_1@11_1_1@12.html</anchorfile>
      <anchor>a88ff4f7a80ff5bab2a7f6083cdd4f8ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct WhereLevel::@11::@12::InLoop *</type>
      <name>aInLoop</name>
      <anchorfile>structWhereLevel_1_1@11_1_1@12.html</anchorfile>
      <anchor>a5372cefea7e9d061789d341a842e4eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iCur</name>
      <anchorfile>structWhereLevel_1_1@11_1_1@12_1_1InLoop.html</anchorfile>
      <anchor>a95fa3fe7efe2698c9967e616a5a1e1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>addrInTop</name>
      <anchorfile>structWhereLevel_1_1@11_1_1@12_1_1InLoop.html</anchorfile>
      <anchor>ae7e46673c90819cf8ef61a6cbd235475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_index_info *</type>
      <name>pIdxInfo</name>
      <anchorfile>structWhereLevel.html</anchorfile>
      <anchor>a9d8132e8f26189b92e90899094858345</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WhereMaskSet</name>
    <filename>structWhereMaskSet.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>structWhereMaskSet.html</anchorfile>
      <anchor>a09923e1dee2157c78c5ae0df65e8ee7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ix</name>
      <anchorfile>structWhereMaskSet.html</anchorfile>
      <anchor>a9de4e7b27d4f793f37c1ead7b44ecb48</anchor>
      <arglist>[BMS]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WhereOrInfo</name>
    <filename>structWhereOrInfo.html</filename>
    <member kind="variable">
      <type>WhereClause</type>
      <name>wc</name>
      <anchorfile>structWhereOrInfo.html</anchorfile>
      <anchor>a45bb04e5ea24ec549f060bc8b210ec71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitmask</type>
      <name>indexable</name>
      <anchorfile>structWhereOrInfo.html</anchorfile>
      <anchor>a39777f291e1e516f01b05b71a9805357</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WherePlan</name>
    <filename>structWherePlan.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>wsFlags</name>
      <anchorfile>structWherePlan.html</anchorfile>
      <anchor>a6b81c2c91b28ac8898f382db2da6707b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nEq</name>
      <anchorfile>structWherePlan.html</anchorfile>
      <anchor>a40932e9221e83032c43f147d287e3847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nRow</name>
      <anchorfile>structWherePlan.html</anchorfile>
      <anchor>af32764f764b0d160c63eb730d9064f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union WherePlan::@10</type>
      <name>u</name>
      <anchorfile>structWherePlan.html</anchorfile>
      <anchor>a4260aee3ff78abd957b8323248a57802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Index *</type>
      <name>pIdx</name>
      <anchorfile>unionWherePlan_1_1@10.html</anchorfile>
      <anchor>a161c6cad64a2672795b9bbcf8e69f448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct WhereTerm *</type>
      <name>pTerm</name>
      <anchorfile>unionWherePlan_1_1@10.html</anchorfile>
      <anchor>a1cae3acd54d266cb8f3b55b028a735db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3_index_info *</type>
      <name>pVtabIdx</name>
      <anchorfile>unionWherePlan_1_1@10.html</anchorfile>
      <anchor>ada0c78d80df650510e12f54add699813</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WhereTerm</name>
    <filename>structWhereTerm.html</filename>
    <member kind="variable">
      <type>Expr *</type>
      <name>pExpr</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>af5ec32fe3a2e4623c900cb91aa86bc9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iParent</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>aa45e0b271713e429fbeba433941d2e22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>leftCursor</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>a82bb97ef4285d75b1b9c4fcd2025aaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union WhereTerm::@16</type>
      <name>u</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>afd141f6a4511c9684ca83a8322854c7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>leftColumn</name>
      <anchorfile>unionWhereTerm_1_1@16.html</anchorfile>
      <anchor>af8373e3373418d9a977af593a8d0c68a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WhereOrInfo *</type>
      <name>pOrInfo</name>
      <anchorfile>unionWhereTerm_1_1@16.html</anchorfile>
      <anchor>a8fede815e1b8d991020e303c1290c98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WhereAndInfo *</type>
      <name>pAndInfo</name>
      <anchorfile>unionWhereTerm_1_1@16.html</anchorfile>
      <anchor>a48cf48b6d2f6245b0e96d0d8f6ee9e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>eOperator</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>af0b4817bee491fa1ee69a87d8ff580c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>wtFlags</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>a5a3ba67885262f1bb9169dcaff0f91b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>nChild</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>af83cf7bae7760b9b1ca398338a35c32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WhereClause *</type>
      <name>pWC</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>a1fb0a9ede5a12d6d2f7886431b348fb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitmask</type>
      <name>prereqRight</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>a1274011fa1ef0639284b7944f4570e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Bitmask</type>
      <name>prereqAll</name>
      <anchorfile>structWhereTerm.html</anchorfile>
      <anchor>a49b700336b005067352366cfc40de07f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WidthResults</name>
    <filename>structWidthResults.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structWidthResults.html</anchorfile>
      <anchor>a97d5b000c66c3bc747fb48ce2515fc08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structWidthResults.html</anchorfile>
      <anchor>a8ff3b4774a4b82bd286e6086443f7703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>localYarnWidth</name>
      <anchorfile>structWidthResults.html</anchorfile>
      <anchor>a936e742a98bc7118521cf1cfbfd5d536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intervalID</name>
      <anchorfile>structWidthResults.html</anchorfile>
      <anchor>af390937e062a70013894ba5dfffddcce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>YarnColumnCharacteristics</name>
    <filename>structYarnColumnCharacteristics.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>mMeanAbove</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>a35b66d7c80281a20d4b5df4b3109e072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMeanOn</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>a8878d80cee548e71c68f51893b5959a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMeanBelow</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>a81051f96867b214d3cca85c6c1c06f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mVarianceAbove</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>a1077b9b648522884af334e08e31af250</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mVarianceOn</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>aa1bdbf592b909864d2840caa2dc99dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mVarianceBelow</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>a9ea1acdcc2ceee2032b5910e869ba7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mpProfile</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>a36f30974224e841ac8727713bf032701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMeanWidth</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>a161366f56d9f3f465d1fb131326d31b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mVarianceWidth</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>ab195420c0cce16705231d3393a693a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMeanY</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>a1f5eaa3885561941e92b52e0f2146d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mVarianceY</name>
      <anchorfile>structYarnColumnCharacteristics.html</anchorfile>
      <anchor>ad27b20e76b97897559dc7aa04a249629</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>YarnModel</name>
    <filename>classYarnModel.html</filename>
    <member kind="function">
      <type></type>
      <name>YarnModel</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>aa2e0e848eba1a2ebda85e050195caf57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~YarnModel</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>a6ed99edf47a0a18f57b7bf8daace42a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mCycleLength</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>ab3f0db5727dd66c5290aae33a29c80b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; YarnTrainingStatisticsPerSegment &gt;</type>
      <name>mvYarnSegmentModel</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>a358969c81429d4099e1ed516a96c4789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::vector&lt; YarnColumnCharacteristics &gt; &gt;</type>
      <name>mvYarnColumnModelPerCycle</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>aa92d0cf5497be59e0b680ea32cb1a21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvYarnWidthAveragePerColumn</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>ae60f8553ddd55b90fb1713d14ecc369f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvYarnWidthVariancePerColumn</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>a8e2edfb54f4a2e0e9d4270e1b3aeaa45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
      <name>mvYarnYPositionAveragePerColumn</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>a6211f235b963922eaed23db2cd194427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
      <name>mvYarnYPositionVariancePerColumn</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>a56b317bfa2b9a3912f89273b75f48e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; stira::image::ArrayGrid&lt; double &gt; * &gt;</type>
      <name>mvpYarnPositionProbabilityMap</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>a8e49701077f1ca3d4b91737b64ab9b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; stira::image::ArrayGrid&lt; double &gt; * &gt;</type>
      <name>mvpAverageFramePerCycle</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>a4f80b59a3a9d1105086360b5c3ddaf58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvAverageVerticalYarnProfile</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>aaa5cec05c5d769a7fcf0958d55fd4f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvYarnProfilePerColumn</name>
      <anchorfile>classYarnModel.html</anchorfile>
      <anchor>adce12aaefbe5ad7b7673953652d051e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>YarnPositionCounter</name>
    <filename>structYarnPositionCounter.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>structYarnPositionCounter.html</anchorfile>
      <anchor>a104e6cc22be76d968b444871ac3874f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnPositionViolationsYThresholdExact</name>
      <anchorfile>structYarnPositionCounter.html</anchorfile>
      <anchor>a7c02b62b3f4bd5dde53d98c2f3106eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnPositionViolationsYThresholdPlusOne</name>
      <anchorfile>structYarnPositionCounter.html</anchorfile>
      <anchor>aef795ff123791a2ea45bb1369e0a8b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnPositionViolationsYThresholdPlusTwo</name>
      <anchorfile>structYarnPositionCounter.html</anchorfile>
      <anchor>a5c88d49a46c2e65b3fe1fe6a57d3c076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnPositionViolationsYThresholdPlusThree</name>
      <anchorfile>structYarnPositionCounter.html</anchorfile>
      <anchor>ac760221f7a66a017b5a56824099afdea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnPositionViolationsYThresholdMinusOne</name>
      <anchorfile>structYarnPositionCounter.html</anchorfile>
      <anchor>af523ae68a72a71e6c260e8dc9f75e4ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnPositionViolationsYThresholdMinusTwo</name>
      <anchorfile>structYarnPositionCounter.html</anchorfile>
      <anchor>adc664a2a4f175369d73915d43a775cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnPositionViolationsYThresholdMinusThree</name>
      <anchorfile>structYarnPositionCounter.html</anchorfile>
      <anchor>a1b2621389aa54f557f6748bfffedee68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>YarnProcessor</name>
    <filename>classYarnProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>YarnProcessor</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a71b202b2dab4501d05bd30cf8a7635ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~YarnProcessor</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a2d336dbec009c8c3a361f6f1fb1dddf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitializeModelInt</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>ac387198d73492aa970ae01575b75466b</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, int x, int yEdge, int yarnModelWidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitializeModelDouble</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a45d68b2160a41285518a8d428263d8c6</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int x, int yEdge, int yarnModelWidth)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>InitialColumnSum</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a609cdc2580f63b2e2331a0efd7688c90</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, int x, int yStart, int range, int myBias)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateColumnSum</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a99091a3afa8e08ddea376bd29d639f15</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, int x, int yStart, int range, int &amp;sumToUpdate, int myBias)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ComputeInitialCost</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a4859de705596cf20852340651f4dd176</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, int x, int yStart)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>UpdateCost</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a0ca291100b817767ec8897256daeca7c</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, int x, int yStart)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MethodDetectYarnPhilips</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>ab69a0b7d0f16a13b5200f106a07527cd</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, ArrayGrid&lt; int &gt; *pGridOut)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DetermineToShowConsoleOutput</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>ac065ea8ffc4297e8b392b6437b5b524b</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>GetSeriesToProcess</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a2dbbb0f6dbeca091430a364a7a0e7968</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static YarnResults *</type>
      <name>ProcessSingleYarn</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a691b41be408e4cf5bcd82b4cafa912fa</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, unsigned int yarnLength, unsigned int nrIntervals, unsigned int frameNr, BatchParameters *pBP, LineProcessing *pLP, tAVI_RGB *pAviWriter, tFrame *pFrameProcessed, Point&lt; int &gt; &amp;startPoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>PrefilterMatched</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a1e31e253a5f21d5722395ea368fb2933</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridIn, BatchParameters *pBP, int frameNr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ComputeColumnResponse</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a1d240610ba1277944b6dce17acbde629</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int x, int yEdge, int yarnWidth, int columnHalfWidth, int rangeAboveYarn, double &amp;averageIntensityAboveYarn, double &amp;averageIntensityOnYarn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>SQLiteTest</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a9e455070c82aed272bf90379e7e3858c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Point&lt; int &gt;</type>
      <name>FindTopLeftPoint</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a633faf5789a04fca70fd48827d34a2cc</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; vPoints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Point&lt; int &gt;</type>
      <name>FindTopRightPoint</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a1b068c29dbb9e83496758b1d9a944e2c</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; vPoints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Curve</type>
      <name>TraceContourInImage</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a66cc97196e5b314c35e91b7ec6cef8b0</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int frameNr, BatchParameters *pBP, LineProcessing *pLP, Point&lt; int &gt; &amp;startPoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Curve, Curve &gt;</type>
      <name>RecursiveLeastSquareTest</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a42bb3172be9218716e66bcd5f184c9b4</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridOut, ArrayGrid&lt; double &gt; *pFilterGrid, Point&lt; int &gt; startPoint, int stepX, BatchParameters *pBP, int frameNr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ComputeHorizontalSecondDerivative</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>ac36a04d891ac03ac4f756bc1428e8bdc</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridIn, BatchParameters *pBP, int frameNr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>AlignYarn</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>aee60a6482fe6412b5b314c4214cd19f6</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridIn, Curve traceTopCurve)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; common::IntensityPoint &gt;</type>
      <name>ExtractTrainedSingleYarnProfile</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>a20e2852ce23f73d0644ec2fd907c710e</anchor>
      <arglist>(std::vector&lt; common::IntensityPoint &gt; multipleYarnProfile, int gridHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>DetermineLocalYarnWidth</name>
      <anchorfile>classYarnProcessor.html</anchorfile>
      <anchor>ad9a1d8216a2a520a12db82d05c2978a4</anchor>
      <arglist>(ArrayGrid&lt; bool &gt; *pGridIn, ArrayGrid&lt; double &gt; *pGridOut, int x, int yCenter, BatchParameters *pBP, bool drawWidth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>YarnResultBuffer</name>
    <filename>classYarnResultBuffer.html</filename>
    <base>FixedBuffer&lt; YarnResults * &gt;</base>
    <member kind="function">
      <type></type>
      <name>YarnResultBuffer</name>
      <anchorfile>classYarnResultBuffer.html</anchorfile>
      <anchor>afcb04027f326590b3bd78c5f2db5ecf4</anchor>
      <arglist>(int maxSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddElement</name>
      <anchorfile>classYarnResultBuffer.html</anchorfile>
      <anchor>a50aa3060802677b3047acd634f573f48</anchor>
      <arglist>(YarnResults *pNewElement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearBuffer</name>
      <anchorfile>classYarnResultBuffer.html</anchorfile>
      <anchor>adc5e1df97d6b94718b536bac2db6e303</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YarnResults *</type>
      <name>GetLastYarnInGoodPosition</name>
      <anchorfile>classYarnResultBuffer.html</anchorfile>
      <anchor>a6bd3db676ceb50d0f324c2796a224236</anchor>
      <arglist>(int bindingCycle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>YarnResults</name>
    <filename>classYarnResults.html</filename>
    <member kind="function">
      <type></type>
      <name>YarnResults</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ac044252f40766225fc4d41d612090843</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~YarnResults</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a4d03725b989900117fcfbdb3bfd7ff26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetLocalYarnWidthHistogramAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a2a58ca858fe50271080ee75e3ac7bbaf</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetLocalYpositionsAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a6b25b96f0d3d6ee8a401536513e13573</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetLocalAverageWidthPerIntervalAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a8c4f755cd922e8620de19308ce36b4e9</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetLocalAverageGaussWidthPerIntervalAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a5dd9b0d0f0c6d06738cf686d34b08b93</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetSegmentIndexCounter</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a39a02b544eda65bd6b60c26f1b9f7e8e</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetMeanIntensitiesOnYarnAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a0a4cd5641f69ceefcbde66a498a734e9</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetMeanIntensitiesAboveYarnAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a49ec92bafa38e56291bbb2acbf1f3c3f</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetMeanIntensitiesBelowYarnAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ac7043d9626b89a850670364cb748ab05</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetIntensityVarianceOnYarnAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a2a87cf30433126cf90699260cc0b21ce</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetIntensityVarianceAboveYarnAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ae7e24ae0bd6d8c5c28185c5349230823</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetIntensityVarianceBelowYarnAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>aa6dacafc2d58cce962d8305a5019c204</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetRoiYCenterCoordinatesAsString</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>af3fbe28be135244d48d90da8324966a0</anchor>
      <arglist>(int precision)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteStatisticsPerColumnToFile</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ae05314d3085a0c9a3dce0cf4cad604fa</anchor>
      <arglist>(std::string pathName, int frameNr, int precision)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::pair&lt; Point&lt; int &gt;, Point&lt; int &gt; &gt; &gt;</type>
      <name>GetNumberOfLargestWidthPairs</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a16f44e736bdf354e165fd67c114b1103</anchor>
      <arglist>(int number)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mFrameNr</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a752a66cfee087f0d968f53a07ecfa5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mFileNamePath</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>afe4b35a860268fa4fd853a8de4f0654b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mBindingCycle</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a17a4645ec7a3bada33eb5059652920cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>mpGridIn</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ad47781a4b604c2dbcc2584af42c64b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>mpGridAligned</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a2b2440e4bff606b32e17f2287823195c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Curve</type>
      <name>mCurve</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a62234bf051c23481a546ad14ff43b514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>mvYarnWidthHistogram</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a6df61706fbb8dd25d0e6dbf97b3d4b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>mvYpositions</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ab2f2daa13ba6f4416eaeb7322670f4fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>mvYarnWidths</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a4d295829e3fe917212c9b7ce4567b827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvYarnLocalPeakHeight</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>afc326ee468ffabed544fbfb4f38b25fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvYarnLocalPeakPosition</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>adce1701897ecb491b57e93cddc844557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvYarnLocalSigmas</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a704f9548d1079938ab8dbe58ec55d0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvYarnSigmaHistogram</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a71d3c8a6f2aaa971cd992da1404b43f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mMaxNrConnectedZeroWidths</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a93493154622ea19589088decd525e288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mCurrentNrConnectedZeroWidths</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a627b00385094f194ff8239217f3ac323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; Point&lt; int &gt;, Point&lt; int &gt; &gt; &gt;</type>
      <name>mvYarnPointsBetweenWarpYarns</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>af7551549fff2293e59abc121c3a65a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
      <name>mvvYarnProfilesAlongYarn</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a696a488f538cc3342864faf104236898</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvAverageWidthPerInterval</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a4ab68f321b2b080d3cf3913b79b8446a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>mvAverageGaussWidthPerInterval</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ade74e12934618cd85389c2fd93377a7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; YarnSegmentStatistics &gt;</type>
      <name>mvSegmentStats</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ae3b7114cb9744185a233fc7be9fee12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; YarnColumnCharacteristics &gt;</type>
      <name>mvYarnColumnCharacteristicsVector</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ae48b28ca8c8cbc738d1abf966436b697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; common::IntensityPoint &gt;</type>
      <name>mvAlignedYarnProfileProjection</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ab34b3fc0a3d7de88a2dbe6ff63dfb109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mHasFullCurve</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a1fcfb621078fc84c3aeed8844c8e8110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsOK</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>af1bf5f9569dd7f49c8f7a256f63dd071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mNotTooWide</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a54b7edd7aab4d1646b48ac2c61f74b2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mNoHoles</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>af9617ad0478a677257c19c78a7a31a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mHasGoodPosition</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>aaa89fb878cbedbd18fb18d91d4d51bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsOscillationFree</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a275e8a8b8967ab315185360b9dd7ec4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsBranchFree</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a1b89beddd8fcf7a01569ee3ca64c89e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mRiskWidth</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a8f62dc6b52ac7edc814e29cb8f47799c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mRiskHoles</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a750570ca4f7dde62faad0f2a78fe505d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mRiskPosition</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a45728267766c4cc2e001b73b69d9aa8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNrPixelsWithRiskHoles</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>aa3b0f4377bd438e3d52dc5bbeec85a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YarnPositionCounter</type>
      <name>mYarnPositionCounter</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>ac095fc74274ee974e2fdd745a821c383</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YarnWidthCounter</type>
      <name>mYarnWidthCounter</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a0c83896c17ffdd579363918d25b036aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mYarnAverageWidth</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>a492bc909bcfa722674c4d9de5e24a62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMeanDistanceBetweenSmoothAndOriginalCurve</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>af5e7d8d8c56bc913e3ad0999f4245d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMaxDistanceBetweenSmoothAndOriginalCurve</name>
      <anchorfile>classYarnResults.html</anchorfile>
      <anchor>af9b755de0f7cc721c437e5b3714a7506</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>YarnRunLengthHistogram</name>
    <filename>classYarnRunLengthHistogram.html</filename>
    <member kind="function">
      <type></type>
      <name>YarnRunLengthHistogram</name>
      <anchorfile>classYarnRunLengthHistogram.html</anchorfile>
      <anchor>a05311acc85201abfa1816180ef4daaf0</anchor>
      <arglist>(int maxWidth)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Analyse</name>
      <anchorfile>classYarnRunLengthHistogram.html</anchorfile>
      <anchor>aa242c28befd4027f4a3d6ccab46103e1</anchor>
      <arglist>(std::vector&lt; int &gt; vYarnWidths)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; CurveSegment &gt;</type>
      <name>GetSegmentsWithWidth</name>
      <anchorfile>classYarnRunLengthHistogram.html</anchorfile>
      <anchor>a38c72be95e943fc2dea4ee6d40e16be2</anchor>
      <arglist>(int width)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>YarnSegmentStatistics</name>
    <filename>structYarnSegmentStatistics.html</filename>
    <member kind="variable">
      <type>StatisticsROI</type>
      <name>mOnYarn</name>
      <anchorfile>structYarnSegmentStatistics.html</anchorfile>
      <anchor>a73baadc1a8c7d529a37b6c1e1176b2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StatisticsROI</type>
      <name>mAboveYarn</name>
      <anchorfile>structYarnSegmentStatistics.html</anchorfile>
      <anchor>a2a5894a5ac36682ea663395379c2329d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StatisticsROI</type>
      <name>mBelowYarn</name>
      <anchorfile>structYarnSegmentStatistics.html</anchorfile>
      <anchor>a82bc227d39a892e972ccb725b49f677f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>WidthMeanOnYarnThresh</name>
      <anchorfile>structYarnSegmentStatistics.html</anchorfile>
      <anchor>a8f35d565f768899f4d7919768ce8a937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>WidthMeanOnYarnGauss</name>
      <anchorfile>structYarnSegmentStatistics.html</anchorfile>
      <anchor>a8aa7bd78e89d3173131511ce984e4e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>WidthVarianceOnYarnThresh</name>
      <anchorfile>structYarnSegmentStatistics.html</anchorfile>
      <anchor>aa3adaefcaf09734134e07d1e4a630fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>WidthVarianceOnYarnGauss</name>
      <anchorfile>structYarnSegmentStatistics.html</anchorfile>
      <anchor>aac8040b37a586b20db97449b326b596c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>YarnTrainer</name>
    <filename>classYarnTrainer.html</filename>
    <member kind="function">
      <type></type>
      <name>YarnTrainer</name>
      <anchorfile>classYarnTrainer.html</anchorfile>
      <anchor>a6278ded8dcbc31867697951126d6c1b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~YarnTrainer</name>
      <anchorfile>classYarnTrainer.html</anchorfile>
      <anchor>a5e224717a6cab17db92205c10b9a5551</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static YarnModel *</type>
      <name>TrainModel</name>
      <anchorfile>classYarnTrainer.html</anchorfile>
      <anchor>a966c650f44c8c1181707065396339bf2</anchor>
      <arglist>(std::vector&lt; YarnResults * &gt; vTrainingSampleVector, BatchParameters *pBP)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteModel</name>
      <anchorfile>classYarnTrainer.html</anchorfile>
      <anchor>ac39af44c4ed379656e6bc731b6c24278</anchor>
      <arglist>(YarnModel *pModel, std::string fileNameText, std::string fileNameMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteSegmentInTime</name>
      <anchorfile>classYarnTrainer.html</anchorfile>
      <anchor>a27fa64c337fd5ff4e529e0ba087a05b8</anchor>
      <arglist>(std::vector&lt; YarnResults * &gt; vTrainingSampleVector, BatchParameters *pBP, int precision)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>YarnTrainingStatisticsPerSegment</name>
    <filename>structYarnTrainingStatisticsPerSegment.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>IntensityMeanOfMeansOnYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a8462f8af68c22fbfd98d3f798a3b2a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityVarianceOfMeansOnYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>aa5e68c7104bf13fa2a45466a826e517f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityMeanOfVariancesOnYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>ab0341a6836204a3b16e29f2a7f33ca8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityVarianceOfVariancesOnYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a7a3713488831f5cdf0b36acb2c9d7414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityMeanOfMeansAboveYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>ace28fbe8e103bcf0416f3c77dcbb391b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityVarianceOfMeansAboveYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a51199522b98ae766ba8d648262630e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityMeanOfVariancesAboveYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a137d7095b689c7978429c6d64d377514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityVarianceOfVariancesAboveYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a53461eae840c8af7a5f92b105b1808b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityMeanOfMeansBelowYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a394ff7db9b9035b3dbe20793131bc713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityVarianceOfMeansBelowYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>aceb86230fe91c330112216658304f6eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityMeanOfVariancesBelowYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>ae3765f2f29aa64285baddedc5aeab93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>IntensityVarianceOfVariancesBelowYarn</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a6d0cccf7a1e7a2c005d826e353863d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>MeanYCoordinateOfROI</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a700d55be7998a8b285f0e3897cafbfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>VarianceYCoordinateOfROI</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a99d4112919ede6d4899a1b8a952037bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>MeanWidthThreshInROI</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>ab09cd0c1a4ccfa8b7ad8565539dbb96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>VarianceWidthThreshInROI</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a6c235d0296841a26aabe9f434c8ddca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>MeanWidthGaussInROI</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>abf320b7a4306c3117eab9493be763acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>VarianceWidthGaussInROI</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a8e5847cac04bafea81e5f66210bf4e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>MeanMaxDistanceBetweenSmoothAndOriginalCurve</name>
      <anchorfile>structYarnTrainingStatisticsPerSegment.html</anchorfile>
      <anchor>a8526d0dcd46475e39aea774f2130997c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>YarnWidthCounter</name>
    <filename>structYarnWidthCounter.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnWidthViolationsThresholdExact</name>
      <anchorfile>structYarnWidthCounter.html</anchorfile>
      <anchor>ad180f4834d62c4acf3681fad379cb26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnWidthViolationsThresholdPlusOne</name>
      <anchorfile>structYarnWidthCounter.html</anchorfile>
      <anchor>a8578dc49f0072112a2eb489236790d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnWidthViolationsThresholdPlusTwo</name>
      <anchorfile>structYarnWidthCounter.html</anchorfile>
      <anchor>afcf119b76f658ff53454d71062148ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnWidthViolationsThresholdMinusOne</name>
      <anchorfile>structYarnWidthCounter.html</anchorfile>
      <anchor>a575ad67eceb4779add062421b153d648</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrYarnWidthViolationsThresholdMinusTwo</name>
      <anchorfile>structYarnWidthCounter.html</anchorfile>
      <anchor>ae2e1f81c8982558409885975f441686b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>YYMINORTYPE</name>
    <filename>unionYYMINORTYPE.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>yyinit</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>a6cec97309f473b42b70a9738d7cbd5ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3ParserTOKENTYPE</type>
      <name>yy0</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>a827d6a1bc7ac8df062b3f419db3f50ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy4</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>ae433a4d120346e52c0a49a52f00addf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct TrigEvent</type>
      <name>yy90</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>aff972d766a7c6e72d308c7ca352670a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExprSpan</type>
      <name>yy118</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>a92a74cbc3eaaf535474c05b481371cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TriggerStep *</type>
      <name>yy203</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>ada44002797ea649d714c8c08b01c1b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>yy210</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>a8278e3162cabfe6498e9d032530aba4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct YYMINORTYPE::@17</type>
      <name>yy215</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>a6d01489c88a59cfac054f2b7d8215ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>value</name>
      <anchorfile>structYYMINORTYPE_1_1@17.html</anchorfile>
      <anchor>a39c5b236136b5bc7072310054993406b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mask</name>
      <anchorfile>structYYMINORTYPE_1_1@17.html</anchorfile>
      <anchor>a29f610f7b29521aabd6d9f29b70ddf12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SrcList *</type>
      <name>yy259</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>aecb1e4bcc603cf3e508d3d848391e5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct LimitVal</type>
      <name>yy292</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>a2a3f059d8638e967a9bd408352125436</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Expr *</type>
      <name>yy314</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>aef6a1397e9c0b55950de3858fc06d38f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExprList *</type>
      <name>yy322</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>ad1634e35fc2640914050fb35a2b02f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct LikeOp</type>
      <name>yy342</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>aaa2ad4a44eb5a91d4e03ca80276f6056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IdList *</type>
      <name>yy384</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>a94e46061fe74047ba6d245e6dfcf6434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Select *</type>
      <name>yy387</name>
      <anchorfile>unionYYMINORTYPE.html</anchorfile>
      <anchor>af85eeecd20fb319ac8f5ec9701bce614</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>yyParser</name>
    <filename>structyyParser.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>yyidx</name>
      <anchorfile>structyyParser.html</anchorfile>
      <anchor>a19abcf4780515fd2debd1ce7a2e29f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyerrcnt</name>
      <anchorfile>structyyParser.html</anchorfile>
      <anchor>ac0350933aa515a3a756dfa742d04ee59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sqlite3ParserARG_SDECL yyStackEntry</type>
      <name>yystack</name>
      <anchorfile>structyyParser.html</anchorfile>
      <anchor>ae8bc1531d6ae56020a7ee33a40783672</anchor>
      <arglist>[YYSTACKDEPTH]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>yyStackEntry</name>
    <filename>structyyStackEntry.html</filename>
    <member kind="variable">
      <type>YYACTIONTYPE</type>
      <name>stateno</name>
      <anchorfile>structyyStackEntry.html</anchorfile>
      <anchor>a108164609c2e841577cc3533d8f0180d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYCODETYPE</type>
      <name>major</name>
      <anchorfile>structyyStackEntry.html</anchorfile>
      <anchor>a7624d02bcf945d48068f4c383551725c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYMINORTYPE</type>
      <name>minor</name>
      <anchorfile>structyyStackEntry.html</anchorfile>
      <anchor>a024e1e64bce5945080629a2dd8d1bb4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>stira</name>
    <filename>namespacestira.html</filename>
    <class kind="class">stira::FlashROF</class>
    <member kind="function">
      <type>bool</type>
      <name>HighPassTest</name>
      <anchorfile>namespacestira.html</anchorfile>
      <anchor>a04883ae82eed0599c4d7e5584ab85b3a</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LowPassTest</name>
      <anchorfile>namespacestira.html</anchorfile>
      <anchor>a0d246f67294824dd8938858541c8d411</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ApplySetOfTransferFunctionsTest</name>
      <anchorfile>namespacestira.html</anchorfile>
      <anchor>afc3a01d8daa3d08b05a6aa54705e253f</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ForwardInverseTest</name>
      <anchorfile>namespacestira.html</anchorfile>
      <anchor>a2409021ffbda1633544cdcfad6a2f019</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FFTtest</name>
      <anchorfile>namespacestira.html</anchorfile>
      <anchor>a42f2987faba96beda9d18d716a17d597</anchor>
      <arglist>(image::Image *pSourceImage)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>namespacestira.html</anchorfile>
      <anchor>ad54f4b5295ee742e80338b09d26626cd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::FlashROF</name>
    <filename>classstira_1_1FlashROF.html</filename>
    <member kind="function">
      <type>image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>af5187d8a4fc8f34e878922c72a67845d</anchor>
      <arglist>(image::Image *pImageIn)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMu</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>aba5b2e0fb0e4d93070ef4208e14981a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMu</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a7fbec68172a2186cb39ee272b1f9f823</anchor>
      <arglist>(double mu)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetLambda</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a9a3e07540fa9709f60d8ac6728462112</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLambda</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a4b0f3e998dea33789ef76b066175a401</anchor>
      <arglist>(double lambda)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfGaussSeidelIterations</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a2a3c3404e55e4bad6a1c0ebb874ea4d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberOfGaussSeidelIterations</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a5b09fdc0519316ea9760a7876217d405</anchor>
      <arglist>(int nGS)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfBregmanIterations</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a6d50693741d8fb5848608f8814cdc41e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberOfBregmanIterations</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a375084e7c740b42edc2c7d41890d90d9</anchor>
      <arglist>(int nBreg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsIsotropic</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a268d6accfa71eaa7153350558e19047d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIsIsotropic</name>
      <anchorfile>classstira_1_1FlashROF.html</anchorfile>
      <anchor>a6282b22fecb6a8137c58ced9181d4d0c</anchor>
      <arglist>(bool flag)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::common::NeighborPointPair</name>
    <filename>structstira_1_1common_1_1NeighborPointPair.html</filename>
    <member kind="variable">
      <type>Point&lt; int &gt;</type>
      <name>pt1</name>
      <anchorfile>structstira_1_1common_1_1NeighborPointPair.html</anchorfile>
      <anchor>a8e4b8b2f0b3d54b5a29444291ed628ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Point&lt; int &gt;</type>
      <name>pt2</name>
      <anchorfile>structstira_1_1common_1_1NeighborPointPair.html</anchorfile>
      <anchor>a54e527d5ddf8f9b250f53d9bb0e27fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id1</name>
      <anchorfile>structstira_1_1common_1_1NeighborPointPair.html</anchorfile>
      <anchor>adf6642e165daef9f611d09693f513e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id2</name>
      <anchorfile>structstira_1_1common_1_1NeighborPointPair.html</anchorfile>
      <anchor>aafc0d5d40cc340cd1f5e055585ad0e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>length</name>
      <anchorfile>structstira_1_1common_1_1NeighborPointPair.html</anchorfile>
      <anchor>ad604ffecc0f949189ef163fbfeadf3c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::Curve</name>
    <filename>classstira_1_1common_1_1Curve.html</filename>
    <member kind="function">
      <type></type>
      <name>Curve</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a750c27733dbc2b38ce47b0744469b925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Curve</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a622cb06079b2c600b65467a7f4523b2b</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; pointsOnCurve)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAverageX</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a97dd849dc1e6864083c7c816684a06e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAverageY</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>aed87e91effbf486b309d17a5f6bfa4bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCorrespondingY</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a86144021922a03354e6d9c24e2a5555d</anchor>
      <arglist>(int x) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLength</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a77400ae12c35add16be5055f177dc5f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetY</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>ae7a83996875f2eb77ef919c1beef8cb7</anchor>
      <arglist>(int x) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddPoint</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>aaa9abc7537eab53a4ef7e21307bc9dfb</anchor>
      <arglist>(Point&lt; int &gt; point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddPoints</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a42abe3f5e8f2d2ff6b3eda4ae16668de</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; points)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>GetPoints</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a521cfb875604f3b4b9f2b7e5275fbf41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; int &gt;</type>
      <name>GetStartPoint</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a0751a65230d3ed2f89af50b3d831751f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Point&lt; int &gt;</type>
      <name>GetEndPoint</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a3962cc5ba05189fb20e2aa54f98c4a1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>GetExtremePointsX</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a22c4e921ef5abd172c66f52b77270cf2</anchor>
      <arglist>(int &amp;xMin, int &amp;xMax, bool usePoints=false)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>GetPointsMinimumX</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a2666a93a05a3ec837756a669efe9754d</anchor>
      <arglist>(int &amp;xMin, bool usePoints=false)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>GetPointsMaximumX</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a39f94ef9995a3d4c20fbd5fb66aa5d37</anchor>
      <arglist>(int &amp;xMax, bool usePoints=false)</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; int &gt;</type>
      <name>GetPoint</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>aa95afbe0f5a9bf7b895616f77b05c660</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChangeCoordinatesForPoint</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a9b992d6837b900123ecc17da17c5665f</anchor>
      <arglist>(int i, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SortOnCoordinateX</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>afd03e0f16e19ca01da0fd71eee97a54c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SortOnCoordinateY</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a81b0fa6b82efb8ac87cf01cdd5eaf97e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WritePointsToStdOut</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a04486ac08c35e90ca38e4097a682299c</anchor>
      <arglist>(int intervalSize=10)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIsUsed</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a0165a955df6f30a231e378b1fca778d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIsUsed</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>aef20574c0c5d6135c85cbb0a1aa8a074</anchor>
      <arglist>(bool isUsed)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetHadBranches</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a99ce2f31e3609bdbd0f906085b4cbc1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHadBranches</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a339fef3506f75736f2c66e6ca5ef0d05</anchor>
      <arglist>(bool hadBranches)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDoesCurveSpanFullImage</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a16545987c0985881192a9bc3b21e5dad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDoesCurveSpanFullImage</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a092fd21832ed572f4310aa5dc18cbbc2</anchor>
      <arglist>(bool doesSpan)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Point&lt; int &gt;, Point&lt; int &gt; &gt;</type>
      <name>GetClosestEndPoints</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>ae6858028181128324eb4dc7d6b1fb059</anchor>
      <arglist>(Curve otherCurve)</arglist>
    </member>
    <member kind="function">
      <type>Curve</type>
      <name>CreateMergedCurve</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a22d4a6976044b394b1848f2b28354d42</anchor>
      <arglist>(Curve otherCurve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectToCurve</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a0472aa5bb29ef524b362a2d72c407fb1</anchor>
      <arglist>(Curve otherCurve)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>ComputeVerticalDistanceToCurve</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a8088e1426bd3a7d6f6ad96ed7509083f</anchor>
      <arglist>(Curve otherCurve)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AreNeighbors</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>af3a1c6c82512ac26526b9f35a51a8a1b</anchor>
      <arglist>(Point&lt; int &gt; inPoint1, Point&lt; int &gt; inPoint2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SmoothCurveY</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a2f212859e1ddf8e726e346c04a5f9b23</anchor>
      <arglist>(int smoothHalfDistance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WritePointsToText</name>
      <anchorfile>classstira_1_1common_1_1Curve.html</anchorfile>
      <anchor>a9b6c4ba6fc319e67b99c83941ac05355</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::CurveSet</name>
    <filename>classstira_1_1common_1_1CurveSet.html</filename>
    <member kind="function">
      <type></type>
      <name>CurveSet</name>
      <anchorfile>classstira_1_1common_1_1CurveSet.html</anchorfile>
      <anchor>a4e35b31105ca0691bdb6650d2d4d57bf</anchor>
      <arglist>(std::vector&lt; Curve &gt; curveSet, int ID)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Curve &gt;</type>
      <name>GetCurveVector</name>
      <anchorfile>classstira_1_1common_1_1CurveSet.html</anchorfile>
      <anchor>a5251bc7f810480543ceda568f916dd5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfCurves</name>
      <anchorfile>classstira_1_1common_1_1CurveSet.html</anchorfile>
      <anchor>a759ba5299ad03af310896da473cf9958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCurveSetID</name>
      <anchorfile>classstira_1_1common_1_1CurveSet.html</anchorfile>
      <anchor>abf4ad231c2eecc2d891d2f66ca51e16b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Curve</type>
      <name>GetTopCurve</name>
      <anchorfile>classstira_1_1common_1_1CurveSet.html</anchorfile>
      <anchor>a2a91f134b7fdba8813a739751cfca91d</anchor>
      <arglist>(int minimumLength=400)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::Definitions</name>
    <filename>classstira_1_1common_1_1Definitions.html</filename>
    <member kind="function">
      <type></type>
      <name>Definitions</name>
      <anchorfile>classstira_1_1common_1_1Definitions.html</anchorfile>
      <anchor>a1bfdf1f85d051a3cb3377eb3d1582a17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Definitions</name>
      <anchorfile>classstira_1_1common_1_1Definitions.html</anchorfile>
      <anchor>a09a6560111c89ada6f2ec9fed9312a45</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::DrawFigures</name>
    <filename>classstira_1_1common_1_1DrawFigures.html</filename>
    <member kind="function">
      <type></type>
      <name>DrawFigures</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>a0d08ee6c232d725e0e835df59efde710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DrawFigures</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>abef73bf58c8423d2abc0ca631701a10d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>BresenhamDrawLine</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>a839b2f2459fdb189251c6def4e69d706</anchor>
      <arglist>(int startX, int startY, int endX, int endY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>BresenhamDrawLine</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>a81ecbabf95aafd9fca05317d4688095e</anchor>
      <arglist>(Point&lt; int &gt; startPoint, Point&lt; int &gt; endPoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>a704a2b20e5262997a8782f7f96477ab1</anchor>
      <arglist>(int topLeftX, int topLeftY, int bottomRightX, int bottomRightY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>a9c49f62c5338db3a70a09a8a41a20471</anchor>
      <arglist>(Point&lt; int &gt; topLeftCorner, Point&lt; int &gt; bottomRightCorner)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>ad9da927de110e513d0972c028f2e17b1</anchor>
      <arglist>(RectangularROI&lt; int &gt; rroi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>DrawCircle</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>a5ab5559b385558c3ebb700e4d1321e75</anchor>
      <arglist>(Point&lt; int &gt; center, int radius)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; int &gt; &gt;</type>
      <name>DrawPolygon</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>a00636c4582f1b9c0525d7c62b3056270</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; vVertices)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsPointInPolygon</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>af4ad145df1773a2a64a0de076b58f9e5</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; vVertices, Point&lt; int &gt; testPoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetPolygonArea</name>
      <anchorfile>classstira_1_1common_1_1DrawFigures.html</anchorfile>
      <anchor>aa40b58cba05b5aecedee04382c6ac3a7</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; vVertices)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::ExecutionTimer</name>
    <filename>classstira_1_1common_1_1ExecutionTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>ExecutionTimer</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>a89d3657e6c1b7a3ba303b75c9fb9db92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExecutionTimer</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>ab87506dae25bf08d68feaa5dfb47dc75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetCurrentTime</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>a30987b67594e2e450a50d293f9bfab1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartTimer</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>abd788e726399058d11856bac7665da24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopTimer</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>a9e585053ddb769b889ee28446024afd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetElapsedUserTimeInSeconds</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>a0aa4f132446730b4ac03da698c75b6c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetElapsedSystemTimeInSeconds</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>a71e6ddcd5bdfabc5e783aaf4ed1a19af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetElapsedRealTimeInSeconds</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>a57ce7fec1864b910d3970e8d75e81628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTimeAsUserAndSystemTimes</name>
      <anchorfile>classstira_1_1common_1_1ExecutionTimer.html</anchorfile>
      <anchor>a74feb8acad7976d56a487d087302cf9a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::FileAccess</name>
    <filename>classstira_1_1common_1_1FileAccess.html</filename>
    <member kind="function">
      <type></type>
      <name>FileAccess</name>
      <anchorfile>classstira_1_1common_1_1FileAccess.html</anchorfile>
      <anchor>a796329286dd8e5ae92c377b72b57f2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileAccess</name>
      <anchorfile>classstira_1_1common_1_1FileAccess.html</anchorfile>
      <anchor>ab30b4e0e3ed759dca06dc943a5066760</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>ListFilesOfType</name>
      <anchorfile>classstira_1_1common_1_1FileAccess.html</anchorfile>
      <anchor>a612e38091be2ac1e82ba34f2fdf6c178</anchor>
      <arglist>(std::string pathToAccess, std::string extension, int startNrImage=-1, int maxNrFiles=-1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>FindFileName</name>
      <anchorfile>classstira_1_1common_1_1FileAccess.html</anchorfile>
      <anchor>af38ba322651ff9ff7b66838d637ab3e6</anchor>
      <arglist>(std::vector&lt; std::string &gt; fileList, int frameNr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CheckIfDirectoryExists</name>
      <anchorfile>classstira_1_1common_1_1FileAccess.html</anchorfile>
      <anchor>ac7a0440d555ccad43d8a51b3a1ef1073</anchor>
      <arglist>(std::string dirName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CreateNewDirectory</name>
      <anchorfile>classstira_1_1common_1_1FileAccess.html</anchorfile>
      <anchor>a2f9bd267e7ef56af4d1f28aaf00a1484</anchor>
      <arglist>(std::string dirName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CreateSymbolicLink2File</name>
      <anchorfile>classstira_1_1common_1_1FileAccess.html</anchorfile>
      <anchor>a5c0f17f25cb765049fc6d84e2faa57ab</anchor>
      <arglist>(std::string sourcePathAndFileName, std::string linkPathAndFileName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::FitCurve</name>
    <filename>classstira_1_1common_1_1FitCurve.html</filename>
    <member kind="function">
      <type></type>
      <name>FitCurve</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a8033109cd128e3c52603a21f38b21bdb</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; inputPoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FitCurve</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a66cd85f9c1bc0864c0681539ee77a9b6</anchor>
      <arglist>(std::vector&lt; Point&lt; double &gt; &gt; inputPoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPoints</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a68fa712edc64e9ae2117d73ab045ee00</anchor>
      <arglist>(std::vector&lt; Point&lt; double &gt; &gt; inputPoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPoints</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a4a300479b9fb2311ec38a4db6ce4d317</anchor>
      <arglist>(std::vector&lt; Point&lt; int &gt; &gt; inputPoints)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>FitLinear</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>af89c29eef80abb6f6f733079cc71b863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>FitQuadratic</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a2fbc7985075125377a69afe57e54030f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>FitExponential</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a17c7447b5af2017d0bff965a90e93309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>GetAllAbsoluteErrors</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>adc976052306b25c26e73dda790cd403e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMeanAbsoluteError</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>abe285ac6460737e7c21e48885ea33bbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>PolynomialFit</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a5b91c437c3e78d373afee839d7e802a4</anchor>
      <arglist>(int polynomialDegree)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; double &gt;</type>
      <name>GaussianFitLeastSquares</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a16b11e9a28c2f0e9ab60e922ba48989e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteToDisk</name>
      <anchorfile>classstira_1_1common_1_1FitCurve.html</anchorfile>
      <anchor>a896bc8f267bb140c2c9ce321867e32d6</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::FixedBuffer</name>
    <filename>classstira_1_1common_1_1FixedBuffer.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>FixedBuffer</name>
      <anchorfile>classstira_1_1common_1_1FixedBuffer.html</anchorfile>
      <anchor>a49d294bfc0601d5d1828414dcfcfb617</anchor>
      <arglist>(int maxSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddElement</name>
      <anchorfile>classstira_1_1common_1_1FixedBuffer.html</anchorfile>
      <anchor>a3a9b765a5ba226108fc5e40de501b88b</anchor>
      <arglist>(T newElement)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetElementFromEnd</name>
      <anchorfile>classstira_1_1common_1_1FixedBuffer.html</anchorfile>
      <anchor>abcc4cc04079458f25eeffc8e7ed0774e</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSize</name>
      <anchorfile>classstira_1_1common_1_1FixedBuffer.html</anchorfile>
      <anchor>a27300337e61c13256ae0ac4a5db381d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>mMaxSize</name>
      <anchorfile>classstira_1_1common_1_1FixedBuffer.html</anchorfile>
      <anchor>a1bedc98f902e23478918329b7f7d9a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; T &gt;</type>
      <name>mvVector</name>
      <anchorfile>classstira_1_1common_1_1FixedBuffer.html</anchorfile>
      <anchor>ae2d463bc2564b9c1035388e173d0e2a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::LineSegment</name>
    <filename>classstira_1_1common_1_1LineSegment.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LineSegment</name>
      <anchorfile>classstira_1_1common_1_1LineSegment.html</anchorfile>
      <anchor>a71e8fd72c745b20f51681ca19ce34997</anchor>
      <arglist>(Point&lt; T &gt; point1, Point&lt; T &gt; point2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LineSegment</name>
      <anchorfile>classstira_1_1common_1_1LineSegment.html</anchorfile>
      <anchor>a466fd93ade77c28079829f9751cba532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; T &gt;</type>
      <name>GetPoint1</name>
      <anchorfile>classstira_1_1common_1_1LineSegment.html</anchorfile>
      <anchor>ac93a9d2e52012fef2e0079ba7514d651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPoint1</name>
      <anchorfile>classstira_1_1common_1_1LineSegment.html</anchorfile>
      <anchor>a9c2b9298c69b9277286bab3825c2c33a</anchor>
      <arglist>(Point&lt; T &gt; p)</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; T &gt;</type>
      <name>GetPoint2</name>
      <anchorfile>classstira_1_1common_1_1LineSegment.html</anchorfile>
      <anchor>a64f427ec2a5a7ad8edb9f4010941f072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPoint2</name>
      <anchorfile>classstira_1_1common_1_1LineSegment.html</anchorfile>
      <anchor>aacbb408cac39b52cb9595cb96ac92049</anchor>
      <arglist>(Point&lt; T &gt; p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetLength</name>
      <anchorfile>classstira_1_1common_1_1LineSegment.html</anchorfile>
      <anchor>a069c49e12e58c999a189d0bb0227d419</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDistanceToLine</name>
      <anchorfile>classstira_1_1common_1_1LineSegment.html</anchorfile>
      <anchor>aa5da392df4b0b1cecfeebf69990b71ec</anchor>
      <arglist>(Point&lt; T &gt; p, bool isSegment=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::MathUtils</name>
    <filename>classstira_1_1common_1_1MathUtils.html</filename>
    <member kind="function">
      <type></type>
      <name>MathUtils</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>abbda6c2600d3d51fcbdf4fdbbb6720b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MathUtils</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>afbc60582f04bbb1483a2392a91309326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SolveQuadraticEquation</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a33903320715bc8f85049118ae6f97f3e</anchor>
      <arglist>(double a, double b, double c, double &amp;outSolution1, double &amp;outSolution2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SwitchValues</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a32008e477f585a177ecaee0dcd753853</anchor>
      <arglist>(double &amp;a, double &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SwitchValues</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a395bb3688da6f48aaa5e535df23de48b</anchor>
      <arglist>(int &amp;a, int &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetMin</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>af4ea26af4687605c4b07fc0f9f3da031</anchor>
      <arglist>(double value1, double value2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetMax</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a743284101d66293bda94ed8b288523e6</anchor>
      <arglist>(double value1, double value2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>CompareDoubles</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a85abee7d0f85dc475148fe9ff8f27b3a</anchor>
      <arglist>(const void *a, const void *b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>CompareFloats</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>aa6a69a338a44d7d91245975c32669b7a</anchor>
      <arglist>(const void *a, const void *b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>CompareIntegers</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a7a38ff74514e0e76f677b6fea40943d3</anchor>
      <arglist>(const void *a, const void *b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>ClipValue</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a1d14194470822da692c26c0c9734695b</anchor>
      <arglist>(int value, int min=0, int max=255)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ClipValue</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a95e981060b69736cb8680c7f8051b601</anchor>
      <arglist>(double value, double min=0.0, double max=255.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsBetween</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a5145cda4ac94a81b286f5b545ac28b23</anchor>
      <arglist>(double testValue, double underLimit, double upperLimit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ApplyModulo</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>ad497f57aeaf7fe3da7ffdf883f3bd177</anchor>
      <arglist>(double input, double modulo)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeArgument</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a83d0590dd9363d63a8eb7905703b8a57</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ToRadians</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a51ab7a226260abec7aabd06b5c26eb9d</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ToDegrees</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a76912556b8eeb8a2e20c3b594ae10d1a</anchor>
      <arglist>(double radians)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SolveLinearEquation</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>abc31bdf3f4eecbdeb59b0f3e8d088e27</anchor>
      <arglist>(double a, double b, double &amp;solution)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SolveQuadraticEquation</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>af0741f311e8292e9ff39b9649866cf83</anchor>
      <arglist>(std::complex&lt; double &gt; a, std::complex&lt; double &gt; b, std::complex&lt; double &gt; c, std::complex&lt; double &gt; &amp;outSolution1, std::complex&lt; double &gt; &amp;outSolution2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputePSNR</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a3a6bbc5d74ee6aebfeb1b14cd917f273</anchor>
      <arglist>(double MSE, double peakValue=255.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GammaCorrect</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>ace6ce636828514e9c3cdc7336affd028</anchor>
      <arglist>(double inValue, double gamma, double rangeMin=0.0, double rangeMax=255.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetSteerableInterPolationCoefficient</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>ae88f80e6ee638928fcb2d65b8db0ca02</anchor>
      <arglist>(int i, int K, double theta)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Factorial</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a18be5e1e91c472cb2ccf6949e7160f23</anchor>
      <arglist>(const double &amp;inputNumber)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>ComputeIntegerPower</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a3744bb28d35e6fac7e45339da2ea314f</anchor>
      <arglist>(int myNumber, int myExponent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; double &gt;</type>
      <name>GenerateGaussianSamples</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>ae2d7188881d4630564eed2764d7f7cd8</anchor>
      <arglist>(double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; double &gt; &gt;</type>
      <name>GenerateGaussianPoints</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>af377d1e3ef1823df4480602f3e39dde2</anchor>
      <arglist>(int gaussCenterX, double sigma, bool scaleAmplitude=false, double amplitude=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Point&lt; double &gt; &gt;</type>
      <name>GenerateGaussianPoints</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a0e5c0368b962ef51dd6f52e0b1cc2c4c</anchor>
      <arglist>(std::vector&lt; Point&lt; double &gt; &gt; inPoints, int gaussCenterX, double sigma, bool scaleAmplitude, double amplitude)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; double, double &gt;</type>
      <name>ComputeFirstTwoCentralMoments</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a7e3d6db18f98d48463fa8048a6820b1e</anchor>
      <arglist>(std::vector&lt; Point&lt; double &gt; &gt; inPoints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Gaussian</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>ade0ca08fd5b31a599f3eb9ba4515a974</anchor>
      <arglist>(double x, double mu, double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Gaussian</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a6c15707b6be6bc51443a6c1859cf26a5</anchor>
      <arglist>(double x, double y, double muX, double muY, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GaussianDx</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a9e03a10ddad36acd69bc0998f5348d32</anchor>
      <arglist>(double x, double mu, double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GaussianD2x</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a5acc25ff82f1049fae0e815d0dc45866</anchor>
      <arglist>(double x, double mu, double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GaussianDx</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a886f98ff905fb9e888f4daf548297334</anchor>
      <arglist>(double x, double y, double muX, double muY, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GaussianDy</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>af335fcd475fc715957897d81b6c7ccbc</anchor>
      <arglist>(double x, double y, double muX, double muY, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GaussianD2x</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>afe64a78ecba10b0fe4bdc5ec0ade50bb</anchor>
      <arglist>(double x, double y, double muX, double muY, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GaussianD2y</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a5f0a477dba1791da9bacc3736b373ae5</anchor>
      <arglist>(double x, double y, double muX, double muY, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GaussianDxDy</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a660974dda6ff7fedffb65bd79c629d8a</anchor>
      <arglist>(double x, double y, double muX, double muY, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>ComputeCrossCorrelation</name>
      <anchorfile>classstira_1_1common_1_1MathUtils.html</anchorfile>
      <anchor>a982200f53a2d81e5a35cbbfbdade0030</anchor>
      <arglist>(double *x, double *y, int nrSamples, int maxDelay)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::common::IntensityPoint</name>
    <filename>structstira_1_1common_1_1IntensityPoint.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structstira_1_1common_1_1IntensityPoint.html</anchorfile>
      <anchor>a4f5bf57bc5822f4c7a017ccbec46a946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structstira_1_1common_1_1IntensityPoint.html</anchorfile>
      <anchor>a0771c554698fe666b4f0a98e2b659876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>intensity</name>
      <anchorfile>structstira_1_1common_1_1IntensityPoint.html</anchorfile>
      <anchor>a70cda4361c773935c3bb1f9aad06babc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::Point</name>
    <filename>classstira_1_1common_1_1Point.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>ad92f2337b839a94ce97dcdb439b4325a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>aaa89a2df6da420922cb1aeefde80c5f6</anchor>
      <arglist>(T x, T y, coordinateMode mode=COORDINATES_CARTESIAN, pointType myType=TYPE_DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Point</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a395fa04b4ec126b66fc053f829a30cc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetX</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a13a4609036b4c26601d49badaa122610</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetY</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a89bf64902dd9acf4d7fe729280fdd6d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetRadius</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a4f7a76900ccd761d8a64a01599fb4591</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetTheta</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a2531485e1491a75851d0f3dff87ae1f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointType</type>
      <name>GetType</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a10949ebd943ef8fd1caaf66926daa4ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetType</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>ad46630cc1bfcf5dc69b9ad818e488c99</anchor>
      <arglist>(pointType type)</arglist>
    </member>
    <member kind="function">
      <type>coordinateMode</type>
      <name>GetMode</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a0ac423b074c30d85d38f73278ddaf738</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetXAndY</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a3a8e997ca7fc11d66d47096611e69826</anchor>
      <arglist>(T x, T y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetX</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a6476e35baff8e64422d46a8757ff5745</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetY</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>ac573719e2339149db9d2cd73a60c36c2</anchor>
      <arglist>(T y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRadiusAndTheta</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>aca70acb272bcecd81566181163d15718</anchor>
      <arglist>(T radius, T theta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDistance</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a5c8071ca752faddfb9284e71a0bed17a</anchor>
      <arglist>(Point other=Point&lt; T &gt;(0, 0))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToPolar</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a5256146c17b2db975dfb5132b3789f1a</anchor>
      <arglist>(T xCenter=0, T yCenter=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToCartesian</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a3568bd039839786998a3a73f3e48b323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MirrorOrigin</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>ae047d0bdcbd72b8ae67bfeb5d1853b5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MirrorXaxis</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a6de8dec0fc5909a645fa32fe853a2fd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MirrorYaxis</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a5a3767f95aa697bdb8554c1c9ba3744f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a3b8dd391d246620a9d17980065b2612d</anchor>
      <arglist>(Point&lt; T &gt; otherPoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>afa352b357bc371471a3fe23a516a89e8</anchor>
      <arglist>(Point&lt; T &gt; otherPoint)</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; T &gt;</type>
      <name>operator+</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a4906aaa127e468f3d5df5bc27717f5ff</anchor>
      <arglist>(Point&lt; T &gt; otherPoint)</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>ab8cedbe274a4414211cea7052be34fa1</anchor>
      <arglist>(Point&lt; T &gt; otherPoint)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator*</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a3ab53f0f74ba3aa299153458d528d947</anchor>
      <arglist>(Point&lt; T &gt; otherPoint)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator^</name>
      <anchorfile>classstira_1_1common_1_1Point.html</anchorfile>
      <anchor>a6db4617b319f582fd4cbd4c0d9c43599</anchor>
      <arglist>(Point&lt; T &gt; otherPoint)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::QuantileNormalDistribution</name>
    <filename>classstira_1_1common_1_1QuantileNormalDistribution.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Run</name>
      <anchorfile>classstira_1_1common_1_1QuantileNormalDistribution.html</anchorfile>
      <anchor>aff7645d6d4945a2983f7f1d427fa494b</anchor>
      <arglist>(double p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; double &gt;</type>
      <name>AnalyseNormalizedHistogram</name>
      <anchorfile>classstira_1_1common_1_1QuantileNormalDistribution.html</anchorfile>
      <anchor>aaadb764a3cd539859a0faf54a1992e1a</anchor>
      <arglist>(std::vector&lt; double &gt; normalizedHistogram, double &amp;rho, bool writeQuantiles=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::RectangularROI</name>
    <filename>classstira_1_1common_1_1RectangularROI.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>RectangularROI</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>a44ce5ad8ee8c5127e5297a4c7d2ab52c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangularROI</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>a97e0e4c99ab65ce289ca394f0f818273</anchor>
      <arglist>(Point&lt; T &gt; topLeftCorner, Point&lt; T &gt; bottomRightCorner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RectangularROI</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>a777158e453b462ff0dad6032a334e1fd</anchor>
      <arglist>(T topLeftX, T topLeftY, T bottomRightX, T bottomRightY)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RectangularROI</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>a5a893312ba548fbf25f9bf272348f0c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; T &gt;</type>
      <name>GetTopLeftCorner</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>ac0779792a760de522c03ff277f754c17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; T &gt;</type>
      <name>GetBottomRightCorner</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>a6384bf40f547ebefd1b8b155deb61223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point&lt; T &gt;</type>
      <name>GetCenter</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>a82d27a2b21b3810ec253483a78ed02b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInROI</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>a08ac9ed616e2cf52a85d682b247391d1</anchor>
      <arglist>(Point&lt; T &gt; candidatePoint)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetWidth</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>ae9b04b138096465a9eba9a43b4b02afc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetHeight</name>
      <anchorfile>classstira_1_1common_1_1RectangularROI.html</anchorfile>
      <anchor>a6e381a854c4495cebfe2636214a016f1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::Statistics</name>
    <filename>classstira_1_1common_1_1Statistics.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Statistics</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>a376c3d4173fe4712a4ea21b7677d82b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetAverage</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>a0603411927f0be01db327c87f7d32eaa</anchor>
      <arglist>(T *pData, int nrElements)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetVariance</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>a356e0d394b212b14abe711f8d028bbf2</anchor>
      <arglist>(T *pData, int nrElements)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetVariance</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>a7b4b7afe2b416a169826b2c9f46bbd72</anchor>
      <arglist>(T *pData, int nrElements, double average)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetAverage</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>a7d494a97f5d1b986785aa7074899b938</anchor>
      <arglist>(std::vector&lt; T &gt; vData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetVariance</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>a8194aa8c5ba1fae554e3aa947fc0dc31</anchor>
      <arglist>(std::vector&lt; T &gt; vData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetVariance</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>a59998b8e4adae13155735b48daf58b7d</anchor>
      <arglist>(std::vector&lt; T &gt; vData, double average)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetCorrelation</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>a5fcb7c844995dcc9ec17378a8ea65b84</anchor>
      <arglist>(std::vector&lt; double &gt; vData1, std::vector&lt; double &gt; vData2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetCorrelation</name>
      <anchorfile>classstira_1_1common_1_1Statistics.html</anchorfile>
      <anchor>aaa954aa4cce036dcec407d3caafa6cb7</anchor>
      <arglist>(double *pData1, double *pData2, int nrElements)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::StringUtils</name>
    <filename>classstira_1_1common_1_1StringUtils.html</filename>
    <member kind="function">
      <type></type>
      <name>StringUtils</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a6761c9afec7ae7b11a911a72357d192f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringUtils</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a4d5f754d4be144d9d99619d091cb0a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ExtractFileNameRoot</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a72dcf1781dc8ed244591edb1875872c8</anchor>
      <arglist>(std::string inputString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetIndexFromFileName</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>aa29617aa68b0fc39bc0b1bea9665c153</anchor>
      <arglist>(std::string inputString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>FindFileNameInListFromIndex</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>aa70fe37c3d5f2aab94dbf4d7767e7712</anchor>
      <arglist>(int myIndex, std::vector&lt; std::string &gt; fileList)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>FindFirstDot</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a709be270ab841c41f1cdf760efec3ab5</anchor>
      <arglist>(std::string inputString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>FindLastSlash</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a477c5cfd69898f51770970103f8c1e2e</anchor>
      <arglist>(std::string inputString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>FindLastUnderscore</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a4308de0eaa84621c9704ed7921a6cb13</anchor>
      <arglist>(std::string inputString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ExtractFileExtension</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a051de1341ee345f458ed4580d8d63aaf</anchor>
      <arglist>(std::string inputString, bool includeDot=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ExtractPathOfFileName</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a98e46a78196ac706c4cead8e177f5e53</anchor>
      <arglist>(std::string inputString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GoOneLevelUpInPathName</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a35bf0d089d9c4324cfbcb3ae80c89240</anchor>
      <arglist>(std::string inputString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ConstructFileName</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>ac4adbefc3475fae704b08a051c897362</anchor>
      <arglist>(std::string preFix, int indexNr, std::string extension)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ConstructPathAndFileName</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>aa4766d0b9f40cbade80bd65249f0094a</anchor>
      <arglist>(std::string path, std::string preFix, int indexNr, std::string extension)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ConstructPathAndFileName</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a9eab8f97638a51e1ca2acf4242944733</anchor>
      <arglist>(std::string path, std::string preFix, int indexNr1, int indexNr2, std::string extension)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsDigit</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a568f4421f0b1c2b9b2bf6e8f222e6f67</anchor>
      <arglist>(std::string s, long int &amp;myDigit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SplitStringInIntegers</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>a1b4946f570ea059d4cd7229cfed90fd0</anchor>
      <arglist>(const std::string &amp;s, char c, std::vector&lt; int &gt; &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetCurrentTimeAsStringID</name>
      <anchorfile>classstira_1_1common_1_1StringUtils.html</anchorfile>
      <anchor>ae039698540a5ef9c00fe8804848eebf9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::common::TextFileUtils</name>
    <filename>classstira_1_1common_1_1TextFileUtils.html</filename>
    <member kind="function">
      <type></type>
      <name>TextFileUtils</name>
      <anchorfile>classstira_1_1common_1_1TextFileUtils.html</anchorfile>
      <anchor>ae2d4230edd496bfce78402f54f20362b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextFileUtils</name>
      <anchorfile>classstira_1_1common_1_1TextFileUtils.html</anchorfile>
      <anchor>aca3498f01d7473ba534779e57a170ef3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>FilterText</name>
      <anchorfile>classstira_1_1common_1_1TextFileUtils.html</anchorfile>
      <anchor>ab967f2e33854c08bec0216785e188a16</anchor>
      <arglist>(std::string inFileName, std::string outFileName, int *pFilterValues, int filterLength, int nrColumnsToFilter, int nrOtherColumns)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SaveVectorOfValuesToTextFile</name>
      <anchorfile>classstira_1_1common_1_1TextFileUtils.html</anchorfile>
      <anchor>a89c52747a78154f87d08fe78cba85548</anchor>
      <arglist>(std::vector&lt; double &gt; inVector, std::string outFileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SaveVectorOfIntensityPointsToTextFile</name>
      <anchorfile>classstira_1_1common_1_1TextFileUtils.html</anchorfile>
      <anchor>a7fb9bab4ab0ff4c48b82bc4c63614e35</anchor>
      <arglist>(std::vector&lt; common::IntensityPoint &gt; inVector, std::string outFileName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::contrastenhance::AdaptiveEnhanceLuong</name>
    <filename>classstira_1_1contrastenhance_1_1AdaptiveEnhanceLuong.html</filename>
    <member kind="function">
      <type></type>
      <name>AdaptiveEnhanceLuong</name>
      <anchorfile>classstira_1_1contrastenhance_1_1AdaptiveEnhanceLuong.html</anchorfile>
      <anchor>ad9854cc0644c6c109e3d8e9489cd843f</anchor>
      <arglist>(int windowSize=9)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AdaptiveEnhanceLuong</name>
      <anchorfile>classstira_1_1contrastenhance_1_1AdaptiveEnhanceLuong.html</anchorfile>
      <anchor>abd28fcd6aa15f786a43dd17593f92a04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1contrastenhance_1_1AdaptiveEnhanceLuong.html</anchorfile>
      <anchor>a24b1c1a0cdff0d24c94056bc4117d421</anchor>
      <arglist>(image::Image *pSourceImage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAlphaFactor</name>
      <anchorfile>classstira_1_1contrastenhance_1_1AdaptiveEnhanceLuong.html</anchorfile>
      <anchor>ad2495d8992996895cc4b46f7fbe0e31e</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWindowSize</name>
      <anchorfile>classstira_1_1contrastenhance_1_1AdaptiveEnhanceLuong.html</anchorfile>
      <anchor>a45641fd353abef3ebaa8eef7ff88bbcf</anchor>
      <arglist>(int size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::contrastenhance::HazeRemover</name>
    <filename>classstira_1_1contrastenhance_1_1HazeRemover.html</filename>
    <member kind="function">
      <type></type>
      <name>HazeRemover</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HazeRemover.html</anchorfile>
      <anchor>ae1340173809db5b688201235d317924d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HazeRemover</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HazeRemover.html</anchorfile>
      <anchor>a3933fa187f1c312d8dc785be847d09d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HazeRemover.html</anchorfile>
      <anchor>a95bce35e7a7d9ad1ed1c08160647f616</anchor>
      <arglist>(image::Image *pImage)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::contrastenhance::HistogramEqualize</name>
    <filename>classstira_1_1contrastenhance_1_1HistogramEqualize.html</filename>
    <member kind="function">
      <type></type>
      <name>HistogramEqualize</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HistogramEqualize.html</anchorfile>
      <anchor>a2a5665017b0b3b986eae7c990942683d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HistogramEqualize</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HistogramEqualize.html</anchorfile>
      <anchor>ae97c8a2eae1b476177e453cee82e43d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RobustLinearRescale</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HistogramEqualize.html</anchorfile>
      <anchor>a121c460780681aedb8de0aecfb40862d</anchor>
      <arglist>(image::Image *pSourceImage, double lowerFraction=0.01, double upperFraction=0.99)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>RobustLinearRescaleNoNew</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HistogramEqualize.html</anchorfile>
      <anchor>ac39c7e7c7016558bd45f239276643445</anchor>
      <arglist>(image::Image *pSourceImage, double lowerFraction=0.01, double upperFraction=0.99)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>HistogramEqualizeSingleBand</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HistogramEqualize.html</anchorfile>
      <anchor>aadda0a6b51e11d681a8a977c7d5cdae4</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInOutGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>HistogramEqualizePerBand</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HistogramEqualize.html</anchorfile>
      <anchor>a8a64109295efeb76e76c4eed693f312e</anchor>
      <arglist>(image::Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>HistogramEqualizeHSI</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HistogramEqualize.html</anchorfile>
      <anchor>a318b04fa4df7877cf5ae898bdd2c70b6</anchor>
      <arglist>(image::Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>ColorHistogramEqualize</name>
      <anchorfile>classstira_1_1contrastenhance_1_1HistogramEqualize.html</anchorfile>
      <anchor>a409193969a33789bedc7909817bd28c5</anchor>
      <arglist>(image::Image *pInImage)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::contrastenhance::Retinex</name>
    <filename>classstira_1_1contrastenhance_1_1Retinex.html</filename>
    <member kind="function">
      <type></type>
      <name>Retinex</name>
      <anchorfile>classstira_1_1contrastenhance_1_1Retinex.html</anchorfile>
      <anchor>a3530acb0f787e789e02e4c3a5f799121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Retinex</name>
      <anchorfile>classstira_1_1contrastenhance_1_1Retinex.html</anchorfile>
      <anchor>a09f389dab67f3241ab317fd8f6431707</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunMSRCR</name>
      <anchorfile>classstira_1_1contrastenhance_1_1Retinex.html</anchorfile>
      <anchor>a71c0f7611ac39ecaa1329604415e3647</anchor>
      <arglist>(image::Image *pSourceImage, double lowerFraction, double upperFraction, bool applyColorCorrection=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>RunMSR</name>
      <anchorfile>classstira_1_1contrastenhance_1_1Retinex.html</anchorfile>
      <anchor>a38c06a7ee054f155928d961612168377</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInGrid, double lowerFraction, double upperFraction)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::deconvolve::DeconvolveMaster</name>
    <filename>classstira_1_1deconvolve_1_1DeconvolveMaster.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Run</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>afa54334f994ea17b96fd6aa26445f6e0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>GetDegradedImage</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a405308467a3a1ad59353aa7f21c00897</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDegradedImage</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a05661b061b08489db79108650e5fc94b</anchor>
      <arglist>(image::Image *pDegradedImage)</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>GetPSF</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>ae7640b8eed5d3e4cfa9c6d5d7d472306</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPSF</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a279bcbe7008bfde76dfd8ec80d78190d</anchor>
      <arglist>(image::Image *pPSF)</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>GetRestoredImage</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a8d679c85d8e8abb963456b874c0ae8ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSigmaNoise</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a0acdfcd0a31b6c67fb50cda1ac5794d7</anchor>
      <arglist>(double sigma)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSigmaNoise</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>ae1b7381bb06a67448f33eaa61ce5ee69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsReadyToRun</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>af585d8a812c717c357adafc9539ada72</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DeconvolveMaster</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a523a3260eb838d081f77723e21e25bbb</anchor>
      <arglist>(image::Image *pDegradedImage)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DeconvolveMaster</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a21ba4b9626235885f7d96e999b6590e7</anchor>
      <arglist>(image::Image *pDegradedImage, image::Image *pPSF)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~DeconvolveMaster</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>aba058adbdf529f8f0017e6c2b7c10e4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AreParentConditionsOK</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a73e30b7d9eb3b3efbfbca83e3c4b3b70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::Image *</type>
      <name>mpDegradedImage</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a82684cb9e835c26a793c142f5842ca7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::Image *</type>
      <name>mpRestoredImage</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a94e86bc8a1c0656aa6575724c16bb1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::Image *</type>
      <name>mpPSF</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>a4a3793831bc9bf4e9691903924979c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mSigmaNoise</name>
      <anchorfile>classstira_1_1deconvolve_1_1DeconvolveMaster.html</anchorfile>
      <anchor>af458b824cfcc3b0aa8abf3c699dafde9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::deconvolve::GNCDeconvolve</name>
    <filename>classstira_1_1deconvolve_1_1GNCDeconvolve.html</filename>
    <base>stira::deconvolve::IterativeDeconvolve</base>
    <member kind="function">
      <type></type>
      <name>GNCDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a5a89512cad853079827544961dfff44a</anchor>
      <arglist>(image::Image *pDegradedImage, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GNCDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a66299d87c311108f656e0f6386072d63</anchor>
      <arglist>(image::Image *pDegradedImage, image::Image *pPSF, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GNCDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>ad0fe2ad0a101570b69e3ea68615cae5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Run</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a1f1cd0add4b8ed2a8b3a8c9fecba93bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintParameters</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>ae0158336a6308c493d2d8917fe72ac3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitializeParameters</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>aec0d262ee8d8707d2794d0662817afbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfScales</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>ac89cbd206a499837d576afce7b1fccb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberOfScales</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a6a3e7781b89198f55f6e6dc3f97ea451</anchor>
      <arglist>(int nrScales)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfOrientations</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a9bbaf4f1eba8cbdd355e4cb1431b7a5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumberOfOrientations</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a48a6e2abf3a401a46ec90a4cbffa901f</anchor>
      <arglist>(int nrOrientations)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMu</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a0f639cc22a4309bc3dd1c2bafd22ee48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMu</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>ace73c3d336ce2a4fc70343b4fb44fce9</anchor>
      <arglist>(double newMu)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetLambda</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a7815399b38ed9434b26669514b859ee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLambda</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a7fe4ca51b56c5ef349eda69374a50754</anchor>
      <arglist>(double newLambda)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetGamma</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>adfcdb25484c0a8f5b0990fce82e5780d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGamma</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>abd28587026e539e622a64655effd5027</anchor>
      <arglist>(double newGamma)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetGammaFinal</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>ad4782cab514dca214e5d09a170aa55f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGammaFinal</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a4f68be75a696c7e6dffa7064cb09d43b</anchor>
      <arglist>(double newGammaFinal)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetUpdateFactor</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a45a78bbfae4b41b0f81b54624ee6aad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpdateFactor</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>aa774783971a4a26a494396943d07af6e</anchor>
      <arglist>(double newFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMSEDifferenceThreshold</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>a44457e3f56f72bec7136f26f5f99d3a7</anchor>
      <arglist>(double myThreshold)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMSEDifferenceThreshold</name>
      <anchorfile>classstira_1_1deconvolve_1_1GNCDeconvolve.html</anchorfile>
      <anchor>af7c4e72a042de0fa2552988851fd883a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::deconvolve::IterativeDeconvolve</name>
    <filename>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</filename>
    <base>stira::deconvolve::DeconvolveMaster</base>
    <member kind="function">
      <type>void</type>
      <name>SetLambda</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ab710c93455c23774638db47f89b068f8</anchor>
      <arglist>(double lambda)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetLambda</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a267089333478d012085cac9172bbdf40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStepSize</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a94f2654b8964fc840d8b1e4bb74d537b</anchor>
      <arglist>(double stepSize)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetStepSize</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ac43b37d35436bcbf3f6d02e292f28525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaximumNrOfIterations</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a20e9840663d73c8048217fd1d94c7c88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaximumNrOfIterations</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a5cf8137c95e694221cc08811d5eb6176</anchor>
      <arglist>(int nrIter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IterativeDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a0719b5091f078555b0d7f02c3099b66b</anchor>
      <arglist>(image::Image *pDegradedImage, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IterativeDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a3dba088cdc7ac49fdca7e262dfb2931b</anchor>
      <arglist>(image::Image *pDegradedImage, image::Image *pPSF, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~IterativeDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a50847628ffdbba558552767e577a08ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a525b99380fca951bdc062c665e3b943a</anchor>
      <arglist>(int maxNrOfIterations)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>PrepareCurrentGrids</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a2de16c78babcea3503a8c0b521a35504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>RunSingleIterationSingleBand</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a9af02212e86aa09f70ddec605cc81229</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::Image *</type>
      <name>mpLastEstimate</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ae237f8385f5d98522f199493f41181f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::Image *</type>
      <name>mpNewEstimate</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ac9c614bb3e7ec7b95fdc9bbcc54fb0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mLambda</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ae28d76b410d2e40d71ff70cfdcfe82f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mStepSize</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a0a7da6e73c669dc5e20bcc3a4db25c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mCurrentIterationNr</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ac90a25eca04cb876fcf03b61d9a0fb5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mCurrentBandNr</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ace005ec0c57861861871d54bb741516d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mMaximumNrOfIterations</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a1cd9464d5315e3dcfec46864d1822c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpDegradedGrid</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>af4091b5ce067e994269e40559d1547c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpLastGrid</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ab97cce3f6d594e20774f4abc3c9a4710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpNewGrid</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>a6bccf244d251cd9049c34731864111ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpPSFGrid</name>
      <anchorfile>classstira_1_1deconvolve_1_1IterativeDeconvolve.html</anchorfile>
      <anchor>ad0a2d97d9425e0e3f8799908675a49ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::deconvolve::RichardsonLucyDeconvolve</name>
    <filename>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</filename>
    <base>stira::deconvolve::IterativeDeconvolve</base>
    <member kind="function">
      <type></type>
      <name>RichardsonLucyDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>a33606e259578bba314fee33da5e3a5fc</anchor>
      <arglist>(image::Image *pDegradedImage, regularizationType myRegularizationType=REGULARIZE_NONE, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RichardsonLucyDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>a0556b56bf3515f887c058b9d8b67d3ef</anchor>
      <arglist>(image::Image *pDegradedImage, image::Image *pPSF, regularizationType myRegularizationType=REGULARIZE_NONE, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RichardsonLucyDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>a5b1cf61e3f7171d89f4e2ef3d3b3503f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Run</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>ac40013072d1e3317773289e25c7c06f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>regularizationType</type>
      <name>GetRegularizationType</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>a72ce3d9073d5277aa18ede523263cef3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRegularizationType</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>ad0b53f16b25117f032d70c4bd9a56b17</anchor>
      <arglist>(regularizationType myType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEnforceIntensityRange</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>a96f11ae4a5e6f86fdbaf64ebc932f154</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEnforceIntensityRange</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>a10c8657dbbca2b76b72706e3b6ddb918</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintParameters</name>
      <anchorfile>classstira_1_1deconvolve_1_1RichardsonLucyDeconvolve.html</anchorfile>
      <anchor>a0cfba68ec52e2e36b46af462a937cd26</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::deconvolve::SimulateDegradation</name>
    <filename>classstira_1_1deconvolve_1_1SimulateDegradation.html</filename>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GeneratePSF</name>
      <anchorfile>classstira_1_1deconvolve_1_1SimulateDegradation.html</anchorfile>
      <anchor>ad43cfeffaa30fb0b398079a83ce0c429</anchor>
      <arglist>(int width, int height, BlurType myBlurType, std::vector&lt; double &gt; vBlurParameters)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SimulateNoise</name>
      <anchorfile>classstira_1_1deconvolve_1_1SimulateDegradation.html</anchorfile>
      <anchor>aa3da1c09127d05e3625b7d2ce05aaac6</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, NoiseType myNoiseType, double noiseLevel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1deconvolve_1_1SimulateDegradation.html</anchorfile>
      <anchor>a7029ca2f87e33a3380087e1f0f28af8d</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, NoiseType myNoiseType, double noiseLevel, BlurType myBlurType, std::vector&lt; double &gt; vBlurParameters)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1deconvolve_1_1SimulateDegradation.html</anchorfile>
      <anchor>a8108f31e810e6c08fd3f258dac253710</anchor>
      <arglist>(image::Image *pImageIn, NoiseType myNoiseType, double noiseLevel, BlurType myBlurType, std::vector&lt; double &gt; vBlurParameters)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::deconvolve::TikhonovMillerDeconvolve</name>
    <filename>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</filename>
    <base>stira::deconvolve::IterativeDeconvolve</base>
    <member kind="function">
      <type></type>
      <name>TikhonovMillerDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</anchorfile>
      <anchor>a8329dcedbf775f809ffa0b7f9a5bda17</anchor>
      <arglist>(image::Image *pDegradedImage, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TikhonovMillerDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</anchorfile>
      <anchor>a650b3905aec32add9fbf6ec531d12e3f</anchor>
      <arglist>(image::Image *pDegradedImage, image::Image *pPSF, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TikhonovMillerDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</anchorfile>
      <anchor>a86e2f0db9668a7205fe7cace24dc4c3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEnforcePositivity</name>
      <anchorfile>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</anchorfile>
      <anchor>a89aab84fa31773908e77236e9916abd3</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEnforcePositivity</name>
      <anchorfile>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</anchorfile>
      <anchor>ab3f61bbb62c12be8a676167ff78ba32d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Run</name>
      <anchorfile>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</anchorfile>
      <anchor>a6a86ddd4ad857537fb01c46dd90c71cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintParameters</name>
      <anchorfile>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</anchorfile>
      <anchor>a2bad7ed5a58d9adacc0ad2692c8e4430</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ICTM_filter</name>
      <anchorfile>classstira_1_1deconvolve_1_1TikhonovMillerDeconvolve.html</anchorfile>
      <anchor>a03b19734ae6290828d8806c7e2768034</anchor>
      <arglist>(int nrIterations, image::ArrayGrid&lt; double &gt; *pData, image::ArrayGrid&lt; double &gt; *pPsf)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::deconvolve::VanCittertLandweberDeconvolve</name>
    <filename>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</filename>
    <base>stira::deconvolve::IterativeDeconvolve</base>
    <member kind="function">
      <type></type>
      <name>VanCittertLandweberDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>ab84db4cecb34d88ff2a8c1e4bf36943c</anchor>
      <arglist>(image::Image *pDegradedImage, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VanCittertLandweberDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>ae143efbb2dd9a88d3c0edbaddc111740</anchor>
      <arglist>(image::Image *pDegradedImage, image::Image *pPSF, int maxNrOfIterations=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VanCittertLandweberDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>a3615a4895497dde2f018ed6659696b62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEnforcePositivity</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>a8f05c1501606ffcb6455d503fb86a311</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEnforcePositivity</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>aa73b734a56c4bef780acb5a1934c8d3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>deconvolutionType</type>
      <name>GetDeconvolutionType</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>a5cb1eb0b744aeb566d1c0b1f65c42b88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeconvolutionType</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>ac6fb093d8f9dc0d0c21ec10435bc2365</anchor>
      <arglist>(deconvolutionType myType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Run</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>a54edb146226dc24504b9da22324506fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintParameters</name>
      <anchorfile>classstira_1_1deconvolve_1_1VanCittertLandweberDeconvolve.html</anchorfile>
      <anchor>addce021420dcfe82961039abb10848ad</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::deconvolve::WienerDeconvolve</name>
    <filename>classstira_1_1deconvolve_1_1WienerDeconvolve.html</filename>
    <base>stira::deconvolve::DeconvolveMaster</base>
    <member kind="function">
      <type></type>
      <name>WienerDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1WienerDeconvolve.html</anchorfile>
      <anchor>ae46b33068efb242cd55c0ac195a51ba3</anchor>
      <arglist>(image::Image *pDegradedImage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WienerDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1WienerDeconvolve.html</anchorfile>
      <anchor>a94b1307b644d195fe24fb912d3c5d6ca</anchor>
      <arglist>(image::Image *pDegradedImage, image::Image *pPSF)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WienerDeconvolve</name>
      <anchorfile>classstira_1_1deconvolve_1_1WienerDeconvolve.html</anchorfile>
      <anchor>a1ec844bb7ce518b999cc372914e0e2b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Run</name>
      <anchorfile>classstira_1_1deconvolve_1_1WienerDeconvolve.html</anchorfile>
      <anchor>a6b985a0d13e1b41919298f635823e38b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>RunSingleband</name>
      <anchorfile>classstira_1_1deconvolve_1_1WienerDeconvolve.html</anchorfile>
      <anchor>a1a446af4a58c849665319c3ca12283df</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInGrid, image::ArrayGrid&lt; double &gt; *pInPSF, double noiseLevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::degradationestimation::BlurEstimator</name>
    <filename>classstira_1_1degradationestimation_1_1BlurEstimator.html</filename>
    <member kind="function">
      <type></type>
      <name>BlurEstimator</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a8c9066b31ee534a306ffe997642566ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BlurEstimator</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a4ffacd86813e896d8d0cfdbec0abf13b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Run</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a896f53a0d1fd1d8fbfdb5e50d20a9c08</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetBlurUnderLimit</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a0b0e8706039097d70c5f10ca899f7dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBlurUnderLimit</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a5b18b7c11d3ff125debb05c3d2f4beda</anchor>
      <arglist>(double underLimit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetBlurUpperLimit</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>ae98db0df4ca34c2e8a25c3b6393e4862</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBlurUpperLimit</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a013e273e5ed1c1583bda7b988fe6c099</anchor>
      <arglist>(double upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetStepSize</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a008e30e1c11ce17fe52c2ec844843083</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStepSize</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a8784790c284a8f0d93f74ab159b2bea1</anchor>
      <arglist>(double stepSize)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetNoiseLevel</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>a234af008e2b8aa94f546511e8e78367f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoiseLevel</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimator.html</anchorfile>
      <anchor>ad1f3944a71d1a45137f9b70409e16918</anchor>
      <arglist>(double noiseLevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::degradationestimation::BlurEstimatorHu</name>
    <filename>classstira_1_1degradationestimation_1_1BlurEstimatorHu.html</filename>
    <member kind="function">
      <type></type>
      <name>BlurEstimatorHu</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimatorHu.html</anchorfile>
      <anchor>af4079cf1d7e34d02a7b15c616296bd27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BlurEstimatorHu</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimatorHu.html</anchorfile>
      <anchor>a9efdb487d594b5553d3efafa07833571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSigmaA</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimatorHu.html</anchorfile>
      <anchor>a29da5589ca5c38ec5c2c259277542ca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSigmaA</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimatorHu.html</anchorfile>
      <anchor>a95c1b0998e642a4ec722c641d38d6d8a</anchor>
      <arglist>(double sigmaA)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSigmaB</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimatorHu.html</anchorfile>
      <anchor>a8ed7c53db1802c220eb7cc564568f520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSigmaB</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimatorHu.html</anchorfile>
      <anchor>aaf13137e00421c446a3b48a3d1374cc8</anchor>
      <arglist>(double sigmaB)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Run</name>
      <anchorfile>classstira_1_1degradationestimation_1_1BlurEstimatorHu.html</anchorfile>
      <anchor>aa9124e09d539acf3a9204067769a66e9</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::degradationestimation::CompareSmoothSharpDijk</name>
    <filename>classstira_1_1degradationestimation_1_1CompareSmoothSharpDijk.html</filename>
    <member kind="function">
      <type></type>
      <name>CompareSmoothSharpDijk</name>
      <anchorfile>classstira_1_1degradationestimation_1_1CompareSmoothSharpDijk.html</anchorfile>
      <anchor>a31d2ade07685473daf4c0790abe26c97</anchor>
      <arglist>(image::Image *pImage1, image::Image *pImage2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Run</name>
      <anchorfile>classstira_1_1degradationestimation_1_1CompareSmoothSharpDijk.html</anchorfile>
      <anchor>a68cb9153a6cc87f11fd35eed446c6fbc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::diffusion::AnisotropicDiffusion</name>
    <filename>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</filename>
    <member kind="function">
      <type></type>
      <name>AnisotropicDiffusion</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>afeadc660db3c76917cc8f2d9af102f22</anchor>
      <arglist>(image::Image *pSourceImage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AnisotropicDiffusion</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>a4a95a9344a89158aeb0c0f6ddaadf34d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlowFactor</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>af19d8a0da8f203831b8371e09d98ad0f</anchor>
      <arglist>(double fc)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetFlowFactor</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>a56aaf46a82060073d0091c81823820eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeltaT</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>a27133af9de270a791e34514bef6e2589</anchor>
      <arglist>(double dt)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDeltaT</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>a6e561dba6d40e60de9bf75454aa46f64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxNumberOfIterations</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>a87d8a02fd369710bc54eebf468f13baf</anchor>
      <arglist>(int maxnr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxNumberOfIterations</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>a8d66dbed99580597f54da41f5869b205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1diffusion_1_1AnisotropicDiffusion.html</anchorfile>
      <anchor>af25d98f468e4d7ee497591111dec0486</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::AdaptiveBilateralFilter</name>
    <filename>classstira_1_1filter_1_1AdaptiveBilateralFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>AdaptiveBilateralFilter</name>
      <anchorfile>classstira_1_1filter_1_1AdaptiveBilateralFilter.html</anchorfile>
      <anchor>afb76146693d9becdaa02634afed6747f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AdaptiveBilateralFilter</name>
      <anchorfile>classstira_1_1filter_1_1AdaptiveBilateralFilter.html</anchorfile>
      <anchor>a88d38c0b68e7679658cf40077bacdcaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1AdaptiveBilateralFilter.html</anchorfile>
      <anchor>a14876f0767d070a55559a0d8513f2c76</anchor>
      <arglist>(image::Image *pImage)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::AnisotropicGaussian</name>
    <filename>classstira_1_1filter_1_1AnisotropicGaussian.html</filename>
    <member kind="function">
      <type></type>
      <name>AnisotropicGaussian</name>
      <anchorfile>classstira_1_1filter_1_1AnisotropicGaussian.html</anchorfile>
      <anchor>a33f09346aeb5d722bba124974b9751ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AnisotropicGaussian</name>
      <anchorfile>classstira_1_1filter_1_1AnisotropicGaussian.html</anchorfile>
      <anchor>ab9264720d6162286bf7c759432d312ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1AnisotropicGaussian.html</anchorfile>
      <anchor>ac1924e0c8f7a4967c4a59931a52840a4</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pInput, double sigmav, double sigmau, double theta, int orderv, int orderu)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ComputeFilterCoefficients</name>
      <anchorfile>classstira_1_1filter_1_1AnisotropicGaussian.html</anchorfile>
      <anchor>af533f99de79e550a4f138e219171cd04</anchor>
      <arglist>(double *pFilterX, double *pFilterTanp, double sigmav, double sigmau, double phi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RunLean</name>
      <anchorfile>classstira_1_1filter_1_1AnisotropicGaussian.html</anchorfile>
      <anchor>a417ab32349a25d72c8457fa4ec1bbefe</anchor>
      <arglist>(double *pInput, double *pOutput, int width, int height, double *pFilterX, double *pFilterTanp, double phi, int orderv, int orderu, double tanp)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::ColorLookupTable</name>
    <filename>classstira_1_1filter_1_1ColorLookupTable.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>mLUT_R_last</name>
      <anchorfile>classstira_1_1filter_1_1ColorLookupTable.html</anchorfile>
      <anchor>a698a752dd28b7789f5c21f9b59fab8f9</anchor>
      <arglist>[4096][3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::DifferenceOfGaussians</name>
    <filename>classstira_1_1filter_1_1DifferenceOfGaussians.html</filename>
    <member kind="function">
      <type></type>
      <name>DifferenceOfGaussians</name>
      <anchorfile>classstira_1_1filter_1_1DifferenceOfGaussians.html</anchorfile>
      <anchor>a9396fbe48d29bbc7b3c6129487b58a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DifferenceOfGaussians</name>
      <anchorfile>classstira_1_1filter_1_1DifferenceOfGaussians.html</anchorfile>
      <anchor>a813d47f4a659bc0a47d8707f84fa04e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1DifferenceOfGaussians.html</anchorfile>
      <anchor>af9beaab04ccb817ac690d1452fbf2488</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, double sigmaX1, double sigmaY1, double sigmaX2, double sigmaY2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1DifferenceOfGaussians.html</anchorfile>
      <anchor>adc2722dcd93b0551ea8295bffcfbe47a</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, double sigmaX1, double sigmaX2, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1DifferenceOfGaussians.html</anchorfile>
      <anchor>a9e06c7cda321381829b2ed6e46264d6a</anchor>
      <arglist>(image::Image *pImageIn, double sigmaX1, double sigmaY1, double sigmaX2, double sigmaY2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1DifferenceOfGaussians.html</anchorfile>
      <anchor>aa2b6df183a4ad0e111538da22eb04bc5</anchor>
      <arglist>(image::Image *pImageIn, double sigmaX1, double sigmaX2, double sigmaY)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::GaussConvolve</name>
    <filename>classstira_1_1filter_1_1GaussConvolve.html</filename>
    <member kind="enumeration">
      <name>FilterType</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a31ffc0e80910f9f3888d621483374b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DerivativeType</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>af80aa2eea419506a7be13ef19ed02fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GaussConvolve</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>ad4694ac2ab86f3c5f2a3fc9582aa8670</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GaussConvolve</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>aaa6b2ecea5b96392fdf4bfc90b2e1991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>CreateBlurredBars</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a550e1805ca00f5bdc2d10a5da68b251f</anchor>
      <arglist>(int width, int height, int barWidth, double sigmaBlurMax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>Convolve</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a7226f3bad34dfb4e06299d33b67b5379</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pImage, double sigma, FilterType myType=FFT_BASED)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Convolve</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>ae4708ac5efc43e869a8b03fc4002c12a</anchor>
      <arglist>(image::Image *pImage, double sigma, FilterType myType=FFT_BASED)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>DerivativeConvolveFFT</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a2b148cb3d95b0b9a68d8472b53c785b3</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, double sigmaX, double sigmaY, DerivativeType myType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>DerivativeConvolveSeparable</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>aef4e244911dd0e4427d033e7c8206209</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, double sigma, DerivativeType myType, image::GridExtender&lt; double &gt;::ExtensionType myExtensionType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>ConvolveSeparable</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a6943c2d4db4e92cba3b75c2fa8404afd</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>DerivativeConvolveFFT</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a1f4def97dbdac7051904abb37643d06c</anchor>
      <arglist>(image::Image *pImageIn, double sigma, DerivativeType myType, image::GridExtender&lt; double &gt;::ExtensionType myExtensionType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>DerivativeConvolveSeparable</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a338c283aba70d903860f99dc476407a9</anchor>
      <arglist>(image::Image *pImageIn, double sigma, DerivativeType myType, image::GridExtender&lt; double &gt;::ExtensionType myExtensionType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>ConvolveSeparable</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a189f04c9533d2e6ea08c5e688924b326</anchor>
      <arglist>(image::Image *pImageIn, double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussianPSF</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a31921381456aa215d169d6af92e5586c</anchor>
      <arglist>(int width, int height, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussianPSF</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a7bdb3627e0ceeab1a356966494251c27</anchor>
      <arglist>(int width, int height, double sigma1, double sigma2, double rho)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>UpsampleGaussianInterpolated</name>
      <anchorfile>classstira_1_1filter_1_1GaussConvolve.html</anchorfile>
      <anchor>a8711be7cfa86f8a6de2f1bd161a6e1fc</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int upscalefactor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::KuwaharaFilter</name>
    <filename>classstira_1_1filter_1_1KuwaharaFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>KuwaharaFilter</name>
      <anchorfile>classstira_1_1filter_1_1KuwaharaFilter.html</anchorfile>
      <anchor>aeed1144feb7bc23b53f1e930a10c710b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KuwaharaFilter</name>
      <anchorfile>classstira_1_1filter_1_1KuwaharaFilter.html</anchorfile>
      <anchor>a86e675cd97ef10cd82434c45444b3659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1KuwaharaFilter.html</anchorfile>
      <anchor>a248b9e3ed336d29566150161e1f26d51</anchor>
      <arglist>(image::Image *pImageIn, int windowSize=5)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetSmallestIndex</name>
      <anchorfile>classstira_1_1filter_1_1KuwaharaFilter.html</anchorfile>
      <anchor>a21df0b6e6973acfcf567a78ebae208ee</anchor>
      <arglist>(double *pArray, int size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::LaplacianOfGaussianFilter</name>
    <filename>classstira_1_1filter_1_1LaplacianOfGaussianFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>LaplacianOfGaussianFilter</name>
      <anchorfile>classstira_1_1filter_1_1LaplacianOfGaussianFilter.html</anchorfile>
      <anchor>a201f2d84f26884694453a4c7759e1644</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LaplacianOfGaussianFilter</name>
      <anchorfile>classstira_1_1filter_1_1LaplacianOfGaussianFilter.html</anchorfile>
      <anchor>a657d08e08eb28d3bef28ac5dd781bc67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1LaplacianOfGaussianFilter.html</anchorfile>
      <anchor>af985e933ff31b3435a1248ac190f82e8</anchor>
      <arglist>(image::Image *pImage, double scaleFactor=1.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::LocalBinaryPattern</name>
    <filename>classstira_1_1filter_1_1LocalBinaryPattern.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalBinaryPattern</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a92714909817d86cd305d7b4595126963</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LocalBinaryPattern</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a533b5b9f4bafb93aa0243c4b983514f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SignComparison</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a3c59acf4881ce10ea598afb0ae84cf41</anchor>
      <arglist>(double a, double b, double threshold, bool myType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ComputePointGLDP</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a66fd12ae1360cc55e8ab43c028bc7ae6</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int x, int y, double threshold, bool myType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ComputePointGLTP</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a4117fd7797a330ff746669ffbcb09369</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int x, int y, double threshold, bool myType)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ComputeJensenShannonDivergenceBetweenImagePatches</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a36346bb9c3c1becfdd2ccb3eb3ae7636</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int frameNr, int xTop1, int yTop1, int xBottom1, int yBottom1, int xTop2, int yTop2, int xBottom2, int yBottom2)</arglist>
    </member>
    <member kind="function">
      <type>histogram::FloatHistogram</type>
      <name>ComputePointLBPSymHistogram</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>ad14f613eab8f7d199f6612e90957c228</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int frameNr, int topX, int topY, int bottomX, int bottomY, double threshold, bool myType)</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; int &gt; *</type>
      <name>ComputeLBPSymImage</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a821db14de7deb842f7e9806242c2f0d3</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, double threshold, bool myType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ComputePointLBPSym</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>ae80dd93ae5b8d5eec4392be8ea550d09</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int x, int y, double threshold, bool myType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunClassic</name>
      <anchorfile>classstira_1_1filter_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a30f56ea5c0b574b9d96662341e8a5565</anchor>
      <arglist>(image::Image *pImageIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::LogGabor</name>
    <filename>classstira_1_1filter_1_1LogGabor.html</filename>
    <member kind="function">
      <type></type>
      <name>LogGabor</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>aceeaa840e26657d0857cfb25f2cc85b7</anchor>
      <arglist>(image::Image *pImage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LogGabor</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>aa9d6ed8e1a726293516c73b4e6237a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetCenterFrequency</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a5372a3e76c9630fe8ad873d3df120059</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCenterFrequency</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>abf22c7c3683badc47e7dace2d5a18bc2</anchor>
      <arglist>(double centerFrequency)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRadialWidth</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a6d23eb83bc53d15377f16dc23eb0db91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRadialWidth</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a363380b9d4dad55d0a51e4ca0ec46ed5</anchor>
      <arglist>(double radialWidth)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetCenterAngle</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>aa0f8e237f6051908d22cd89d346c3f83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCenterAngle</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>aec4c08d6050b9fb62206c211f2d7a1ed</anchor>
      <arglist>(double centerAngle)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAngleSpread</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a155c43d820d10496cd44e881eccb5e3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAngleSpread</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a06244b7ef8c6b4872bfe4d780a7c9615</anchor>
      <arglist>(double angleSpread)</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>GetRealResponse</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>ae562ee81d126199c3379da9089f5bb83</anchor>
      <arglist>(bool rescaleVisualize=true)</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>GetImagResponse</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a51767237753a2e01af6a34f5e0aa888b</anchor>
      <arglist>(bool rescaleVisualize=true)</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>GetTransferFunction</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a3f0072bf1951dd1025bc0c730559dfdf</anchor>
      <arglist>(bool rescaleVisualize=true)</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>GetMagnitude</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a07735ba2228397b98877d1e8bd4ff03a</anchor>
      <arglist>(bool rescaleVisualize=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintParameters</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>a1f7b51873e20fc3c26596b863b79c2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1LogGabor.html</anchorfile>
      <anchor>ac34149289c964909ec46c705110ebad4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::MedianFilter</name>
    <filename>classstira_1_1filter_1_1MedianFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>MedianFilter</name>
      <anchorfile>classstira_1_1filter_1_1MedianFilter.html</anchorfile>
      <anchor>af4f15fde50a9b08d0e8ef9409ff26687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MedianFilter</name>
      <anchorfile>classstira_1_1filter_1_1MedianFilter.html</anchorfile>
      <anchor>ad3afeda2492a105bb547a189f5ceecc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>RunMedian</name>
      <anchorfile>classstira_1_1filter_1_1MedianFilter.html</anchorfile>
      <anchor>a7af78eb49aebc62707783757cb30e212</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; int &gt; *</type>
      <name>RunMedian</name>
      <anchorfile>classstira_1_1filter_1_1MedianFilter.html</anchorfile>
      <anchor>a31698bd01e73967c95ecc18e1f5def12</anchor>
      <arglist>(image::ArrayGrid&lt; int &gt; *pGridIn, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>RunHybridMedian</name>
      <anchorfile>classstira_1_1filter_1_1MedianFilter.html</anchorfile>
      <anchor>a9c5094c893c67193fafdc934ecd9bd74</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunMedian</name>
      <anchorfile>classstira_1_1filter_1_1MedianFilter.html</anchorfile>
      <anchor>a405d2e64ab79f43eb294950d73f916c5</anchor>
      <arglist>(image::Image *pImageIn, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunHybridMedian</name>
      <anchorfile>classstira_1_1filter_1_1MedianFilter.html</anchorfile>
      <anchor>a04c8256d6de0fe5612b372644dfdcc46</anchor>
      <arglist>(image::Image *pImageIn, int size)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::filter::blockMatch</name>
    <filename>structstira_1_1filter_1_1blockMatch.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structstira_1_1filter_1_1blockMatch.html</anchorfile>
      <anchor>afa0fc995b75aa97f10a6cb242b8820e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structstira_1_1filter_1_1blockMatch.html</anchorfile>
      <anchor>ade795e2feba33ee5d26385f27993776a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>distance</name>
      <anchorfile>structstira_1_1filter_1_1blockMatch.html</anchorfile>
      <anchor>a320c03a3fda3291ea8c2a426bbadee17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::NonLocalMeansFilter</name>
    <filename>classstira_1_1filter_1_1NonLocalMeansFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>NonLocalMeansFilter</name>
      <anchorfile>classstira_1_1filter_1_1NonLocalMeansFilter.html</anchorfile>
      <anchor>a0a3185bd606c62997fad23328802be0a</anchor>
      <arglist>(int size=7)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NonLocalMeansFilter</name>
      <anchorfile>classstira_1_1filter_1_1NonLocalMeansFilter.html</anchorfile>
      <anchor>a211eb783698a69aef4e05038faf45aae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBlockSize</name>
      <anchorfile>classstira_1_1filter_1_1NonLocalMeansFilter.html</anchorfile>
      <anchor>a023c6d38d0b1f932eb1832ffe467c3e3</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBlockSize</name>
      <anchorfile>classstira_1_1filter_1_1NonLocalMeansFilter.html</anchorfile>
      <anchor>ac6faccdda39c936654c4685762e682c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSigma</name>
      <anchorfile>classstira_1_1filter_1_1NonLocalMeansFilter.html</anchorfile>
      <anchor>afd144c2cfe2beb3649bdd06770964d11</anchor>
      <arglist>(double sigma)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSigma</name>
      <anchorfile>classstira_1_1filter_1_1NonLocalMeansFilter.html</anchorfile>
      <anchor>adf8515cc815d48b35e46538795d5c042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1NonLocalMeansFilter.html</anchorfile>
      <anchor>a9e768799560b8b24f0dc4db4fbb002bd</anchor>
      <arglist>(image::Image *pImageIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::NonSeparableFilter</name>
    <filename>classstira_1_1filter_1_1NonSeparableFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>NonSeparableFilter</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>a830165d41f84e3f6b44f4124fc4bd717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NonSeparableFilter</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>a8b191c899ce9220f47165cb3a1afc0ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>ae6601a7e32b896108de56d0f415ded10</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInput, double *filterKernel, int filterWidth, int filterHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>RunSobelX</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>aaa42ff3e8bdb4b97dc201770dbb0173e</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInput)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>RunSobelY</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>a57c61775d0afd4f37838121b0b349ee1</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInput)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunSobelX</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>a73c0c8e343bdb68d5a077b3a1bb836f5</anchor>
      <arglist>(image::Image *pInput)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunSobelY</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>ad06ce10ca29e523590d0ed774bd3319a</anchor>
      <arglist>(image::Image *pInput)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::OrientationGrid *</type>
      <name>DetermineLocalMagnitudeAndOrientation</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>af688ba4c586f1008930bea5c5f009f02</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetSobelXKernel</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>ac1e27ea09774a3cacf2206f0a8d130e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetSobelYKernel</name>
      <anchorfile>classstira_1_1filter_1_1NonSeparableFilter.html</anchorfile>
      <anchor>af9bf0964c6ea35096c92550e645134de</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::SeparableFilter</name>
    <filename>classstira_1_1filter_1_1SeparableFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>SeparableFilter</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>a7f003018274bf03f4ee711e825f0a1d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SeparableFilter</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>a7bad6b9dbf50b34c55c31304c02053c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>RunRow</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>a07a3df7c82505ba89b912dadaa1964fb</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInput, image::ArrayGrid&lt; double &gt; *pOutput, double *filtx, int filterLengthX, image::GridExtender&lt; double &gt;::ExtensionType myType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>RunColumn</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>abed1e4595ed4776088be3317347c3435</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputBand, image::ArrayGrid&lt; double &gt; *pOutputBand, double *filty, int filterLengthY, image::GridExtender&lt; double &gt;::ExtensionType myType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>RunRowColumn</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>aa16f8ff049f3d255a32f956f529ac8e5</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInput, double *filterTapX, double *filterTapY, int filterLengthX, int filterLengthY, image::GridExtender&lt; double &gt;::ExtensionType myType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>RunColumnRow</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>a7cc708d1e38d53537bb53f69c9402d12</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInput, double *filterTapX, double *filterTapY, int filterLengthX, int filterLengthY, image::GridExtender&lt; double &gt;::ExtensionType myType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunRowColumn</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>a0a53600a48703ccb3fc53ee07848f0a1</anchor>
      <arglist>(image::Image *pInput, double *filterTapX, double *filterTapY, int filterLengthX, int filterLengthY, image::GridExtender&lt; double &gt;::ExtensionType myType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunColumnRow</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>a7718a9cf8f405dbf97445997245db06b</anchor>
      <arglist>(image::Image *pInput, double *filterTapX, double *filterTapY, int filterLengthX, int filterLengthY, image::GridExtender&lt; double &gt;::ExtensionType myType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BasicFilter1D</name>
      <anchorfile>classstira_1_1filter_1_1SeparableFilter.html</anchorfile>
      <anchor>ab77c7860b47964c43015ef158ca1345e</anchor>
      <arglist>(double *pInputArray1D, double *pFilterKernel, double *pOutputArray1D, int inputLength, int filterLength, image::GridExtender&lt; double &gt;::ExtensionType myType=image::GridExtender&lt; double &gt;::EXTEND_MIRROR)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::filter::UnsharpMask</name>
    <filename>classstira_1_1filter_1_1UnsharpMask.html</filename>
    <member kind="function">
      <type></type>
      <name>UnsharpMask</name>
      <anchorfile>classstira_1_1filter_1_1UnsharpMask.html</anchorfile>
      <anchor>a56eb4d33f64ce65d554f88a398925822</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UnsharpMask</name>
      <anchorfile>classstira_1_1filter_1_1UnsharpMask.html</anchorfile>
      <anchor>a05d1bc20b7004122cca0f73f7c765a51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1filter_1_1UnsharpMask.html</anchorfile>
      <anchor>a1d378b74a22248652c01c3cd825d1d29</anchor>
      <arglist>(image::Image *pImageIn, double sigma=1.0, double factor=0.5)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::fouriertools::FFT</name>
    <filename>classstira_1_1fouriertools_1_1FFT.html</filename>
    <member kind="function">
      <type></type>
      <name>FFT</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>ae787d3775bfb861a5702686499bff52c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FFT</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a6debc10b4432446506ebbe1f8e89db45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *</type>
      <name>CreateComplexGridFromRealGrid</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a0fdbb81959b73fdc06b3f0f02ad2657c</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>CreateRealGridFromComplexGrid</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>ab6b241d456dd5b5188ddbc091e65bc7d</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGridIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>ComputePowerSpectrum</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>acad3118f3cb6ed3dd45b96d35ebcbb19</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>ComputeLogPowerSpectrum</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a9801aa82f39ea7680bbe1b8f1d9a0fe7</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; double &gt;</type>
      <name>ComputeRadiallyAveragedSpectrum</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a44e753a487a27be6429e313c1ef97088</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputImage, int thetaSteps=500)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>Convolve</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a4f280b898ce9296d86c5ad0a2038fed4</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid, image::ArrayGrid&lt; double &gt; *pFilterKernel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>Convolve</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a5dd1e4b19147fa938f0c6bc7178de3fe</anchor>
      <arglist>(image::Image *pInputImage, image::ArrayGrid&lt; double &gt; *pFilterKernel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>GaussConvolve</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a7e0525a3b95b2579b7e35e94f32bde82</anchor>
      <arglist>(image::Image *pInputImage, double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GaussConvolve</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a5b8b0ea03eaaa2457d3d3769b6a2b22a</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid, double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FFTBand *</type>
      <name>ApplyTransferFunction</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>ad8aeef546a3bee259ed545087ddad8bb</anchor>
      <arglist>(FFTBand *pFFTImageData, image::ArrayGrid&lt; double &gt; *transferFunction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FFTBand *</type>
      <name>ApplyTransferFunction</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>abd9962633646ff66debb229af8d728f7</anchor>
      <arglist>(FFTBand *pFFTImageData, FFTBand *transferFunction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FFTBand *</type>
      <name>ApplyTransferFunctionFFT</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a4d1b0f1e78d88ece279a66dc689871b4</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid, image::ArrayGrid&lt; double &gt; *transferFunction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FFTBand *</type>
      <name>ApplyTransferFunctionFFT</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a18abb8cd17c9009f09cf95fcf1c73edb</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid, FFTBand *transferFunction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FFTBand *</type>
      <name>ApplyTransferFunctionFFT</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>aea4504ede201c3a59d079c1531d877eb</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pInputGrid, FFTBand *transferFunction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>ApplyTransferFunctionSpatial</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a5bbe9d359f8802b01815327429b1e831</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid, image::ArrayGrid&lt; double &gt; *transferFunction, FFTDataType myDataType=RE)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; image::ArrayGrid&lt; double &gt; *, image::ArrayGrid&lt; double &gt; * &gt;</type>
      <name>ApplyTransferFunctionSpatialComplex</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>acbdb879605a722cbc1f2fdeb8940bc1c</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid, image::ArrayGrid&lt; double &gt; *transferFunction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>SuppressOuterFrequencies</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>aff556bd469f55f118a387f3d6d8dcc9d</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pInputGrid)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>RescaleGrid</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a64fefc00aefd90ebc5bc451a8e9c54ce</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid, double newMin, double newMax)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>WriteFFTDataToPPM</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFT.html</anchorfile>
      <anchor>a4f77601e59df09ab3f1ac10fa54728e1</anchor>
      <arglist>(FFTBand *pFFTData, FFTDataType myDataType, char *pFileName, double factor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::fouriertools::FFTBand</name>
    <filename>classstira_1_1fouriertools_1_1FFTBand.html</filename>
    <member kind="function">
      <type></type>
      <name>FFTBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a788b346306eee0b04461562fe2e6260b</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid, bool isreal=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FFTBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a99fea602fd4ec67135b328c12fc0878e</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FFTBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a692aef79634cf853dccd5149e7e249a9</anchor>
      <arglist>(int width, int height, std::complex&lt; double &gt; initValue=std::complex&lt; double &gt;(0.0, 0.0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FFTBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a4f32f8c6b9e5444d08e53cce2cc9273a</anchor>
      <arglist>(FFTBand &amp;otherFFTBand)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FFTBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a2c4aa9cb86c0bbbe7df04cc84c631d8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FFTBand *</type>
      <name>Clone</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>acba86c1ce6b5b06847325b4e5da39aa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; double &gt;</type>
      <name>GetValue</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a1f2093270702487911313545f5396c60</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>afa6b7e1024f4e25ab5333f45846e9879</anchor>
      <arglist>(int x, int y, std::complex&lt; double &gt; complexValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>aba6b41096caed089dda2f48f6a1dd0f8</anchor>
      <arglist>(int x, int y, double realValue, double imagValue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetWidth</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>ad80e4f5d532857068f7bc114ede3738d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHeight</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a00728cedfc2850b9dbdd31c6126a2c98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyForwardTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a09c35bdddba8ef4c9fe67bf08cd8b542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyInverseTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a0ef1cc48892b571d62a165950d2c0bc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PointMirrorBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a36be60a77d698304e5b87504a1c18466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>ConvertToRealGrid</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>ab01a0bac58ed2a9ce8ffcdf19ce36aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>ConvertToImaginaryGrid</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a56d2bcccd28a7aff39e1c85f006e5143</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *</type>
      <name>ConvertToComplexGrid</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a4fc79d5c7e79a92d0961cc6d9c0d4b54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExportAbsImage</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a8277b157259a57eaa471d2a1bef6d262</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwitchQuadrants</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a18d711e61eb7d4ccfbdbef837c0f8703</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Conjugate</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a95c78ff5ba955a259a11badc3d62652c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetBandMaximum</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>adb75d103cef2a7f6b842df1a6f0e0c54</anchor>
      <arglist>(FFTDataType type)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetBandMinimum</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>aac1890bb8dfc2c187d84b41de42b673d</anchor>
      <arglist>(FFTDataType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Multiply</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a8844b1748645805ec6be565b26888d76</anchor>
      <arglist>(FFTBand *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Multiply</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>aefac6d2d3fdd8ae27bef23d39e385ab9</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *grid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Multiply</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>ab75293374dab5f08a149e1dfffbe3907</anchor>
      <arglist>(std::complex&lt; double &gt; myFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Multiply</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTBand.html</anchorfile>
      <anchor>a85711ddba5286d35bf4cbf4cf8fb5a88</anchor>
      <arglist>(double myFactor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::fouriertools::FFTCalculator</name>
    <filename>classstira_1_1fouriertools_1_1FFTCalculator.html</filename>
    <member kind="function">
      <type></type>
      <name>FFTCalculator</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>ad8fa5cb0c986a565ab2eea905df5ad79</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pComplexGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FFTCalculator</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>a57f2b8d0de0199325c6d8a83cf56a87f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FFTCalculator</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>a2bd47cb4f05d45c00b712d3b3f7675dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ApplyForwardTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>a99789a2d05e095b72237129e8e44fbfe</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ApplyInverseTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>a47246a485a7e9ab3bdc247d59da26862</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwitchQuadrants</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>a8b8584235eb5a83f0e085fd0bcc853a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwitchQuadrants</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>a74d8d541f4842d13bf63693905279bcf</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGridIn)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>CreateLibData</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>ab4fdad6b10c40499d156f3f6230a0f9d</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGridin)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>CleanLibData</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>a3914ca2dbb6713d4a889f014ed9ff17a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>WriteResultInFFTBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>afdbaeb589bcd01a8b09a61094b20ce0a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *</type>
      <name>mpComplexGrid</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>ac907243d87b1d9ef07bb1a994690ff1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mWidth</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>ae453101bc6c7f3d7ff7b4f2885fe7d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mHeight</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTCalculator.html</anchorfile>
      <anchor>a82b2ad4d7070a971b7c74e223f6705dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::fouriertools::FFTWCalculator</name>
    <filename>classstira_1_1fouriertools_1_1FFTWCalculator.html</filename>
    <base>stira::fouriertools::FFTCalculator</base>
    <member kind="function">
      <type></type>
      <name>FFTWCalculator</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTWCalculator.html</anchorfile>
      <anchor>ab6a61ec24d28aabdda014efc95938442</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pComplexGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FFTWCalculator</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTWCalculator.html</anchorfile>
      <anchor>ae33cba254c0ab8cbc12a7915a6a0aa10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FFTWCalculator</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTWCalculator.html</anchorfile>
      <anchor>a707ef17491ebf19bcdb8ce7f34736697</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ApplyForwardTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTWCalculator.html</anchorfile>
      <anchor>a674d533adee538f9fabb8f4299b10eb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ApplyInverseTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1FFTWCalculator.html</anchorfile>
      <anchor>a34f007c871acc3a6b01c343c9805f73a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::fouriertools::KISSFFTCalculator</name>
    <filename>classstira_1_1fouriertools_1_1KISSFFTCalculator.html</filename>
    <base>stira::fouriertools::FFTCalculator</base>
    <member kind="function">
      <type></type>
      <name>KISSFFTCalculator</name>
      <anchorfile>classstira_1_1fouriertools_1_1KISSFFTCalculator.html</anchorfile>
      <anchor>a347a6c26d1cc1338cf6d36bdcf1acffc</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pComplexGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KISSFFTCalculator</name>
      <anchorfile>classstira_1_1fouriertools_1_1KISSFFTCalculator.html</anchorfile>
      <anchor>aa7f735359c00f8787150d436a919f1a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyForwardTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1KISSFFTCalculator.html</anchorfile>
      <anchor>a25f33449a1f847c54fa6fff08b50814e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyInverseTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1KISSFFTCalculator.html</anchorfile>
      <anchor>a090f2245fbf2e7287ca489696cef4d09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *</type>
      <name>ApplyInverseTransform</name>
      <anchorfile>classstira_1_1fouriertools_1_1KISSFFTCalculator.html</anchorfile>
      <anchor>ab264a8ec2ac1ea2af9041a35248da215</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGridIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::fouriertools::TransferFunctionGenerator</name>
    <filename>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>TransferFunctionGenerator</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>a333429db683153e12fe8bee0b11f4bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransferFunctionGenerator</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>a38d9c3f08614a61a3e901971e967eede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetScaleFactors</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>a0f69bd6308b2a6156a0109fe4055a1f7</anchor>
      <arglist>(int width, int height, double &amp;xFactor, double &amp;yFactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GenerateHighPassTransferFunction</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>a3b1cf202002448ea21bae9c1a30cc640</anchor>
      <arglist>(int width, int height, double x1, double x2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GenerateLowPassTransferFunction</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>a88935685171efeca527b6724c5c35243</anchor>
      <arglist>(int width, int height, double x1, double x2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FFTBand *</type>
      <name>GenerateOrientedTransferFunction</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>ab2b794cfcda94de6471b7e23744e08b5</anchor>
      <arglist>(int width, int height, int orientationIndex, int maxNrOfOrientations, bool isForward, common::NumberMode mode=common::MODE_REAL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>HighFrequencyCrossMask</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>aeca02312ad0dd347efb0fcd4aabbd085</anchor>
      <arglist>(FFTBand *inoutGrid, int nrBands)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GenerateLogRadiusBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>ab8242b4a58385999af592d4d313b9431</anchor>
      <arglist>(int width, int height, double centerFrequency, double bandWidth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussianAngularBand</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>a065c2679d663f0dc5b07123a03118181</anchor>
      <arglist>(int width, int height, double centerAngle, double angleSpread)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GenerateLogGaborBandTransferFunction</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>aed54ab657229b20fd6bf65476c4872d3</anchor>
      <arglist>(int width, int height, double centerFrequency, double radialWidth, double centerAngle, double angleSpread)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>GenerateAxisSuppressTransferFunction</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>ab27461c7280dca12079965308bc06448</anchor>
      <arglist>(int width, int height, int axisWidth, double x1, double x2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>ConvertTransferFunctionToFilterKernel</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>a36d83384f01ecd066f447103a3d2bb7a</anchor>
      <arglist>(FFTBand *pTransferFunction, common::NumberMode mode=common::MODE_REAL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; double &gt; *</type>
      <name>ConvertTransferFunctionToFilterKernel</name>
      <anchorfile>classstira_1_1fouriertools_1_1TransferFunctionGenerator.html</anchorfile>
      <anchor>ab6fbd023ccd83b46b5bf8682c915384b</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pTransferFunction, common::NumberMode mode=common::MODE_REAL)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::histogram::ConditionalHistogram</name>
    <filename>classstira_1_1histogram_1_1ConditionalHistogram.html</filename>
    <member kind="function">
      <type></type>
      <name>ConditionalHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1ConditionalHistogram.html</anchorfile>
      <anchor>a4f8afb69358f442fdf6ff5126af4f949</anchor>
      <arglist>(double horizontalBinSize, double verticalBinSize, double horizontalMin, double horizontalMax, double verticalMin, double verticalMax, int nrBands=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConditionalHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1ConditionalHistogram.html</anchorfile>
      <anchor>aa120add03a035036db344e44afda03a3</anchor>
      <arglist>(image::Image *pImage1, image::Image *pImage2, bool useAbsoluteValues=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConditionalHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1ConditionalHistogram.html</anchorfile>
      <anchor>a03247dc31f74d1f970e486795a9f6f44</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid1, image::ArrayGrid&lt; double &gt; *pGrid2, bool useAbsoluteValues=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConditionalHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1ConditionalHistogram.html</anchorfile>
      <anchor>a81c641a30141064a33cbd550a96cc135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Write</name>
      <anchorfile>classstira_1_1histogram_1_1ConditionalHistogram.html</anchorfile>
      <anchor>a741ecc3159d2a765310ac61e434e5dab</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNrOfHorizontalBins</name>
      <anchorfile>classstira_1_1histogram_1_1ConditionalHistogram.html</anchorfile>
      <anchor>ace0ffde22b7683da2b49e22f7b5d6584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNrOfVerticalBins</name>
      <anchorfile>classstira_1_1histogram_1_1ConditionalHistogram.html</anchorfile>
      <anchor>a305c06982db5d39dbce34f3f5b8d60ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>VisualizeAsImage</name>
      <anchorfile>classstira_1_1histogram_1_1ConditionalHistogram.html</anchorfile>
      <anchor>afe7081c7d02239cec29c215e37c8b6d3</anchor>
      <arglist>(std::string imageName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::histogram::FloatHistogram</name>
    <filename>classstira_1_1histogram_1_1FloatHistogram.html</filename>
    <base>HistogramMaster&lt; double &gt;</base>
    <member kind="function">
      <type></type>
      <name>FloatHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a53bef2c7224858eaeaedbf3fc1049041</anchor>
      <arglist>(int nrOfBins, int nrBands=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FloatHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>ae009d8824183d2a043ce8b2ce446cea9</anchor>
      <arglist>(IntHistogram *pIntHistogram, bool requiresNormalization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FloatHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a54775641000788747571b8037650a303</anchor>
      <arglist>(const FloatHistogram &amp;pFloatHistogram)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FloatHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>aef925d13b8a685919b0380c9384706f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FloatHistogram *</type>
      <name>Clone</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a77fab9747f6f29cf7aef17585723ceea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Normalize</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a75a2b864904af5a16c9562e20ff03399</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetBinValueHistogramData</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a2a1aa7a746b041705349c9411a344679</anchor>
      <arglist>(int band, int bin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitializeWithNormalizedHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>aa12d3c528d478e39242f510573c45f8d</anchor>
      <arglist>(IntHistogram *pStandardHistogram)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitializeWithNormalizedCumulativeHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a054ec909385eb99b5fa10419fd62cbcd</anchor>
      <arglist>(IntHistogram *pStandardHistogram, IntHistogram *pCumulativeHistogram)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ComputeStandardKullbackLeiblerDistance</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a80c155d9fdbe36ad64c367f3c29b0efc</anchor>
      <arglist>(FloatHistogram *pOtherHistogram)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ComputeEntropy</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a6e85a7247ea90d242be5f74e5a06377f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ComputeSymmetricKullbackLeiblerDistance</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a30aa2cfa681e9a098aa5082cac738f82</anchor>
      <arglist>(FloatHistogram *pOtherHistogram)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ComputeJensenShannonDivergence</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>acebfbaf52fdeacafd09d6e2adbd68aa5</anchor>
      <arglist>(FloatHistogram *pOtherHistogram)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ComputeIDivergence</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>ab7805e9d92a177799ffcb6976d4be79b</anchor>
      <arglist>(FloatHistogram *pOtherHistogram)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Write</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a17f4f2c1ddec4cd0e3640b2a613c3562</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEpsilonThreshold</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a4a8530c972b603231781c174f83683a9</anchor>
      <arglist>(double epsilonValue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetEpsilonThreshold</name>
      <anchorfile>classstira_1_1histogram_1_1FloatHistogram.html</anchorfile>
      <anchor>a77d430fe9c8013091f58971d34bfeeea</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::histogram::HistogramMaster</name>
    <filename>classstira_1_1histogram_1_1HistogramMaster.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>void</type>
      <name>SetBinsToZero</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a7ea892f70126c65b1db8adf2887a537f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetBinValue</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>abf6d7ad6388d45fe2292cc9098bc71aa</anchor>
      <arglist>(int bandNr, int binNr) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetBinValueSafe</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a70d96ae287d5dd8d63523dbe26ff3182</anchor>
      <arglist>(int bandNr, int binNr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddOneToBin</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a9411d3b669d7a1e37e14f2bab8daa793</anchor>
      <arglist>(int bandNr, int binNr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddOneToBinSafe</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>af9fa388fb9a8c171a38ce1fc2cd84a14</anchor>
      <arglist>(int bandNr, int binNr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNrOfBins</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a53db7f0f7245aefb9c5b1ba2fae2e12d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNrOfBands</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>aaf98d78c9b2b983458caa1c966e3e3f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Write</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a7812e1c4cb4eb3b978635308c1fa9566</anchor>
      <arglist>(std::string fileName)=0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNrOfCounts</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a25638f1d2c94de0048ca3b24b564cac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetBinSize</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a496271aec6791df7879b68a7e40f08ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetDataMinimum</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a012cd3cd4dfc8d4b56906a89b1439b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetDataMaximum</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>af339b0457dbdf90e278ee87c89e9a30a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HistogramMaster</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>ac174954cda91364c68081dfbdc6eaa73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~HistogramMaster</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a746bffe56091f4ae819a5e69dfe18bca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a96614ad6c6b750898a3644b2c4c3d747</anchor>
      <arglist>(T binSize, int nrOfBands, T minValue, T maxValue)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CreateInitializedDataStructure</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a712fe3e14dbf2dbada5d5d706b74139e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetBinValue</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a98d42471863ac028917a9076378479d2</anchor>
      <arglist>(int bandNr, int binNr, T value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetBinValueSafe</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>ade0ccfd49edfcb7bca1aa9c607d0ec62</anchor>
      <arglist>(int bandNr, int binNr, T value)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T **</type>
      <name>mpHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a62d2e789de053e4594f20fd294366572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>mBinSize</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a764d3260febb856b43b7553d42992ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrOfBands</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a346468de6e9ad255890281ec8288fff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrOfBins</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a7837ee726968e12b7324f5b1a6d74203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrOfCounts</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a35e8423bd68ac3a5289b1e0256af83af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>mMin</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a0ccb35564b76d4b05f2b71319d49cd27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>mMax</name>
      <anchorfile>classstira_1_1histogram_1_1HistogramMaster.html</anchorfile>
      <anchor>a4e3fe37b514933fc14abe5e458632cb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::histogram::IntHistogram</name>
    <filename>classstira_1_1histogram_1_1IntHistogram.html</filename>
    <base>HistogramMaster&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>IntHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>a84b12fb1ec100902309824cec978e0c3</anchor>
      <arglist>(image::Image *pImage, double lowerFraction=0.01, double upperFraction=0.99, int binsize=1, image::ArrayGrid&lt; bool &gt; *pMaskGrid=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>a085c833259e7662f2479c345b37bf34c</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid, double lowerFraction=0.01, double upperFraction=0.99, int binsize=1, image::ArrayGrid&lt; bool &gt; *pMaskGrid=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>a7502c52b94ab537f010c2b469a4d3e05</anchor>
      <arglist>(double binSize, int nrOfBands, int minValue, int maxValue, double lowerFraction=0.01, double upperFraction=0.99)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IntHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>ad3b663362812717dc7d69998ca3be60c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetLowerFraction</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>ab66088d3c65c38f0add11a15a6c7bdae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLowerFraction</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>a4733cf8eb37ffe9c663a7a0c914fe4bd</anchor>
      <arglist>(double myFraction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetLowerBound</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>a917020c9af782126a4561fb94c2e28bc</anchor>
      <arglist>(int bandNr=0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetUpperFraction</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>afbef922792ff552f9f7e3bc5ce7f1df5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpperFraction</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>acbaf61bc50855f885280eb9bc3e903c2</anchor>
      <arglist>(double myFraction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetUpperBound</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>ab0e7e137b92879b3f52213bdea90d1f8</anchor>
      <arglist>(int bandNr=0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetQuantile</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>a12e0ad0d01092367b1c25046561e618d</anchor>
      <arglist>(int bandNr, double probability)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertInCumulativeHistogram</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>a1ab1e9c475fdc3cc9db62e196844761f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Write</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>af16a85e970136e96f5e41280f00227ab</anchor>
      <arglist>(std::string fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DetermineBounds</name>
      <anchorfile>classstira_1_1histogram_1_1IntHistogram.html</anchorfile>
      <anchor>ae5a0ec9226d8fc446de94947e27b2a91</anchor>
      <arglist>(int bandNr=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::histogram::Spatiogram</name>
    <filename>classstira_1_1histogram_1_1Spatiogram.html</filename>
    <member kind="function">
      <type></type>
      <name>Spatiogram</name>
      <anchorfile>classstira_1_1histogram_1_1Spatiogram.html</anchorfile>
      <anchor>a08d9ee4c681dbef257b23c04339935eb</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid, int binsize, image::ArrayGrid&lt; bool &gt; *pMaskGrid=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Spatiogram</name>
      <anchorfile>classstira_1_1histogram_1_1Spatiogram.html</anchorfile>
      <anchor>ae8b225227a2d2e9439825a4d801037c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBinValue</name>
      <anchorfile>classstira_1_1histogram_1_1Spatiogram.html</anchorfile>
      <anchor>aa229a0d49311ac339492d4c28d23b7bd</anchor>
      <arglist>(int binNr)</arglist>
    </member>
    <member kind="function">
      <type>common::Point&lt; double &gt;</type>
      <name>GetAveragePoint</name>
      <anchorfile>classstira_1_1histogram_1_1Spatiogram.html</anchorfile>
      <anchor>a3f1d77f64dd460f7cb9aeccffdbaf82b</anchor>
      <arglist>(int binNr)</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetCovarianceMatrix</name>
      <anchorfile>classstira_1_1histogram_1_1Spatiogram.html</anchorfile>
      <anchor>ac1bcf31b079c77a3cb18bdaf145f3bf9</anchor>
      <arglist>(int binNr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write</name>
      <anchorfile>classstira_1_1histogram_1_1Spatiogram.html</anchorfile>
      <anchor>a763752faf724678b5dc4636993d5ced0</anchor>
      <arglist>(std::string fileName, int threshold=100)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ChromaticAdaptation</name>
    <filename>classstira_1_1image_1_1ChromaticAdaptation.html</filename>
    <member kind="function">
      <type></type>
      <name>ChromaticAdaptation</name>
      <anchorfile>classstira_1_1image_1_1ChromaticAdaptation.html</anchorfile>
      <anchor>afe7200fe8a1d8031f003ac68c00d9502</anchor>
      <arglist>(const ColorValue sourceReferenceWhite, const ColorValue destinationReferenceWhite, ChromaticAdaptationType myType=CHROMATICADAPTATION_BRADFORD)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChromaticAdaptation</name>
      <anchorfile>classstira_1_1image_1_1ChromaticAdaptation.html</anchorfile>
      <anchor>a56372abe4c06cb7ee3fdc9938b4127e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>AdaptXYZColor</name>
      <anchorfile>classstira_1_1image_1_1ChromaticAdaptation.html</anchorfile>
      <anchor>af52179a6ac982e205aeaf9595721b485</anchor>
      <arglist>(ColorValue inValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>AdaptsRGBColor</name>
      <anchorfile>classstira_1_1image_1_1ChromaticAdaptation.html</anchorfile>
      <anchor>ad378bffd0f90165221fe1723f31ee169</anchor>
      <arglist>(ColorValue inValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>AdaptLabColor</name>
      <anchorfile>classstira_1_1image_1_1ChromaticAdaptation.html</anchorfile>
      <anchor>a48c000b148e60a8c3e01a028d33b6fd0</anchor>
      <arglist>(ColorValue inValue)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ColorBalancer</name>
    <filename>classstira_1_1image_1_1ColorBalancer.html</filename>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunBalance</name>
      <anchorfile>classstira_1_1image_1_1ColorBalancer.html</anchorfile>
      <anchor>a9b1164d66ada8d5365f1a2503dd8edf7</anchor>
      <arglist>(image::Image *pImageIn, double weightGM=0.5)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunGrayWorld</name>
      <anchorfile>classstira_1_1image_1_1ColorBalancer.html</anchorfile>
      <anchor>aa09e3101556a973a87436752d0f2fc88</anchor>
      <arglist>(image::Image *pImageIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunGrayColorPoint</name>
      <anchorfile>classstira_1_1image_1_1ColorBalancer.html</anchorfile>
      <anchor>a211edeb99abad2f527b012c1e5cea973</anchor>
      <arglist>(Image *pImageIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::Image *</type>
      <name>RunPerfectReflector</name>
      <anchorfile>classstira_1_1image_1_1ColorBalancer.html</anchorfile>
      <anchor>a97548dedc5aade5c142e1708669d003d</anchor>
      <arglist>(image::Image *pImageIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ColorConstants</name>
    <filename>classstira_1_1image_1_1ColorConstants.html</filename>
    <member kind="variable">
      <type>ColorValue</type>
      <name>mReferenceWhite</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>ab03f6cee1d493fe395920686ce96dade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMaxColorValue</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>acdd9eb4789cd323ab51a0a7b5cffa1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sA_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a1a598451bccd2ffb3827838615d88ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sB_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>abdd48708d88a4d1f8c0f10ca994054c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sC_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>ac0969391e0c784e33075e0c6c6f2efa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sD50_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a8c5a5b18d06f819ebfb2656330093952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sD55_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>abc6c65019f76ee433cd1664f70ad2522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sD65_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a2bcfeec9f241c769d66a9b20812d1e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sD75_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a3e1c754c174c2ab8b96f5778fc8cf66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sD93_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>af82abbe0a385fb88d90d9fa65fd36873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sE_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a176c862b3dbf5bec159bc9237412ccdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sF2_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a701c267fc5c890fde9bc863d1b99b2f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sF7_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a02e41d9c1c81217578a3c2a8f79a6c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sF11_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>aef3b99a26a556e5ac0da31508a32f499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ColorValue</type>
      <name>sPrintWhite_XYZ</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>af0e263071b637c35f7305a091be9272b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sDifferenceThreshold</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a10d80cdd6013bdf3d16dd42c6bdffd66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sKappa</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a3589079568f9cfca3cf82f1685f34060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sEpsilon</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a29d5f50f6a1f707a9efa77aa8692186e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sMatchingFunctionCIEx</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>ae4c9cc222682e265589d876604a7a232</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sMatchingFunctionCIEy</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a052f2d77e736acb32301519803aca613</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sMatchingFunctionCIEz</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>acb66b5222738d09da71668b23e18dbb6</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sD50IlluminantSpectrum</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>ad447c451952c80a545b2be7b24f515ad</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sD65IlluminantSpectrum</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a7549626c6f6c546ba77e7ede571f3cc4</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sAIlluminantSpectrum</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>afe5a59ff6502f96b6621882a4b598bf9</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sSpectralNormalizationConstantD50</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a75416ffc56c7d7bb03b90c215aa8acd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>sSpectralNormalizationConstantD65</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>abef46e3a9857dd219baf6d8c53d256a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>sMinimumWavelength</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a002e5cd3f426d7872f8e0af60566febe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>sMaximumWavelength</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a10d269a7faa0200d2a78ae0824799b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>sWavelengthStepSize</name>
      <anchorfile>classstira_1_1image_1_1ColorConstants.html</anchorfile>
      <anchor>a5d81a4a40cebb9d9c28818e215d12485</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ColorValue</name>
    <filename>classstira_1_1image_1_1ColorValue.html</filename>
    <member kind="function">
      <type></type>
      <name>ColorValue</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>a95c93e5e99ee64ffe96a526cd576379d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorValue</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>a965433756eea809f0501b0d25b4dcf43</anchor>
      <arglist>(double r, double g, double b, ColorType myType=TYPE_RGB)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetColorValue</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>a18f09df3e6ff62f323ca8b5376499360</anchor>
      <arglist>(double r, double g, double b, ColorType myType)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>a48150d642b72fa4800c0b321393866d9</anchor>
      <arglist>(const ColorValue &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMax</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>a77106ff08b81cec2791c125775d0336b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAverage</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>a4b8da21a71bd05406a1f4aede9b7dc27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMin</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>ac3c1912e9f17db4e1f10067a09025242</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>c</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>a9ad94154baceaee189e1458a2268bc92</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>ColorType</type>
      <name>type</name>
      <anchorfile>classstira_1_1image_1_1ColorValue.html</anchorfile>
      <anchor>ac79d83368e27c4bcd3bde3b9f4e5ad3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::DistinctColorGenerator</name>
    <filename>classstira_1_1image_1_1DistinctColorGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>DistinctColorGenerator</name>
      <anchorfile>classstira_1_1image_1_1DistinctColorGenerator.html</anchorfile>
      <anchor>a73ad1e845de6401dd0d15ff115e0d5a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DistinctColorGenerator</name>
      <anchorfile>classstira_1_1image_1_1DistinctColorGenerator.html</anchorfile>
      <anchor>a41757ab60167eee0494393284e07b9a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>GenerateNewColor</name>
      <anchorfile>classstira_1_1image_1_1DistinctColorGenerator.html</anchorfile>
      <anchor>a8ce2f5bce7243aff01d7639d26fb16fc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::GretagMacbethColorChecker</name>
    <filename>classstira_1_1image_1_1GretagMacbethColorChecker.html</filename>
    <member kind="function">
      <type></type>
      <name>GretagMacbethColorChecker</name>
      <anchorfile>classstira_1_1image_1_1GretagMacbethColorChecker.html</anchorfile>
      <anchor>a8d7edac84eceb1da86d26bfa3be8bf94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GretagMacbethColorChecker</name>
      <anchorfile>classstira_1_1image_1_1GretagMacbethColorChecker.html</anchorfile>
      <anchor>adcd33bbee50e27f82f6716df3e91f7af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; ColorValue &gt;</type>
      <name>GenerateVector</name>
      <anchorfile>classstira_1_1image_1_1GretagMacbethColorChecker.html</anchorfile>
      <anchor>a3389ff0ef46f1c92328dba98e567f9f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>Generate</name>
      <anchorfile>classstira_1_1image_1_1GretagMacbethColorChecker.html</anchorfile>
      <anchor>a5f997ac3d88240f2fb4e7977506606e6</anchor>
      <arglist>(int borderWidth, int squareSize)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::image::compare_neighbor_entry_t</name>
    <filename>structstira_1_1image_1_1compare__neighbor__entry__t.html</filename>
    <member kind="variable">
      <type>lut_entry_t</type>
      <name>entry</name>
      <anchorfile>structstira_1_1image_1_1compare__neighbor__entry__t.html</anchorfile>
      <anchor>a58a28123253e8667632f923bfceb0f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dE</name>
      <anchorfile>structstira_1_1image_1_1compare__neighbor__entry__t.html</anchorfile>
      <anchor>ab593abfdd7d1785c369efbe405deea8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ProfileCorrect</name>
    <filename>classstira_1_1image_1_1ProfileCorrect.html</filename>
    <member kind="function">
      <type></type>
      <name>ProfileCorrect</name>
      <anchorfile>classstira_1_1image_1_1ProfileCorrect.html</anchorfile>
      <anchor>a5a1e508bdc64a4ad8d7ac74de06a3fef</anchor>
      <arglist>(ProfileData *pInputProfile, int nrGridPoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProfileCorrect</name>
      <anchorfile>classstira_1_1image_1_1ProfileCorrect.html</anchorfile>
      <anchor>a1034af9a164f328e6b4d5ed90e2c5495</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProfileData *</type>
      <name>InterpolateSamplesToGrid</name>
      <anchorfile>classstira_1_1image_1_1ProfileCorrect.html</anchorfile>
      <anchor>add23e46ea6ba5ce5eb5b4f9d61e072c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>FindInList</name>
      <anchorfile>classstira_1_1image_1_1ProfileCorrect.html</anchorfile>
      <anchor>ac915105eb44ff08536df777641c867c3</anchor>
      <arglist>(vector&lt; lut_entry_t &gt; myTable, cmyk_t cmykEntry, lut_entry_t &amp;foundEntry)</arglist>
    </member>
    <member kind="function">
      <type>compare_neighbor_entry_t</type>
      <name>FindClosestGridPoint</name>
      <anchorfile>classstira_1_1image_1_1ProfileCorrect.html</anchorfile>
      <anchor>aebd9aca59adccf2a8055e69f182e4dd4</anchor>
      <arglist>(vector&lt; lut_entry_t &gt; myTable, lab_t gridLabValue)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; compare_neighbor_entry_t &gt;</type>
      <name>FindNearestNeighbors</name>
      <anchorfile>classstira_1_1image_1_1ProfileCorrect.html</anchorfile>
      <anchor>a936098f9034c697718b54b15c1f21fe3</anchor>
      <arglist>(vector&lt; lut_entry_t &gt; dataTable, lut_entry_t myEntry)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::image::lab_t</name>
    <filename>structstira_1_1image_1_1lab__t.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>l</name>
      <anchorfile>structstira_1_1image_1_1lab__t.html</anchorfile>
      <anchor>a5d7d58440bec8a9e14c07a76ccaad509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>a</name>
      <anchorfile>structstira_1_1image_1_1lab__t.html</anchorfile>
      <anchor>aaa09648485718aa0b0a9e128e26f4181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>structstira_1_1image_1_1lab__t.html</anchorfile>
      <anchor>a8d5f22b02eaeb5cc72cfe1bb434fbc9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::image::cmyk_t</name>
    <filename>structstira_1_1image_1_1cmyk__t.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>c</name>
      <anchorfile>structstira_1_1image_1_1cmyk__t.html</anchorfile>
      <anchor>a0c29b94a8260582611cc72c08b991f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>m</name>
      <anchorfile>structstira_1_1image_1_1cmyk__t.html</anchorfile>
      <anchor>a7fed4e68561090272a94a24150cad48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structstira_1_1image_1_1cmyk__t.html</anchorfile>
      <anchor>a27ad558cdbf9d48dde227091c99ad828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>k</name>
      <anchorfile>structstira_1_1image_1_1cmyk__t.html</anchorfile>
      <anchor>acd35349e6012a086cf6c6a400d5b352f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::image::lut_entry_t</name>
    <filename>structstira_1_1image_1_1lut__entry__t.html</filename>
    <member kind="variable">
      <type>lab_t</type>
      <name>lab</name>
      <anchorfile>structstira_1_1image_1_1lut__entry__t.html</anchorfile>
      <anchor>aa355bdef24c19bcce1b4c3dc0731e2f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cmyk_t</type>
      <name>cmyk</name>
      <anchorfile>structstira_1_1image_1_1lut__entry__t.html</anchorfile>
      <anchor>ae7f47846d81e564ac31604012559821c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>structstira_1_1image_1_1lut__entry__t.html</anchorfile>
      <anchor>a40a635c27446f4fa6fa6e4d0595328ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ProfileData</name>
    <filename>classstira_1_1image_1_1ProfileData.html</filename>
    <member kind="function">
      <type></type>
      <name>ProfileData</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a96af69a67570e04d12d5719a63041c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProfileData</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>acf21d734ac779dab53d860dc723863f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSizeA2B</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a79360148914ef348e55e1fa126d4f6ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>lut_entry_t</type>
      <name>GetA2BEntry</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>aae47c9781fb1ded6c9ec2bd022b4851c</anchor>
      <arglist>(int k)</arglist>
    </member>
    <member kind="function">
      <type>cmyk_t</type>
      <name>GetA2BEntryCmyk</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a74fb14ac26c2c4ba77fcabb56f2e05f8</anchor>
      <arglist>(int k)</arglist>
    </member>
    <member kind="function">
      <type>lab_t</type>
      <name>GetA2BEntryLab</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>adabfdf690a58ed1b0bcf92d0b82e6cfe</anchor>
      <arglist>(int k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddA2BEntry</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>af865b3026735ee3164d2eaf12f838eb4</anchor>
      <arglist>(lut_entry_t entry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetA2BEntryCmyk</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a80b9c40188c360c10855828fb9bf63a1</anchor>
      <arglist>(int k, cmyk_t cmyk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetA2BEntryLab</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>ae379669983c53b31a0482efadf2d409c</anchor>
      <arglist>(int k, lab_t lab)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSizeB2A</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a62c72534939e49e7fb9cc6a0d03f21ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>lut_entry_t</type>
      <name>GetB2AEntry</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a4929bf307fe2fc5a950f116ecc2037f9</anchor>
      <arglist>(int k)</arglist>
    </member>
    <member kind="function">
      <type>cmyk_t</type>
      <name>GetB2AEntryCmyk</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a97d3b85c35bb09d2518af138bb0be2ab</anchor>
      <arglist>(int k)</arglist>
    </member>
    <member kind="function">
      <type>lab_t</type>
      <name>GetB2AEntryLab</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a4cd051fb907947544358e1f74085d7ea</anchor>
      <arglist>(int k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddB2AEntry</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>ae8b11650627742fd8d3534db70043940</anchor>
      <arglist>(lut_entry_t entry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetB2AEntryCmyk</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>abd6f30e9442b652180f2a605c2eaf39c</anchor>
      <arglist>(int k, cmyk_t cmyk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetB2AEntryLab</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>ad4aa87d0033d18ea263ffa3c8a9abd46</anchor>
      <arglist>(int k, lab_t lab)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; lut_entry_t &gt;</type>
      <name>A2B</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>a7f3e2aa1f43d2471ac5df99209592418</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; lut_entry_t &gt;</type>
      <name>B2A</name>
      <anchorfile>classstira_1_1image_1_1ProfileData.html</anchorfile>
      <anchor>aa404fb5c823ee0e50cd6b4cc3584ee8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::TransformColorSpace</name>
    <filename>classstira_1_1image_1_1TransformColorSpace.html</filename>
    <member kind="function">
      <type></type>
      <name>TransformColorSpace</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>adc321a183b630566d57630d1f01d29a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransformColorSpace</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>adc655d6c70b869ecc15924e7104f2b29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxColorValue</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a8fe1a0fdf4a8fb847ae53113573f84f2</anchor>
      <arglist>(double maxColorValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReferenceWhite</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a5c69ad13cadc2e75352c6838072ce4b7</anchor>
      <arglist>(ColorValue referenceWhite)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>GetReferenceWhite</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a45d3aa91ca3bf7b1c47931f617c1cd90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>sRGBtoXYZ</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>afb16d9b62d37f9150343137e6f7363bd</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>XYZtosRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>ac17bdbf613267546317b78f2116b2b4e</anchor>
      <arglist>(ColorValue xyzValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>AdobeRGBtoXYZ</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a5d756d79e83eec2dcc84726596f89fea</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>XYZtoAdobeRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>ab9dfe96bd5f59c236844269936aeb943</anchor>
      <arglist>(ColorValue xyzValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>sRGBtoLuv</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>aa215b7832b8478b89c41d1518f59ef97</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>LuvtosRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>afcd8a4668a5222ae40d3fc367155ebc8</anchor>
      <arglist>(ColorValue luvValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>XYZtoLuv</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a8c4e769a4c5cd3a7a2bec3d2a951bd1b</anchor>
      <arglist>(ColorValue xyzValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>LuvtoXYZ</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a7ab2dcb175740952efe4fb2edc32ecbe</anchor>
      <arglist>(ColorValue luvValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>sRGBtoLab</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a05da57200a29ee82b159ad01ec0f22a0</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>LabtosRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a5570d30c857ecc82c28c9ffa6d4b01cd</anchor>
      <arglist>(ColorValue luvValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>AdobeRGBtoLab</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>ac4c4a1d1aafa93f3e1e58dfefa70da73</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>LabtoAdobeRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a9ad6581da0f2f6c0545cb0fd52117cad</anchor>
      <arglist>(ColorValue luvValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>XYZtoLab</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a918276586418dd731083301066a5a423</anchor>
      <arglist>(ColorValue xyzValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>LabtoXYZ</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>abd7bd51a55160ed763eab54bf40e5cc0</anchor>
      <arglist>(ColorValue labValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>RGBtoCMY</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a2b3be0e965c7c1fd3da1ac3dfb6fde7f</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>CMYtoRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a6a5481a311382831e7c731f948fd3ae7</anchor>
      <arglist>(ColorValue cmyValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>RGBtoHSV</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a1db1146c8f80248328b5b51da3e2f980</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>HSVtoRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>ab776da923580fb52be743fe9e48941f6</anchor>
      <arglist>(ColorValue hsvValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>RGBtoHSI</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a9c54133cb38982b0afec4dad2fbfd7ff</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>HSItoRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a1625163b89319982a44a21956604f16c</anchor>
      <arglist>(ColorValue hsiValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>LabtoLCH</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>aa4764fa7eb3d5caa4b50e5066a126e19</anchor>
      <arglist>(ColorValue labValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>LCHtoLab</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a05f91827089ab817ecb7c275c418cb14</anchor>
      <arglist>(ColorValue lchValue)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>SpectralValuesToXYZ</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a97402fda2b7f91ed65b63ec1b7ab52a5</anchor>
      <arglist>(double *pSpectralValuesArray, int wavelengthMin, int wavelengthMax)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>SpectralValuesToLab</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>ae63dc9e6750f3c963a2ec126ba21a9d5</anchor>
      <arglist>(double *pSpectralValuesArray, int wavelengthMin, int wavelengthMax)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>DeltaE1976</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>adb02ad05b197de50d88be4a6a395df20</anchor>
      <arglist>(ColorValue lab1, ColorValue lab2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>DeltaE1994</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>aeaa039551a81434f31571fc25aa99f88</anchor>
      <arglist>(ColorValue lab1, ColorValue lab2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>DeltaE2000</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>aaec1419b886d1e8dcb4681f3fa85c208</anchor>
      <arglist>(ColorValue lab1, ColorValue lab2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>DeltaE2000</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>ab67e9eff53fbe805ad8332a5c18e3800</anchor>
      <arglist>(double *pSpectralValues1, double *pSpectralValues2, int wavelengthMin, int wavelengthMax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorValue</type>
      <name>RGBtoYUV</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a2c705f2a9a6763a1439792bef29c78bb</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorValue</type>
      <name>YUVtoRGB</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>aa903e245c181d6fe93e01d5be9006476</anchor>
      <arglist>(ColorValue yuvValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>RGBToGray</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>ac444f12f279d485ce73c5fd7de9cb1a9</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorValue</type>
      <name>RGBToSepia</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>abf585cffdc136a48655b4df80c45d33c</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorValue</type>
      <name>RGBToSepia2</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>a0403b0aa24cabc0dd9af0db1f6b7fc0d</anchor>
      <arglist>(ColorValue rgbValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorValue</type>
      <name>RGBToSepia2</name>
      <anchorfile>classstira_1_1image_1_1TransformColorSpace.html</anchorfile>
      <anchor>ad09cba7bd3369dfd92a167147ad76f9c</anchor>
      <arglist>(double grayValue)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ArrayGrid</name>
    <filename>classstira_1_1image_1_1ArrayGrid.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a27b54788136f4faf9d929c7d55559412</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a20ed7fa4fa892a5283aec9f5b4ebbcf3</anchor>
      <arglist>(int width, int height, bool needsInitialization, T intensity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>aeedc4a57052d4ae2818614125ef6ac94</anchor>
      <arglist>(int width, int height, T *pArray)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a97847114753dc1fd06b05bbbacbb6213</anchor>
      <arglist>(const ArrayGrid&lt; T &gt; &amp;pArrayGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a01da3da4ee183f24a3066b11a84f8f42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; T &gt; *</type>
      <name>Clone</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a402409dfa0fc1247072e122c73b7280f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator()</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>abb2021dd7f719bc482a5ead08a27a910</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator()</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a74618c82784e7e8a50b4d8cc8669cfa4</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridValues</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>ad30e0b23d40213b1a2e2acddf879de93</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridValues</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a3e86434bd9ce6315657b5438f1b2235b</anchor>
      <arglist>(const ArrayGrid&lt; T &gt; &amp;otherGrid)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>GetRowCopy</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a76d925e7ed8e1458eb5e5a6509591bd2</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>GetColumnCopy</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a504074d66bb59081a71e168d7515164f</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetValue</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a9a00bd0c2097977901c43f13a1b67526</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>aeb53fd2ea54837892f1b2b2d262f8291</anchor>
      <arglist>(int x, int y, T myValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a51d7b8f1f8f5dcf9021aa20bdf5fe46e</anchor>
      <arglist>(std::vector&lt; common::Point&lt; int &gt; &gt; ptVector, T myValue)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetValue</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a31d9d4ce808668fc03b6e76539b15301</anchor>
      <arglist>(common::Point&lt; int &gt; pt) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a7101731ea7901e8f3c526d5635a94304</anchor>
      <arglist>(common::Point&lt; int &gt; pt, T myValue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetWidth</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>af19dcd76d242789d06ba06dca6519b2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHeight</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>ab2f121b7c7d4691c5ef487a692603bdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>GetDataCopy</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a3ad3385bf09efef3a3802115787b718f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>GetDataPointer</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a4d5be9f49b54e37b96080f93bfc2d99c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PointMirrorGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a3ad7f3c00f9b6c520bf6907bf87f550c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwitchQuadrants</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a83c4074e178e5fa8519c040dd93c7327</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddValue</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a74e9ca834a3b223d944c0af6f739e598</anchor>
      <arglist>(int x, int y, T myValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddOne</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>ab0e0c38270db1281e9a5f3a295e8ed8a</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyValue</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>afb0de2e17824ec956ac18966d183cfa9</anchor>
      <arglist>(int x, int y, T myValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DivideValue</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a612d695396e4071ca76e17b0f6692cee</anchor>
      <arglist>(int x, int y, T myValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyWith</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a3ce2df80bb88ce0d2375d13362f4da75</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyWith</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a001c64b944e989638e19aaacc528a3f6</anchor>
      <arglist>(std::complex&lt; double &gt; factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DivideBy</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>abd7166f532d31ed5f16efa61354621d0</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DivideBy</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a541f57ff95a2fe058c41973fd811b371</anchor>
      <arglist>(std::complex&lt; double &gt; factor)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a5572572b06192ff25ba741c18110ebeb</anchor>
      <arglist>(const ArrayGrid&lt; T &gt; &amp;otherGrid)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>acf4da61d5f79e505e9adcb9fdaab8d65</anchor>
      <arglist>(const ArrayGrid&lt; T &gt; &amp;otherGrid)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; T &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>af7ab5b41b53854eec38db634023a0328</anchor>
      <arglist>(const ArrayGrid&lt; T &gt; &amp;otherGrid)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; T &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a04cae3aa8660bc070f58e37f5589fd66</anchor>
      <arglist>(const ArrayGrid&lt; T &gt; &amp;otherGrid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a8a6164cba598a6cb1dcd49f03f7241f1</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *otherGrid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SubtractGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a8bbfee814069ec4456e0dc8ab7500897</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *otherGrid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyWith</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>af2f2a3cb968f6ddf183e9786968f3094</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *otherGrid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DivideBy</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a8f772c45adf1a0f12f8e67fad67f14b7</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *otherGrid)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>CreateGridCopy</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a40506e03c69062b2fd420d98dd25627e</anchor>
      <arglist>(const ArrayGrid&lt; T &gt; &amp;otherArrayGrid)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T *</type>
      <name>mpArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a7fb8b59fe809e9b4b45f97f76e675706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mWidth</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>a9f18e7889a8b67359dc4ccbfa7398ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mHeight</name>
      <anchorfile>classstira_1_1image_1_1ArrayGrid.html</anchorfile>
      <anchor>ab87dbdd40267557a680ee54cc51dfb2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::CWTPyramid</name>
    <filename>classstira_1_1image_1_1CWTPyramid.html</filename>
    <base>Pyramid&lt; std::complex&lt; double &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>CWTPyramid</name>
      <anchorfile>classstira_1_1image_1_1CWTPyramid.html</anchorfile>
      <anchor>a921496e165cfb87193e09fb8e8521882</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pSourceBand, int myNrScales)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CWTPyramid</name>
      <anchorfile>classstira_1_1image_1_1CWTPyramid.html</anchorfile>
      <anchor>aa2432f6c254de00c6699551df7797a0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; std::complex&lt; double &gt; &gt; *</type>
      <name>GetLowPassResidual1</name>
      <anchorfile>classstira_1_1image_1_1CWTPyramid.html</anchorfile>
      <anchor>ad827b999d52fa23baae421c0e9ab9b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLowPassResidual1</name>
      <anchorfile>classstira_1_1image_1_1CWTPyramid.html</anchorfile>
      <anchor>a1a02e1a339d1312806979a84beed5f4c</anchor>
      <arglist>(ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pBand)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; std::complex&lt; double &gt; &gt; *</type>
      <name>GetLowPassResidual2</name>
      <anchorfile>classstira_1_1image_1_1CWTPyramid.html</anchorfile>
      <anchor>ad12126d59bd09e07b09926da0a0e5110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLowPassResidual2</name>
      <anchorfile>classstira_1_1image_1_1CWTPyramid.html</anchorfile>
      <anchor>a820bdb1d84c397c8776c392ff51606d9</anchor>
      <arglist>(ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pBand)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExportBandsToPGM</name>
      <anchorfile>classstira_1_1image_1_1CWTPyramid.html</anchorfile>
      <anchor>af9d3154bd42ee50fb410836d7dccb428</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::Image</name>
    <filename>classstira_1_1image_1_1Image.html</filename>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a4ada33c68d3093558ee76ff7a70c634c</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a9cb052131be88323668baca55dd14218</anchor>
      <arglist>(int width, int height, int nrBands)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>abea6bcaaedfe3835b23719b209f3ae96</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pDataGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ae6397f03068c4bab3ad7bd525b2e375d</anchor>
      <arglist>(ArrayGrid&lt; bool &gt; *pBoolGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Image</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a909bb99cdbffeddf8a62cc41f74e9d6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetImageName</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a9fd30cfdb35a97d9827039c45d870a70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetImageName</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a85bacb4ec82b8922cdeac313d44fee98</anchor>
      <arglist>(std::string imagename)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Clone</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a9eb1cfae5e163f99394e983f4cc6d8dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ac8e451cf2b8fe66b0957b3804fc09094</anchor>
      <arglist>(Image &amp;otherImage)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>ExtractROIAsNewImage</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ac073786fcd4e3659ae21f8838997d8d2</anchor>
      <arglist>(common::RectangularROI&lt; int &gt; rroi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InsertSubImage</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>aa99bbd6fa0b952db5c5311afa7c11807</anchor>
      <arglist>(Image *pSubImage, int xTop, int yTop)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InsertSubGrid</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a02c29abbd7c5ba73adce51b6d67ff1eb</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pSubGrid, int xTop, int yTop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddBand</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ae2b420ee2b924ee5e185858e1ee13611</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pBand)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveBand</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ada20cabbbca63403696c7d08b5588f15</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pBand)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveBand</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a5b75a4df95cf44f6fe163e09994e3fb7</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceBand</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>aa19748216b4bc2e6bdeba67c6c117151</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pBandOld, ArrayGrid&lt; double &gt; *pBandNew)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ArrayGrid&lt; double &gt; * &gt; &amp;</type>
      <name>GetBands</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a4429f0cf1db3592e821d69dbdd496cf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetWidth</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a5dae7ac69c8997bb2529f44b89b4c3a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHeight</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a2ae76ee72f7ef6e6aa3ea423a060b044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfBands</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a4283f0456ce83abdc27c8748986f8f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMinMax</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a67576768f322c10088eb4366540b7af6</anchor>
      <arglist>(double &amp;outMin, double &amp;outMax, int &amp;minBandNr, int &amp;maxBandNr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMinMax</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a4070865e51f4132443d453c9104286b5</anchor>
      <arglist>(double &amp;outMin, double &amp;outMax)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAbsMax</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a9204fdae8da809952363627a2934c05f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Diagnose</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>aa4162c33c7fa67d5c48ee94156f16127</anchor>
      <arglist>(std::string ID=std::string(&quot;&quot;))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rescale</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ad559a3befa5c2df86022552bf8c5c32a</anchor>
      <arglist>(double mmin=0.0, double mmax=255.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyImageValues</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a2ed3f02228b57ab0a5972777184ca9f9</anchor>
      <arglist>(Image *pOtherImage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClipImageValues</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>aef48f9bb0fcb0f94c927bf1840ae91fc</anchor>
      <arglist>(double clippedMin, double clippedMax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyWith</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ab70dc35dcd2f39257d7e4d3c5670c3ab</anchor>
      <arglist>(Image *pImg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Scale</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a83392f4d6e2bce709e92ee3899f26910</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddGaussianNoise</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>af4ea627888fa823ba4bd4efa8128b735</anchor>
      <arglist>(double sigma, bool isColored=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyPoissonNoise</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ae82f0dc707944ae996df74f95558b75a</anchor>
      <arglist>(double factor, bool isColored=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplySaltAnPepperNoise</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a55f80b9de1a1f9cdf30606c84329c276</anchor>
      <arglist>(double fraction, bool isColored=true)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>GetColor</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a30bd8b38b279d3090ed4c736b11175da</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>ColorValue</type>
      <name>GetColor</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>abbc3266b318510eaccdb8a3a804930af</anchor>
      <arglist>(common::Point&lt; int &gt; pt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetColor</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>aa698a14a46ea1344e8b5b5e8f55f28c0</anchor>
      <arglist>(int x, int y, ColorValue cv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetColor</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a886f08fb42f14d917a9a91bfcd36dc3b</anchor>
      <arglist>(common::Point&lt; int &gt; pt, ColorValue cv)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HSVToRGB</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a0c34f57fc10eb8eaf81b45a3586581ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RGBToHSV</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>abf076ec856c89b7f057fe13800b64aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HSIToRGB</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ad028e2b273da6dd0aaf457be0cf754bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RGBToHSI</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ac6cccca4d7282627bac293d1205d15bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sRGBToXYZ</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a83e2e5c4430eb588abc4cb31a3b50ba7</anchor>
      <arglist>(ColorValue referenceIlluminant=ColorConstants::sD65_XYZ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>XYZTosRGB</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a82d97ea4bb853cdd6917ce0a74971e5c</anchor>
      <arglist>(ColorValue referenceIlluminant=ColorConstants::sD65_XYZ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AdobeRGBToXYZ</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a1b36c5ff867788fefd3276477fd3a076</anchor>
      <arglist>(ColorValue referenceIlluminant=ColorConstants::sD65_XYZ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>XYZToAdobeRGB</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>aff349f36813bde1653ccb0db1415ee2f</anchor>
      <arglist>(ColorValue referenceIlluminant=ColorConstants::sD65_XYZ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sRGBToLuv</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>ae7c8a6b33dc7f196dd4d36e8337a6c24</anchor>
      <arglist>(ColorValue referenceIlluminant=ColorConstants::sD65_XYZ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LuvTosRGB</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a87fe1516ace1f75c874cafba7ea0674f</anchor>
      <arglist>(ColorValue referenceIlluminant=ColorConstants::sD65_XYZ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sRGBToLab</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a953ca8be0ccb20fe6b01e5de26c321db</anchor>
      <arglist>(ColorValue referenceIlluminant=ColorConstants::sD65_XYZ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LabTosRGB</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>abc8d75951373d925b6f239707ad3284e</anchor>
      <arglist>(ColorValue referenceIlluminant=ColorConstants::sD65_XYZ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RGBToYUV</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a6a009bdb76e125458ed4c43a0e56e5ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>YUVToRGB</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a7e3a063dce4200a38c5c7e82edf77b1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RGBToCMY</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a9b97712fe5ea971e10f97ad0f1ec0148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CMYToRGB</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a95d8b05eba0acec304ff7676fa8a6699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChromaticAdapt</name>
      <anchorfile>classstira_1_1image_1_1Image.html</anchorfile>
      <anchor>a212ed137b691b8db6b8855497e9357e9</anchor>
      <arglist>(ColorValue sourceWhite, ColorValue destinationWhite, ChromaticAdaptationType myType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::LocalOrientation</name>
    <filename>classstira_1_1image_1_1LocalOrientation.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalOrientation</name>
      <anchorfile>classstira_1_1image_1_1LocalOrientation.html</anchorfile>
      <anchor>a9730266775a96ed6b01b5ec26ad9895d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LocalOrientation</name>
      <anchorfile>classstira_1_1image_1_1LocalOrientation.html</anchorfile>
      <anchor>a773ac444a6ea01b9c5b826ce33543c53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMagnitude</name>
      <anchorfile>classstira_1_1image_1_1LocalOrientation.html</anchorfile>
      <anchor>a272f8140bb1cff16efaa5a034cf0d809</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMagnitude</name>
      <anchorfile>classstira_1_1image_1_1LocalOrientation.html</anchorfile>
      <anchor>a65bc4a3e5a399b754662440f291c6f9b</anchor>
      <arglist>(double myMagnitude)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAngle</name>
      <anchorfile>classstira_1_1image_1_1LocalOrientation.html</anchorfile>
      <anchor>a1b8575fbb0932b181ae7ff74f8703439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAngle</name>
      <anchorfile>classstira_1_1image_1_1LocalOrientation.html</anchorfile>
      <anchor>a375c6395895c959db239df9d2c96324b</anchor>
      <arglist>(double myAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMagnitudeAndAngle</name>
      <anchorfile>classstira_1_1image_1_1LocalOrientation.html</anchorfile>
      <anchor>a2edb52afe88f34d8f000b245ec83683c</anchor>
      <arglist>(double myMagnitude, double myAngle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::OrientationGrid</name>
    <filename>classstira_1_1image_1_1OrientationGrid.html</filename>
    <member kind="enumeration">
      <name>ColorExportMode</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a114e2a98cd3f7794a7bf48366b79b1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPORT_RGB_MODE</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a114e2a98cd3f7794a7bf48366b79b1c8a315761df0f7cdb5cecc5c4d02979c9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPORT_HSV_MODE</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a114e2a98cd3f7794a7bf48366b79b1c8abf30ac77bb5b9ceb2a7339702c7d64a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrientationGrid</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a5c064693343ea7515b399e4f861aeb72</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OrientationGrid</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>ae3a389520c5ba5f31743050e4513875b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>OrientationGrid *</type>
      <name>Clone</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a68a7f6950cfb26b709f00937d0072d70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetWidth</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a8d5319ede1dbc3799d232ab66085c3ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHeight</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>af9996f4567eba9e012bbd64995d85fab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOrientation</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>aac1ffd8556dc1ec50c8e738d55f1b4c2</anchor>
      <arglist>(int x, int y, double myAngle)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetOrientation</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a930aeb27b6e3dd0f75216ad4f54ee62f</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMagnitude</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>acdc5fefbd3548d8cc0fc117122e06be2</anchor>
      <arglist>(int x, int y, double myMagnitude)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMagnitude</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>ae1b51085872717b1206a34614b65549e</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMinMaxMagnitude</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>ac8711d4691e0773945311dd51ff287da</anchor>
      <arglist>(double &amp;mmin, double &amp;mmax)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>ExtractMagnitudeGrid</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a4dc4394939801258092f57d0d285033a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>VisualizeMagnitudeImage</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>a91e4987d76db98a41e94e654c2027ede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExportMagnitudeImage</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>affe40a51bee7ef7fd7dd4dcb2f78572b</anchor>
      <arglist>(std::string fileNameMagnitude)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>ExtractOrientationGrid</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>ad47738edb7b4fa919b54059f396e21ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>VisualizeOrientationImage</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>ad57ba5a84efa87a144d05cc1b0777ed4</anchor>
      <arglist>(double threshold, ColorExportMode myMode=EXPORT_HSV_MODE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExportOrientationImage</name>
      <anchorfile>classstira_1_1image_1_1OrientationGrid.html</anchorfile>
      <anchor>af22861ee375cd8487eda86da97899cbb</anchor>
      <arglist>(std::string fileNameDirection, double threshold=3, ColorExportMode myMode=EXPORT_HSV_MODE)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::Pyramid</name>
    <filename>classstira_1_1image_1_1Pyramid.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Pyramid</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>aca1bba3e119949c5dac76b4fe7c84bb0</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pSourceBand, int myNrScales, int myNrOrientations, bool isSubsampled, bool needsResidualLevels, bool isFinestScaleSubsampled=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreateBands</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ae63533aa39d7e901a4fb2a1c8f6817fe</anchor>
      <arglist>(int sourceWidth, int sourceHeight, bool isSubsampled=false, bool isFinestScaleSubsampled=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pyramid</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>abb67c96ba4cd05a509ef798347dd43a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfScales</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a801a036c109af994b7134392eea325a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfOrientations</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ab3605de71be1cc95d0e64c379c5b5f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSourceDataWidth</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a1ee95967bcbc2a896b1266d2efaf473a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSourceDataHeight</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a44376c2ab5ca5cfa652ae6b1033b656e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetScaleFactorResidualLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a055db0136edb3691b039c245e00c58e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleFactorResidualLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a5080ed43909c84318ee9d53034200ab5</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetScaleFactorResidualToRecursiveLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>af8f611187446fb18283b2d33bc2eae41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleFactorResidualToRecursiveLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>aea62523d2fec2f2f2aa9933d2d156570</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetScaleFactorRecursiveLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a149a38590026aaf790cdc311fd86bbf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleFactorRecursiveLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>aa91266e8e3832c81fb5b634e19295105</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>PyramidLevel&lt; T &gt; *</type>
      <name>GetRecursiveScale</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ac757904abb89fcf1ac83c92fd4743b38</anchor>
      <arglist>(int scale)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasResidualScale</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ac4d79cf62cc0c2a67f27fc3cb869865b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFinestScaleNumber</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>add7250322fb20f35877e9af023101403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PyramidLevel&lt; T &gt; *</type>
      <name>GetResidualScale</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a07b5bae72c00af2dccd8b2f6e0e805ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>GetLowpassResidual</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ae8a298377f5183da2ab9f1882f528ad0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLowpassResidual</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a2ccdba4b1080eb4c7a00d04964404b65</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExportBandsToPGM</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a104f64b1fbe757292d8802e202e1a837</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Pyramid&lt; T &gt; *</type>
      <name>Clone</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>aeb23a1360e3a2750ecb1bf592cabb943</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyValuesFrom</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ae3afa6b7063185239237b3a148a961b3</anchor>
      <arglist>(Pyramid&lt; T &gt; *pOtherPyramid)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetAverageConeRatioSubSampled</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a1e286e06f169e485daeb9ed75e80d491</anchor>
      <arglist>(int x, int y, int orientationNr, int coarsestScale, int finestScale)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetAverageConeRatioRedundant</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a075f978e0cc73eddcb9f3bdd978348f9</anchor>
      <arglist>(int x, int y, int orientationNr, int coarsestScale, int finestScale)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSubsampled</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a9d070b8b525cccbc39fbd386185ffb2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFinestScaleSubsampled</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a1893ae3d3d93a1c34f81ab4f3ecadc97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArrayGrid&lt; T &gt; *</type>
      <name>DownSampleGrid</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ac2bce1a21f6872dd8a2ff508205d53ff</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pBandIn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArrayGrid&lt; T &gt; *</type>
      <name>UpSampleGrid</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>aa775a08d70435ac69b4b4b64852e34a7</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pBandIn, int upSampledWidth, int upSampledHeight)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PyramidLevel&lt; T &gt; * &gt;</type>
      <name>mvpRecursivePyramidLevels</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a408df9110221a95c0f87fb2963f41678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PyramidLevel&lt; T &gt; *</type>
      <name>mpResidualPyramidLevels</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a0bf44a740397bdee6d8adbe2b36f44f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>mpLowPassResidual</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a53bc28e3aac260defde67840ec4dd3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>mpSourceDataGrid</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>add190dddd7ff80db1f45c55151a044b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsSubsampled</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ae6bad979119cd980845bbef25f24d205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsFinestScaleSubsampled</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>afabeffa29840c2bb31a6114bde365fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrScales</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a811f0f1a9732773fb6965ab0f607a36f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrOrientations</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a028ac278ae46e84c7842479e2373deae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mScaleFactorResidualLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>ad504d4057cf4662c74e8bc9fdcac69e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mScaleFactorResidualToRecursiveLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a4d7064194d31bd1eb1a3d2aa479fc926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mScaleFactorRecursiveLevel</name>
      <anchorfile>classstira_1_1image_1_1Pyramid.html</anchorfile>
      <anchor>a77a1a6b90ca716018f051ead96859999</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::PyramidLevel</name>
    <filename>classstira_1_1image_1_1PyramidLevel.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>PyramidLevel</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>aaacfd0c91c1107e6432f1daa8c24d12c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PyramidLevel</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>a7efc90f3a698b6da12749ddedcd681ad</anchor>
      <arglist>(const PyramidLevel&lt; T &gt; &amp;otherLevel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PyramidLevel</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>ae0ab14b39ce05441128ab1b1073c3f0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PyramidLevel&lt; T &gt; *</type>
      <name>Clone</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>a68c3fa4455e758da6ac35bd80de1177d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfOrientations</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>aef1ad87e721ed1bea2665fe94f170679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; T &gt; *</type>
      <name>GetOrientedBand</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>a9f83eb1ef37f3b180fbdc2f344eb8937</anchor>
      <arglist>(int orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddOrientedBand</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>a17918276a0effa75b942c6869845363a</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pBand)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveOrientedBand</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>a783d8bae626ceac5d70339e9eccd6356</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pBand)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceOrientedBand</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>a699d5075ab7328d14e709a68c4a0065e</anchor>
      <arglist>(int orientationIndex, ArrayGrid&lt; T &gt; *pBand)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearThisLevel</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>ac1f39f3f4a63c59df551ba15eb336a37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetWidth</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>a7fd4477ef065111f664d70eda5f47b9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHeight</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>addff7d8b9828c61d05b895bce47f59f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExportBandsToPGM</name>
      <anchorfile>classstira_1_1image_1_1PyramidLevel.html</anchorfile>
      <anchor>aa73baf025f29957d2ac2893590a3f6da</anchor>
      <arglist>(std::string token, int level)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::AffineTransform</name>
    <filename>classstira_1_1image_1_1AffineTransform.html</filename>
    <base>stira::image::GeometricTransform</base>
    <member kind="function">
      <type></type>
      <name>AffineTransform</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>ae0a1346481eddc1a8ba7168bd3c2c76f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AffineTransform</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a60a3a300ac98a482298d3b1255c342cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetA11</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a0f1094096052830654a94802ef681b0e</anchor>
      <arglist>(double a11)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetA11</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a89e68cf5d0cd5c0be894579a6a48d1a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetA12</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a129650457bf3c1dbffebe836283aad1e</anchor>
      <arglist>(double a12)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetA12</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a4ebe6dcbfe7151d3b9561082c12ce417</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetA21</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a20cf24045aa0e97660bce0e894f1b4f4</anchor>
      <arglist>(double a21)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetA21</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>ab46b821ec9823236a3d80f309094eb7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetA22</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a241ae9fde6360b5ed8cca5e0c693b7b7</anchor>
      <arglist>(double a22)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetA22</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a6ca7a2385ba9762651adab7e44c29e1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeltaX</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a7c6daf202c0d7344e62e46df4275866c</anchor>
      <arglist>(double dx)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDeltaX</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>af105697807ab1a6a58b2e94a54175dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeltaY</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>aba59fe99e62ac3e0b30dedb06ad17597</anchor>
      <arglist>(double dy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDeltaY</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a06ce02126afdee033450f5ad6fbd101b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDeterminant</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a59cbad46e476ba89784c47b1e5a472eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual common::Point&lt; double &gt;</type>
      <name>GetTransformedPoint</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>a3bf04bb2e75055b0ed6ae33cf613c089</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual common::Point&lt; double &gt;</type>
      <name>GetInverseTransformedPoint</name>
      <anchorfile>classstira_1_1image_1_1AffineTransform.html</anchorfile>
      <anchor>aff39df977899c8c8e2bd062f90689bcd</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::GeometricTransform</name>
    <filename>classstira_1_1image_1_1GeometricTransform.html</filename>
    <member kind="function">
      <type></type>
      <name>GeometricTransform</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>a9eb6d8ea03d45ffdc3f16e2facd78c54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GeometricTransform</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>a52263290e5c97a0ff984b0eeaa23f581</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Apply</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>a13e5da154f9aaa78e6314b647238cfe3</anchor>
      <arglist>(Image *pImageIn)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>ApplyInverse</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>a7349763f5829ef6de00d6d07e5a98254</anchor>
      <arglist>(Image *pImageIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInterpolatorType</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>a91cd7ac6b6ad7df9a21654446f5594af</anchor>
      <arglist>(InterpolatorType type)</arglist>
    </member>
    <member kind="function">
      <type>InterpolatorType</type>
      <name>GetInterpolatorType</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>a4e60f7f3b8a6e58beb87965ae5aec311</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual common::Point&lt; double &gt;</type>
      <name>GetTransformedPoint</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>a62673c807d2650a5676144aa881b8039</anchor>
      <arglist>(double x, double y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual common::Point&lt; double &gt;</type>
      <name>GetInverseTransformedPoint</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>af29f55482334013dda6762f62480bec1</anchor>
      <arglist>(double x, double y)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InterpolatorType</type>
      <name>mInterpolatorType</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>aac9aa39560fcb755eddb5e2aee0a2569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Interpolator *</type>
      <name>mpInterpolator</name>
      <anchorfile>classstira_1_1image_1_1GeometricTransform.html</anchorfile>
      <anchor>aeb20bfc9fefdcbf1d91f79e917242a6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::RigidTransform</name>
    <filename>classstira_1_1image_1_1RigidTransform.html</filename>
    <base>stira::image::GeometricTransform</base>
    <member kind="function">
      <type></type>
      <name>RigidTransform</name>
      <anchorfile>classstira_1_1image_1_1RigidTransform.html</anchorfile>
      <anchor>a27182e9bb966c4daf8f2958091115216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RigidTransform</name>
      <anchorfile>classstira_1_1image_1_1RigidTransform.html</anchorfile>
      <anchor>a0912d46cb72e36b53371fb0af0436eaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTheta</name>
      <anchorfile>classstira_1_1image_1_1RigidTransform.html</anchorfile>
      <anchor>acece8d299160bfed97faebeeb7be777a</anchor>
      <arglist>(double theta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeltaX</name>
      <anchorfile>classstira_1_1image_1_1RigidTransform.html</anchorfile>
      <anchor>a8043047996a3290aae16823d6ec5ac20</anchor>
      <arglist>(double dx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeltaY</name>
      <anchorfile>classstira_1_1image_1_1RigidTransform.html</anchorfile>
      <anchor>ad94150c0f229f63dc619aa98a4a81768</anchor>
      <arglist>(double dy)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>RotateAroundCenter</name>
      <anchorfile>classstira_1_1image_1_1RigidTransform.html</anchorfile>
      <anchor>a488aefba6993e886ab64eef64def38ac</anchor>
      <arglist>(Image *pImageIn, double theta)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>RotateAroundCenter</name>
      <anchorfile>classstira_1_1image_1_1RigidTransform.html</anchorfile>
      <anchor>ad8c701b47479290707013bda07b7cd42</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridIn, double theta)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::Translation</name>
    <filename>classstira_1_1image_1_1Translation.html</filename>
    <base>stira::image::GeometricTransform</base>
    <member kind="function">
      <type></type>
      <name>Translation</name>
      <anchorfile>classstira_1_1image_1_1Translation.html</anchorfile>
      <anchor>a63b5ce9219c974d88347c56eff79fa09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Translation</name>
      <anchorfile>classstira_1_1image_1_1Translation.html</anchorfile>
      <anchor>a0292db5fc3cffb887f549df454ebee89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeltaX</name>
      <anchorfile>classstira_1_1image_1_1Translation.html</anchorfile>
      <anchor>a25fca7d55532012845f812de65bf6ed8</anchor>
      <arglist>(double dx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDeltaY</name>
      <anchorfile>classstira_1_1image_1_1Translation.html</anchorfile>
      <anchor>a1138eb453def5de343b54eeff40b951b</anchor>
      <arglist>(double dy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ArrayGridTools</name>
    <filename>classstira_1_1image_1_1ArrayGridTools.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ArrayGridTools</name>
      <anchorfile>classstira_1_1image_1_1ArrayGridTools.html</anchorfile>
      <anchor>af1651d3bfd61d0e40bd1d618ac2400cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayGridTools</name>
      <anchorfile>classstira_1_1image_1_1ArrayGridTools.html</anchorfile>
      <anchor>ae19115cd0bdd79932910905f47768ccc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>DownSampleGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGridTools.html</anchorfile>
      <anchor>a9bf97a511f1f44d0b60f5ef9a2d99b37</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGridIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>UpSampleGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGridTools.html</anchorfile>
      <anchor>ad4bad52293ba6b4290ab5559aff05449</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGridIn, int upSampledWidth, int upSampledHeight, double myFactor=4.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>CreateGridFromArray</name>
      <anchorfile>classstira_1_1image_1_1ArrayGridTools.html</anchorfile>
      <anchor>adfbc1c430af70c36239698b0220f2529</anchor>
      <arglist>(T *pArray, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>CreateArrayFromGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGridTools.html</anchorfile>
      <anchor>a1eea62b3848ee0e45f33cf4a63d92801</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGridIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>ExtractSubGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGridTools.html</anchorfile>
      <anchor>a70f375a3c9cb48d316c3b6d395c3c4c7</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGridIn, int xTop, int yTop, int xBottom, int yBottom)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>InsertSubGrid</name>
      <anchorfile>classstira_1_1image_1_1ArrayGridTools.html</anchorfile>
      <anchor>a0522598cfde3c873ff39da96fc96014c</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pMasterGrid, ArrayGrid&lt; T &gt; *pSubGrid, int xTop, int yTop, int xBottom, int yBottom)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::BilinearInterpolator</name>
    <filename>classstira_1_1image_1_1BilinearInterpolator.html</filename>
    <base>stira::image::Interpolator</base>
    <member kind="function">
      <type></type>
      <name>BilinearInterpolator</name>
      <anchorfile>classstira_1_1image_1_1BilinearInterpolator.html</anchorfile>
      <anchor>afeede5121ca8116be4f49e572bb1efee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BilinearInterpolator</name>
      <anchorfile>classstira_1_1image_1_1BilinearInterpolator.html</anchorfile>
      <anchor>afa6212450cabe5d3fb657d62f0a9525e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>Run</name>
      <anchorfile>classstira_1_1image_1_1BilinearInterpolator.html</anchorfile>
      <anchor>a34fc3b12fe400557cf17fd909ac8c3ef</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, double x, double y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Run</name>
      <anchorfile>classstira_1_1image_1_1BilinearInterpolator.html</anchorfile>
      <anchor>ad4bd1e85c0eec813144b737c6061ab02</anchor>
      <arglist>(double x1, double x2, double y1, double y2, double I11, double I12, double I21, double I22, double x, double y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::DrawImageTools</name>
    <filename>classstira_1_1image_1_1DrawImageTools.html</filename>
    <member kind="function">
      <type></type>
      <name>DrawImageTools</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a4f0f87c2e36a015d3e6faf463259bbb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DrawImageTools</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>aea44e124f55e54e2b13a7da7c3416a96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawSquare</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a6830d4e348ef457c7c720856bbb6a7b1</anchor>
      <arglist>(Image *pImageInOut, common::Point&lt; int &gt; myCenterPoint, int halfLength, ColorValue newColor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>af3240b21089480e8d1b0112adb3d0cda</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridInOut, common::Point&lt; int &gt; myTopLeftPoint, common::Point&lt; int &gt; myBottomRightPoint, double newValue, bool fillSurface)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a6740ea39344c34f0fe9103c7d89ecbfe</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridInOut, common::RectangularROI&lt; int &gt; rroi, double newValue, bool fillSurface)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a9688927b11dfe20ade1272a9673697c3</anchor>
      <arglist>(Image *pImageInOut, common::Point&lt; int &gt; myTopLeftPoint, common::Point&lt; int &gt; myBottomRightPoint, double newValue, bool fillSurface)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>abdf3e0977c3784d835aa48dd8d34590f</anchor>
      <arglist>(Image *pImageInOut, common::RectangularROI&lt; int &gt; rroi, double newValue, bool fillSurface)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a5616c2764b5eea47799569ee2838bf39</anchor>
      <arglist>(Image *pImageInOut, common::Point&lt; int &gt; myTopLeftPoint, common::Point&lt; int &gt; myBottomRightPoint, ColorValue newColorValue, bool fillSurface)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawRectangle</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a7711b40ab9b7d13ffc10aa7ebbdae824</anchor>
      <arglist>(Image *pImageInOut, common::RectangularROI&lt; int &gt; rroi, ColorValue newColorValue, bool fillSurface)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawCircle</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>ac80d38a7eb27fcaa1f51991776c18a96</anchor>
      <arglist>(Image *pImageInOut, common::Point&lt; int &gt; myCenterPoint, double radius, ColorValue newColor=ColorValue(255, 0, 0, TYPE_RGB))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; common::Point&lt; int &gt; &gt;</type>
      <name>DrawLine</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a9ef04b5d207938fde72875503dff96ab</anchor>
      <arglist>(Image *pImageInOut, int xStart, int xStop, int yStart, int yStop, ColorValue newColor=ColorValue(255, 0, 0, TYPE_RGB))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; common::Point&lt; int &gt; &gt;</type>
      <name>DrawLine</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a7bd3c04e97a2151d141ce60fd17e4c58</anchor>
      <arglist>(Image *pImageInOut, common::Point&lt; int &gt; startPoint, common::Point&lt; int &gt; stopPoint, ColorValue newColor=ColorValue(255, 0, 0, TYPE_RGB))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawPoint</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a31c50aee6d0d783febaedba045fa5aef</anchor>
      <arglist>(Image *pImageInOut, int x, int y, ColorValue newColor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawPoint</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>aa8b23e319624bb9972b7bda0972b7670</anchor>
      <arglist>(Image *pImageInOut, common::Point&lt; int &gt; myPoint, ColorValue newColor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawPoints</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>aab0667d4824dceb150603e9e56885701</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridInOut, std::vector&lt; common::Point&lt; int &gt; &gt; vPoints, double newValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawPoints</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a22e8a78c5f328cb9268428a2ebce99e9</anchor>
      <arglist>(Image *pImageInOut, std::vector&lt; common::Point&lt; int &gt; &gt; vPoints, ColorValue newColor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>DrawBoolOnInput</name>
      <anchorfile>classstira_1_1image_1_1DrawImageTools.html</anchorfile>
      <anchor>a554fd6043897b67a6e188026ffec7c53</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, ArrayGrid&lt; bool &gt; *pGridBool, ColorValue cv=ColorValue(255, 0, 0, TYPE_RGB))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::GenerateFractal</name>
    <filename>classstira_1_1image_1_1GenerateFractal.html</filename>
    <member kind="function">
      <type></type>
      <name>GenerateFractal</name>
      <anchorfile>classstira_1_1image_1_1GenerateFractal.html</anchorfile>
      <anchor>aba80b15d4a49381b89e72133dc7e8a12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GenerateFractal</name>
      <anchorfile>classstira_1_1image_1_1GenerateFractal.html</anchorfile>
      <anchor>a6b68cb2e077754d906eeba13aa225885</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>CreateMandelbrot</name>
      <anchorfile>classstira_1_1image_1_1GenerateFractal.html</anchorfile>
      <anchor>a0177d4dd32155f5666fbddd5801eaa3b</anchor>
      <arglist>(double topX, double topY, double bottomX, double bottomY, double resolution)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>CreateJulia</name>
      <anchorfile>classstira_1_1image_1_1GenerateFractal.html</anchorfile>
      <anchor>a3e68c1c9e307f35af2554c87f6c483a9</anchor>
      <arglist>(double topX, double topY, double bottomX, double bottomY, double resolution, double Cx, double Cy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxNumberOfIterations</name>
      <anchorfile>classstira_1_1image_1_1GenerateFractal.html</anchorfile>
      <anchor>a7ceee3b72a87088d53fea18391311e57</anchor>
      <arglist>(int maxNr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEscapeRadiusSquared</name>
      <anchorfile>classstira_1_1image_1_1GenerateFractal.html</anchorfile>
      <anchor>a46dafdb9b45d95cb0f8264184445d3cd</anchor>
      <arglist>(double radiusSquared)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::GridConverter</name>
    <filename>classstira_1_1image_1_1GridConverter.html</filename>
    <member kind="function">
      <type></type>
      <name>GridConverter</name>
      <anchorfile>classstira_1_1image_1_1GridConverter.html</anchorfile>
      <anchor>a902e2462d57e0edd02f64c2f05d9230b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; int &gt; *</type>
      <name>ConvertToInt</name>
      <anchorfile>classstira_1_1image_1_1GridConverter.html</anchorfile>
      <anchor>a1a236871d94ece7fc95506204291e14b</anchor>
      <arglist>(ArrayGrid&lt; bool &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; int &gt; *</type>
      <name>ConvertToInt</name>
      <anchorfile>classstira_1_1image_1_1GridConverter.html</anchorfile>
      <anchor>a14d1b55eaf9313b485fe46d13759fc83</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ConvertToDouble</name>
      <anchorfile>classstira_1_1image_1_1GridConverter.html</anchorfile>
      <anchor>a3798dc579560e39784e53859983cc09d</anchor>
      <arglist>(ArrayGrid&lt; bool &gt; *pGrid, double factor=1.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ConvertToDouble</name>
      <anchorfile>classstira_1_1image_1_1GridConverter.html</anchorfile>
      <anchor>a6598eb137c2af65655ab5e5a4f9394ec</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::GridExtender</name>
    <filename>classstira_1_1image_1_1GridExtender.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>GridExtender</name>
      <anchorfile>classstira_1_1image_1_1GridExtender.html</anchorfile>
      <anchor>a0400061c5bd92c67f6c97be2969d42cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GridExtender</name>
      <anchorfile>classstira_1_1image_1_1GridExtender.html</anchorfile>
      <anchor>a91a39b363f8ea84be3d1258f18a77802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>ExtendBottomRight</name>
      <anchorfile>classstira_1_1image_1_1GridExtender.html</anchorfile>
      <anchor>af911a720f3d8f137c311a88340bc2d97</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int bottomWidth, int rightWidth, ExtensionType type=EXTEND_ZERO)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>MirrorBorder</name>
      <anchorfile>classstira_1_1image_1_1GridExtender.html</anchorfile>
      <anchor>a9f11ab3a652e6f8779514309b64598d5</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int borderWidth, int borderHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>PaddBorder</name>
      <anchorfile>classstira_1_1image_1_1GridExtender.html</anchorfile>
      <anchor>a9f4da484b3c350312c338ee52e8ccf51</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int borderWidth, int borderHeight, T myValue=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>CropBorder</name>
      <anchorfile>classstira_1_1image_1_1GridExtender.html</anchorfile>
      <anchor>a9e78735334b6e1ea3ffb83a4592b3524</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int borderWidth, int borderHeight)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::GridGenerator</name>
    <filename>classstira_1_1image_1_1GridGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>GridGenerator</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>ac70eb8e2fe3b1b9ca30a315e98d258eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GridGenerator</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>ab14effb303e6763a0d072a0543801c2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateEmpty</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>aa4e7b6597aecbfe8090c025d4f7407fc</anchor>
      <arglist>(int width=256, int height=256, double intensity=127.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateEmptyPlusGaussianNoise</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a9d01c394b9843427675bb0540fd3f550</anchor>
      <arglist>(int width=256, int height=256, double intensity=127.0, double sigma=10.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateHorizontalGradient</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a786780157c580e3f17c7dcf5fac47cfb</anchor>
      <arglist>(int width=256, int height=256)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateVerticalGradient</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a0d0e6c696f7f148f6f29a28e528cf956</anchor>
      <arglist>(int width=256, int height=256)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateHorizontalSineWave</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a3b7009c8b00b613982b703417a3e4c55</anchor>
      <arglist>(int width, int height, double frequency)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateVerticalSineWave</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a6e95b3219ca9aff2e9a8295bbb724487</anchor>
      <arglist>(int width, int height, double frequency)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateEuclideanSpots</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>adef689bab55e4b6d982d3ceb6dd90a7f</anchor>
      <arglist>(int width, int height, double frequency)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateStarChart</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a6f5d96b6c453fe743d3bc0ec4015f1ac</anchor>
      <arglist>(int sideSize, int nrPeriods)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateBars</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a0238d7c73eb8f79f4d1935355949e789</anchor>
      <arglist>(int width, int height, int barWidth=50)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateLine</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a4b9b6ce52d6f475ae3eddfca08810b12</anchor>
      <arglist>(int width, int height, double length, double angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateSquare</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a2474983f63526b569bd0d94a09713b10</anchor>
      <arglist>(int width, int height, double suqareWidth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateDisk</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>adba53715866bfbc0baf0e645d1cf93cb</anchor>
      <arglist>(int width, int height, double diskWidth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateAiry</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>acdd28f8bb379c4d66fd3d777317abbdf</anchor>
      <arglist>(int width, int height, double airyWidth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussian</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a0c8d0de48b55340dfa15c6f0fb87da3f</anchor>
      <arglist>(int width, int height, double sigma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussian</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a8434756d720e9c54a0a2725902e0bbef</anchor>
      <arglist>(int width, int height, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussian</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a7967f285795c57c7adcfde9c416d1929</anchor>
      <arglist>(int width, int height, double sigma1, double sigma2, double rho)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussianFirstDerivativeX</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>ac26962a7bfc3e773c2d9392ac4da7134</anchor>
      <arglist>(int width, int height, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussianFirstDerivativeY</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>af4fcb85b715504355fd8085ea5bd0aa6</anchor>
      <arglist>(int width, int height, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussianSecondDerivativeX</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>ae50bb05372fd75924a5b9b742c0d708f</anchor>
      <arglist>(int width, int height, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussianSecondDerivativeY</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a17d30bae2bc5e82014a8361c37b0aa9d</anchor>
      <arglist>(int width, int height, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateGaussianMixedDerivativesXY</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a9dd3db3719eb754b3f765e455bc5d827</anchor>
      <arglist>(int width, int height, double sigmaX, double sigmaY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateDeltaPeak</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>acd2a3e206fe4bc259f928d116f6bfceb</anchor>
      <arglist>(int width, int height, int x, int y, double intensity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateInverseZonePlate</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a046721f4f37e5eb626c0770e654ee37e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateZonePlate</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a82948ba8627ae75f0d3cc423a3e2ccf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateLogFrequencyContrastChart</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>aded3f6a05b6a0d442958268481f677c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>GenerateSheppLogan</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>afec4aa73783d12cc5925fd9f686b970c</anchor>
      <arglist>(double factor=1.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; int &gt; *</type>
      <name>GenerateIsingTexture</name>
      <anchorfile>classstira_1_1image_1_1GridGenerator.html</anchorfile>
      <anchor>a686f2650f66035d2f3e6b2c778877e78</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ImageIO</name>
    <filename>classstira_1_1image_1_1ImageIO.html</filename>
    <member kind="enumeration">
      <name>outputType</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ad0b90f451dcdde1070a6cd25ff528695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NULL_OUT</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ad0b90f451dcdde1070a6cd25ff528695a8aa81c04cfc362815324223324358033</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRADIENT_OUT</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ad0b90f451dcdde1070a6cd25ff528695ac0e950a1666afa8c801d50d38b46fc4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NORMAL_OUT</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ad0b90f451dcdde1070a6cd25ff528695a70fe407aeead94be93489b08bee93892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OUT</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ad0b90f451dcdde1070a6cd25ff528695a0b9eae918d187a75cc3e82d4dfa837b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSOLUTE_NORM_OUT</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ad0b90f451dcdde1070a6cd25ff528695a7b123394b27167f7869e9970cfd6242c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSOLUTE_POS_OUT</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ad0b90f451dcdde1070a6cd25ff528695a73653c029a1c4c3bed901a82aa567172</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSOLUTE_NEG_OUT</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ad0b90f451dcdde1070a6cd25ff528695ab7517a5d6846bcdd840598114965bea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageIO</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a979470b3fd0deee7b0eba3ff35e0f57f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImageIO</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ab0dbbf15848c4bf75b5801bb86300c8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>Read</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ab9b1726648d55d8dac28d20e9111c697</anchor>
      <arglist>(std::string fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; int &gt; *</type>
      <name>ReadPGMasInt</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ae14245b5913ce7bc84eeebf6201dc5d4</anchor>
      <arglist>(std::string fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Write</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>af8c85b2046c8a43e63421fef8b6cdbe7</anchor>
      <arglist>(Image *pImage, std::string fname, outputType outtype=NULL_OUT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>WritePGM</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a9d1352b8aa3c5722bd156466b00b166c</anchor>
      <arglist>(ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGrid, std::string fileName, outputType outtype=NULL_OUT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WritePGM</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a64078bfb182af20af242f686eb88eb5a</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, std::string fileName, outputType outtype=NULL_OUT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WritePGM</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a8e609fbcf2cc7a25bdb83b8855fbf79a</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, std::string fileName, outputType outtype=NULL_OUT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WritePGM</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>abec3ac89d90d261f0a6dcf6c55bd2b50</anchor>
      <arglist>(ArrayGrid&lt; bool &gt; *pGrid, std::string fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteTXT</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a53f74fb30382f540d89449b36ca747ba</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, std::string fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetOpenCvGrayValue</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a3e258c7156404ef2a5872365bcbe34cb</anchor>
      <arglist>(IplImage *pIplImage, int x, int y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetOpenCvGrayValue</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a428ef9db8f830dfc2cd56bd0efd52d6a</anchor>
      <arglist>(IplImage *pIplImage, int x, int y, double value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetOpenCvColorValue</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>aee5ddf0a1f52ab5bede08e9d7e398caa</anchor>
      <arglist>(IplImage *pIplImage, int x, int y, int bandNr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetOpenCvColorValue</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a9402029c96cb605920560c69a929f35a</anchor>
      <arglist>(IplImage *pIplImage, int x, int y, int bandNr, double value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ConvertOpenCvToDoubleArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ab86f25a8c3a6e0248aab554bd5261de2</anchor>
      <arglist>(IplImage *pIplImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ConvertOpenCvToDoubleArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a7d040f2f6ce7919a5fa4b9808b585dbf</anchor>
      <arglist>(IplImage *pIplImage, ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; bool &gt; *</type>
      <name>ConvertOpenCvToBooleanArrayGrid</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a644cba889f0d2af7c06a1a5b5b198906</anchor>
      <arglist>(IplImage *pIplImage, double threshold=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IplImage *</type>
      <name>ConvertArrayGridToOpenCv</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a5a63c0c1664377b6f127b3a7e5f6e807</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridIn, IplImage *pImgOut)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>ConvertOpenCvToImage</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a1a212f20fe0dfa714f053584454eb0e3</anchor>
      <arglist>(IplImage *pIplImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IplImage *</type>
      <name>ConvertImageToOpenCv</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a0be711d0effc9b7984ec7c5ea3c14759</anchor>
      <arglist>(Image *pImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>ReadImageOpenCV</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>ae3e0de50bf45ddfcb6397ebaac7e78a5</anchor>
      <arglist>(std::string fname, bool useBGR=false, bool useROI=false, common::RectangularROI&lt; int &gt; myImageROI=common::RectangularROI&lt; int &gt;(0, 0, 0, 0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ReadArrayOpenCVAsDouble</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a0c2edd6526c9624c4a41d218e4d9eb9c</anchor>
      <arglist>(std::string fname, ArrayGrid&lt; double &gt; *pGrid=0, bool useROI=false, common::RectangularROI&lt; int &gt; myImageROI=common::RectangularROI&lt; int &gt;(0, 0, 0, 0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; int &gt; *</type>
      <name>ReadArrayOpenCVAsInt</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a15f96b0d7ad2adc7e7a2d75b140c8333</anchor>
      <arglist>(std::string fname, bool useROI=false, common::RectangularROI&lt; int &gt; myImageROI=common::RectangularROI&lt; int &gt;(0, 0, 0, 0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteOpenCV</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a952eee6cc8cb6edf5c3a1ef2d1198dfe</anchor>
      <arglist>(Image *pImage, std::string fname, outputType outtype=NORMAL_OUT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteOpenCV</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>afed371f406a213663748cba4df10a614</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, std::string fname, outputType outtype=NORMAL_OUT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteOpenCV</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>afd25bb0f670bf7c02d5fba6907e2e646</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, std::string fname, outputType outtype=NORMAL_OUT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>WriteOpenCV</name>
      <anchorfile>classstira_1_1image_1_1ImageIO.html</anchorfile>
      <anchor>a5b6eaefb748c774aaca132749c788c9c</anchor>
      <arglist>(ArrayGrid&lt; bool &gt; *pGrid, std::string fname)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::image::myMinMax</name>
    <filename>structstira_1_1image_1_1myMinMax.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>min</name>
      <anchorfile>structstira_1_1image_1_1myMinMax.html</anchorfile>
      <anchor>a38ae126d9e4dbf351b2a601ed19b596a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>max</name>
      <anchorfile>structstira_1_1image_1_1myMinMax.html</anchorfile>
      <anchor>a7943338e53f5bb630afe1bbc18462e9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::ImageTools</name>
    <filename>classstira_1_1image_1_1ImageTools.html</filename>
    <member kind="function">
      <type></type>
      <name>ImageTools</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>aed903e3c3ec025a5605b374c40794643</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImageTools</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a9e31ab00697afe87bb08a5f9cd48fdc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>MirrorBorder</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>ac9ae211098764c3ab184b53de26ebc3c</anchor>
      <arglist>(Image *pInImage, int borderWidth, int borderHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>CropBorder</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>ab948d274d889013d96b4d3d2c842456a</anchor>
      <arglist>(Image *pInImage, int borderWidth, int borderHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>PaddBorder</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a782f226a6df2274b48737c55000f1f3a</anchor>
      <arglist>(Image *pInImage, int borderWidth, int borderHeight, double paddingValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>ExtractSubImage</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>ae6b10e366bd733f8e4c8e8180b9515fa</anchor>
      <arglist>(Image *pInImage, common::Point&lt; int &gt; topLeft, common::Point&lt; int &gt; bottomRight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>CreateImageSSD</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>aa0ace5c46b24ffeab328d2dbcb7e8d24</anchor>
      <arglist>(Image *pImage1, Image *pImage2, bool printOutput=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeMSE</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a3d18eb3e9a737bdbaf51b7bf5be4c59b</anchor>
      <arglist>(Image *pImage1, Image *pImage2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputePSNR</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>ac6752c35ab51e0c236c0dde29673592e</anchor>
      <arglist>(Image *pImage1, Image *pImage2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>CreateImageSSIM</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>aeef58b927169febdee36c30a083814a9</anchor>
      <arglist>(Image *pImage1, Image *pImage2, int localWindowSize=9)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CompareColorCurveInImages</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a8d63692b0403bd0d068ed679d6a434a4</anchor>
      <arglist>(Image *pImage1, Image *pImage2, ColorValue compareColor, int dyTollerance, double &amp;averageDistance, double &amp;nrPixelsOverTolerance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; double &gt;</type>
      <name>GetColorMappingFactors</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a1a90244293d6b666bf2de9aa0f220f2d</anchor>
      <arglist>(Image *pImage1, Image *pImage2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>CreateCheckeredImage</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a99d179972967fd476422b310ee6ced9c</anchor>
      <arglist>(Image *pImage1, Image *pImage2, int blockSize=35)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>CreateTransparantlyMixedImage</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>aa6a212a380e586b3b12651d589e72f81</anchor>
      <arglist>(Image *pImage1, Image *pImage2, double thisWeight=0.5)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>ApplyGamma</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a52c6ef03d986c48675cfd3e83f7c1740</anchor>
      <arglist>(Image *pInImage, double gamma)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>CreateLinearRescaledImage</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a2fc88f6c9922b8b4a7c349e272e7dc03</anchor>
      <arglist>(Image *pImage, bool bandsIndependent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>ApplyJetColorMap</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a1a71afb454ae73eadc022a34ee3c39c9</anchor>
      <arglist>(Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>ConvertToGrayImage</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>ae98a8694e5bdf8ac612da8108f07df2a</anchor>
      <arglist>(Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>ConvertToSepiaImage</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>afa96eeed9ab421b28095e4de1d547fb7</anchor>
      <arglist>(Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>Negative</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a09d86fc3c6844614c64bb09cbd9e6296</anchor>
      <arglist>(Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>Rotate90DegreesClockwise</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a2d4a7fbddfe1c99243918437df5aad1a</anchor>
      <arglist>(Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>Rotate90DegreesCounterClockwise</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a36a51fbf4779da78e2f52e7079714aed</anchor>
      <arglist>(Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>Rotate180Degrees</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>a0f59a739c33c019c47d541f4f4e0e97a</anchor>
      <arglist>(Image *pInImage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetLocalDarkChannel</name>
      <anchorfile>classstira_1_1image_1_1ImageTools.html</anchorfile>
      <anchor>aafa5e479805ef1195f6a8a4c32c75ffd</anchor>
      <arglist>(Image *pImage, int xLocalCenter, int yLocalCenter, int windowSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::Interpolator</name>
    <filename>classstira_1_1image_1_1Interpolator.html</filename>
    <member kind="function">
      <type></type>
      <name>Interpolator</name>
      <anchorfile>classstira_1_1image_1_1Interpolator.html</anchorfile>
      <anchor>afa49b2ac25be93d5cbb0c877b1d2a469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Interpolator</name>
      <anchorfile>classstira_1_1image_1_1Interpolator.html</anchorfile>
      <anchor>a905e8019fdfcbe4171a12808a9ad8527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>Run</name>
      <anchorfile>classstira_1_1image_1_1Interpolator.html</anchorfile>
      <anchor>ad2dc948fc55bc63f3c6c08ace8ce4c95</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, double x, double y)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::NearestNeighborInterpolator</name>
    <filename>classstira_1_1image_1_1NearestNeighborInterpolator.html</filename>
    <base>stira::image::Interpolator</base>
    <member kind="function">
      <type></type>
      <name>NearestNeighborInterpolator</name>
      <anchorfile>classstira_1_1image_1_1NearestNeighborInterpolator.html</anchorfile>
      <anchor>a4d1bc5e7584951b7c0c6dc1380b1b1c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NearestNeighborInterpolator</name>
      <anchorfile>classstira_1_1image_1_1NearestNeighborInterpolator.html</anchorfile>
      <anchor>a7c3d490a3f62498bcb60d36060fbfac4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>Run</name>
      <anchorfile>classstira_1_1image_1_1NearestNeighborInterpolator.html</anchorfile>
      <anchor>ad978510a14ca956154dfed6b388c8898</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, double x, double y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::NumberGridTools</name>
    <filename>classstira_1_1image_1_1NumberGridTools.html</filename>
    <templarg></templarg>
    <base>stira::image::ArrayGridTools</base>
    <member kind="function">
      <type></type>
      <name>NumberGridTools</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>aa75df0e0a48229d98c770d59924b69f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NumberGridTools</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a422f61d9ac7e01253d8405b577f65f69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DiagnoseReal</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a2fe39f6302296e60bff95a196236be3c</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, std::string fileName=std::string(&quot;&quot;))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CopyValues</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a7642278e6cd1564caaae5ed31c7fead9</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pSourceGrid, ArrayGrid&lt; T &gt; *pDestinationGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CountNANandINF</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>abbd747fe77f346a688874620b9a4b7cb</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int &amp;nrNAN, int &amp;nrINF, std::string ID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CleanNANandINF</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>aba0abd03620d84894b31174e74d3371c</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>CountZero</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a60e69b2e83237612784146b1b3256cd3</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>GetMinMax</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a7ad765f4af90417b841b3081ebea7753</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, double &amp;mmin, double &amp;mmax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>GetMinMax</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a0d32eb68ad661f6085cfd1b902453969</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, double &amp;mmin, double &amp;mmax, int &amp;xMin, int &amp;yMin, int &amp;xMax, int &amp;yMax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>GetMin</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>aae97c3a53feff10a1a0012175ad6c007</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, double &amp;mmin, int &amp;xMin, int &amp;yMin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>GetMax</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a2bc83dc73fb3e9f637c1a163d42402c4</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, double &amp;mmax, int &amp;xMax, int &amp;yMax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetAbsMax</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a3f35776d3ceabedbfaa4d7cb40cd7ff6</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetGridIntegral</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ac3b3a7899978ceb974824ce0de90f71e</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetSquaredNorm</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a3cc5a5e2dd66df3c66e7e17a88453e14</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetSquaredNorm</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a4e34e4fed22e11e2a0a522e133dc19c7</anchor>
      <arglist>(ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetGridMean</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ad1ff1b19dc02cc0a364fbb92a27f6598</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetGridVariance</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a01e6d544838b8960d1078c664d202938</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, T mean)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetGridKurtosis</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a70f1d674f83f984269936d3806a67385</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetGridKurtosis</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>aecf3cfa4e840cec12b3e292051fc71dd</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, T gridMean, T gridvariance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RescaleGrid</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>aaeadac8b92e866f7988902a7b108fa38</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, T desiredMin, T desiredMax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; common::IntensityPoint &gt;</type>
      <name>ProjectGridOnX</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a907fc768b25a54ca5bf5688d7beaae35</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; common::IntensityPoint &gt;</type>
      <name>ProjectGridOnX</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a20307fe37d4eef7ce04e53dbc9a51857</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int xTopLeft, int yTopLeft, int xBottomRight, int yBottomRight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; common::IntensityPoint &gt;</type>
      <name>ProjectGridOnY</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a072c0eae7c14a72c1f7d6975f71ae22a</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; common::IntensityPoint &gt;</type>
      <name>ProjectGridOnY</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a3549739670a70ffcf92743ef1c7904ff</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int xTopLeft, int yTopLeft, int xBottomRight, int yBottomRight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetLocalMinimum</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a432f6b0d232f88633b69e86756efc64a</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y, int localWindowWidth, int localWindowHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetLocalMaximum</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>afcf72ede1b258c16f1797ff267d899c6</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y, int localWindowWidth, int localWindowHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetLocalAbsMaximum</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a906af9270a0c5b7e97add22ef43ea28d</anchor>
      <arglist>(ArrayGrid&lt; int &gt; *pGrid, int x, int y, int localWindowWidth, int localWindowHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetLocalAbsMaximum</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ac760ed53999b5ebd08e2e9af3ca76a26</anchor>
      <arglist>(ArrayGrid&lt; float &gt; *pGrid, int x, int y, int localWindowWidth, int localWindowHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetLocalAbsMaximum</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a926a6b2b1fd2c627b89cc689f660957d</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int x, int y, int localWindowWidth, int localWindowHeight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>ComputeLocalMean</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a9124e4e8128c0303764fae8413bfd9c0</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int &amp;xTopLeft, int &amp;yTopLeft, int &amp;xBottomRight, int &amp;yBottomRight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLocalMean</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>af4e5c526249710e2bb096c01624597fa</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, common::RectangularROI&lt; int &gt; rroi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLocalVariance</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>aa15addbe5fabde8d91a0e42ac470d590</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, common::RectangularROI&lt; int &gt; rroi, double thisMean)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>ComputeLocalMeanColumn</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>abe240c9713d229e80e7c6dd3ab075a6f</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int &amp;yTop, int &amp;yBottom)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>ComputeLocalMeanAlongLineUp</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a9b3a3669dc3c7afba712bc76dcb73dbf</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y, double angle, int &amp;nrLinesUp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>ComputeLocalMeanAlongLineDown</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a8bc69a1db287afe3f51d905a27028aba</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y, double angle, int &amp;nrLinesDown)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLocalVarianceColumn</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a7b3ed42cd6e94c9615cd97b45989cf60</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int x, int &amp;yTop, int &amp;yBottom, double thisMean)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>ComputeLocalAbsoluteMean</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a3a6d856d4f8bf5735bdd8e8d22d72b76</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int &amp;xTopLeft, int &amp;yTopLeft, int &amp;xBottomRight, int &amp;yBottomRight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeMeanTrapeziumRoi</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a91293af9ed63b175b673e39093fc117a</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int &amp;xTopLeft, int &amp;xTopRight, int &amp;yTop, int &amp;xBottomLeft, int &amp;xBottomRight, int &amp;yBottom)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeVarianceTrapeziumRoi</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>adb512d171ab3ea8b932606cfd95c232d</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int &amp;xTopLeft, int &amp;xTopRight, int &amp;yTop, int &amp;xBottomLeft, int &amp;xBottomRight, int &amp;yBottom)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLocalVariance</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a24bcbc39c6ef09f610497120529efd53</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int &amp;xTopLeft, int &amp;yTopLeft, int &amp;xBottomRight, int &amp;yBottomRight, double thisMean)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLocalVariance</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a52fbe2f74fc4fe52da47663e06cbd8a2</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int &amp;xTopLeft, int &amp;yTopLeft, int &amp;xBottomRight, int &amp;yBottomRight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLocalCovariance</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a0f10e6426014931c245b4a9912acebb0</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2, int &amp;xTopLeft, int &amp;yTopLeft, int &amp;xBottomRight, int &amp;yBottomRight, double mean1, double mean2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLocalKurtosis</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>abe0d36327040b62149cf1cab9c1e8e33</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int &amp;xTopLeft, int &amp;yTopLeft, int &amp;xBottomRight, int &amp;yBottomRight, double localMean, double localVariance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLocalKurtosis</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a2d707d8d58b35febd294045dbbe9b5d4</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int &amp;xTopLeft, int &amp;yTopLeft, int &amp;xBottomRight, int &amp;yBottomRight)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>CreateSquaredErrorGrid</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>abcbf0f77a18ee9e7d41942a784137d2b</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2, bool printOutput=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeMSE</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a8f9ecb12271212e3b90685f6e8c04448</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeMSEinROI</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a3206db28b06e6cb512d0801ca263c1c4</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2, int topLeftX, int topLeftY, int bottomRightX, int bottomRightY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputePSNR</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a25ff7096723a75766ab3798f59b77ec1</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputePSNRinROI</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a000d889dc8fed8c0e4a671fbe261c3db</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2, int topLeftX, int topLeftY, int bottomRightX, int bottomRightY)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ComputeSSIM</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a7729293c99dab77ed75ef077a1f061f3</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2, int localWindowSize, double intensityRange=255.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ComputeSSIMinROI</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>aa2edf6e25b7731ed2e787bc6fe302c6d</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2, int topLeftX, int topLeftY, int bottomRightX, int bottomRightY, int localWindowSize, double intensityRange=255.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ComputePearsonCorrelation</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a75179e22a9abff6c5c9b05e84a4f4482</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>ComputeMandersOverlap</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a619811e81c6cf903f62fc240286b17b2</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid1, ArrayGrid&lt; double &gt; *pGrid2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; int &gt; *</type>
      <name>CreateIntGrid</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a4c66e07e239c463e2a577e296e4cf8fb</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>CreateDoubleGrid</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a95245b2ee9e03e03f93e11e09de92bac</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>CreateDoubleGridFromComplexGrid</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ac7b2055c3564770ac5295cdbc78a16c4</anchor>
      <arglist>(ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>NegateGrid</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ab7263bd05d136336341679d136e4a328</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>NegateGridSelf</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a54a98b6e876700ef19e1eb09fcbda92a</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, double maxValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetFirstDerivativeX</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ae973c773d726280ca4d105a8ab7d6b05</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetFirstDerivativeY</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a77726cd33ef4227625a4dd0dc8efef4a</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetSecondDerivativeXX</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a235495e33f49540e88b87fd77139f8c3</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetSecondDerivativeXY</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a995da236acd80d325923070fcf5f1e46</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetSecondDerivativeYY</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ab060b31b51e964aad09de5f2c7f6143b</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, int x, int y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>Rotate90DegreesClockwise</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ab25e77e676adb88f06b1db3108034a34</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>Rotate90DegreesCounterClockwise</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a293b78050843fc7295f297abb90931a0</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>Rotate180Degrees</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a8811e5f369355af5f135eebe355a44f8</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>LogPolarTransform</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>aa5c91e6fc16f4879bfbae7c7a470941e</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ClipValues</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a40377108c2e7eece715c502c564e10f4</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pGrid, T desiredMin, T desiredMax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; double &gt; *</type>
      <name>HardThreshold</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ad1c6b0711b1267ea27f1ea6389a86c0b</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, double threshold)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; bool &gt; *</type>
      <name>BinaryThreshold</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a00d87f19005a1ef948d8a294f70e5d5f</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, double threshold, bool thresholdAbsoluteValue=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; int &gt; *</type>
      <name>BinaryThresholdInteger</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>a08b837376a3e7cac5346c320421d80b4</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGrid, int threshold)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>UpdateAverageGrid</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>afdb76f33382eccd7bd91427493ef3722</anchor>
      <arglist>(ArrayGrid&lt; T &gt; *pAverageGrid, ArrayGrid&lt; T &gt; *pNewGrid, int previousNrOfGridsProcessed)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArrayGrid&lt; T &gt; *</type>
      <name>AverageGrids</name>
      <anchorfile>classstira_1_1image_1_1NumberGridTools.html</anchorfile>
      <anchor>ab53eea598404edf7dc462cfb057855bf</anchor>
      <arglist>(std::vector&lt; ArrayGrid&lt; T &gt; * &gt; gridVector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::PerlinNoise</name>
    <filename>classstira_1_1image_1_1PerlinNoise.html</filename>
    <member kind="function">
      <type></type>
      <name>PerlinNoise</name>
      <anchorfile>classstira_1_1image_1_1PerlinNoise.html</anchorfile>
      <anchor>a0f0e0d3a6a3246d676cbaf4d72c1f0c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PerlinNoise</name>
      <anchorfile>classstira_1_1image_1_1PerlinNoise.html</anchorfile>
      <anchor>a7d0ed806f2d1490946b02e2d347d551b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>Generate</name>
      <anchorfile>classstira_1_1image_1_1PerlinNoise.html</anchorfile>
      <anchor>ab32333f31061cce248eb82a4da2ac9f8</anchor>
      <arglist>(float persistence, int octaves, unsigned int width, unsigned int height, float red, float green, float blue, int seed, float zoom)</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>GenerateNormalized</name>
      <anchorfile>classstira_1_1image_1_1PerlinNoise.html</anchorfile>
      <anchor>ae28b66d188834720e0206db379bacacb</anchor>
      <arglist>(float persistence, int octaves, unsigned int width, unsigned int height, float red, float green, float blue, int seed, float zoom)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::image::PyramidTools</name>
    <filename>classstira_1_1image_1_1PyramidTools.html</filename>
    <member kind="function">
      <type></type>
      <name>PyramidTools</name>
      <anchorfile>classstira_1_1image_1_1PyramidTools.html</anchorfile>
      <anchor>a57910eca1fa036d768f485db65af44b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PyramidTools</name>
      <anchorfile>classstira_1_1image_1_1PyramidTools.html</anchorfile>
      <anchor>a354cd43db61cd305d38585d27cef791b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Image *</type>
      <name>VisualizeRealPyramid</name>
      <anchorfile>classstira_1_1image_1_1PyramidTools.html</anchorfile>
      <anchor>a05d24febe3482abd886b616c6ec3106b</anchor>
      <arglist>(Pyramid&lt; double &gt; *pPyramid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::CannyEdgeDetector</name>
    <filename>classstira_1_1imageanalysis_1_1CannyEdgeDetector.html</filename>
    <member kind="function">
      <type></type>
      <name>CannyEdgeDetector</name>
      <anchorfile>classstira_1_1imageanalysis_1_1CannyEdgeDetector.html</anchorfile>
      <anchor>a2e6a7dcf7d15c2b2848fb4b7e80efd04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CannyEdgeDetector</name>
      <anchorfile>classstira_1_1imageanalysis_1_1CannyEdgeDetector.html</anchorfile>
      <anchor>a6108ed79ad5deefba116716aa8c68f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; bool &gt; *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1imageanalysis_1_1CannyEdgeDetector.html</anchorfile>
      <anchor>ad8755cbd7ac6a9d56d710e83fc3f4321</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, double sigmaSmooth, double lowerThreshold, double upperThreshold)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::CompareCurvesInImage</name>
    <filename>classstira_1_1imageanalysis_1_1CompareCurvesInImage.html</filename>
    <member kind="function">
      <type></type>
      <name>CompareCurvesInImage</name>
      <anchorfile>classstira_1_1imageanalysis_1_1CompareCurvesInImage.html</anchorfile>
      <anchor>aa514985914abf485dce01ae29023dfae</anchor>
      <arglist>(image::Image *pImage1, image::Image *pImage2, image::ColorValue cv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetDifference</name>
      <anchorfile>classstira_1_1imageanalysis_1_1CompareCurvesInImage.html</anchorfile>
      <anchor>a189d805fd567e7fb9759bcdb7c35fdfc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::ContourTracing</name>
    <filename>classstira_1_1imageanalysis_1_1ContourTracing.html</filename>
    <member kind="function">
      <type></type>
      <name>ContourTracing</name>
      <anchorfile>classstira_1_1imageanalysis_1_1ContourTracing.html</anchorfile>
      <anchor>a31768153bcf8d5aae1f120cd56591753</anchor>
      <arglist>(double alphaStraight, double alphaNotStraight, std::string filePath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ContourTracing</name>
      <anchorfile>classstira_1_1imageanalysis_1_1ContourTracing.html</anchorfile>
      <anchor>a75a7ad41260dc52e8ee1233bd7174116</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; ArrayGrid&lt; double &gt; *, ArrayGrid&lt; double &gt; * &gt;</type>
      <name>Run</name>
      <anchorfile>classstira_1_1imageanalysis_1_1ContourTracing.html</anchorfile>
      <anchor>a5e28484b0ceaa4cf20268d48f34ac780</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridIn, int ID=0)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>RunLeftRight</name>
      <anchorfile>classstira_1_1imageanalysis_1_1ContourTracing.html</anchorfile>
      <anchor>af3a7aa5ca2bdb620f1e0e37ca50ece3d</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridIn, int ID)</arglist>
    </member>
    <member kind="function">
      <type>ArrayGrid&lt; double &gt; *</type>
      <name>RunRightLeft</name>
      <anchorfile>classstira_1_1imageanalysis_1_1ContourTracing.html</anchorfile>
      <anchor>ab7f738b99f85293f05727e7cdd5a552d</anchor>
      <arglist>(ArrayGrid&lt; double &gt; *pGridIn, int ID)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::FloodFill</name>
    <filename>classstira_1_1imageanalysis_1_1FloodFill.html</filename>
    <member kind="function">
      <type></type>
      <name>FloodFill</name>
      <anchorfile>classstira_1_1imageanalysis_1_1FloodFill.html</anchorfile>
      <anchor>af766ba09979a908a9c636b132e896e70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Run</name>
      <anchorfile>classstira_1_1imageanalysis_1_1FloodFill.html</anchorfile>
      <anchor>aea524c2a75e41a5dc80481f4ac06d757</anchor>
      <arglist>(image::ArrayGrid&lt; int &gt; *pGrid, int nodeX, int nodeY, int targetValue, int replacementValue, bool fill8Connected=true)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; common::Point&lt; int &gt; &gt;</type>
      <name>GetFloodedPixels</name>
      <anchorfile>classstira_1_1imageanalysis_1_1FloodFill.html</anchorfile>
      <anchor>abd169a369f541b2f83abdbcadd417b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>common::Point&lt; double &gt;</type>
      <name>GetCenterOfGravity</name>
      <anchorfile>classstira_1_1imageanalysis_1_1FloodFill.html</anchorfile>
      <anchor>a9bfa766a835457934962b2143db3b814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>common::RectangularROI&lt; int &gt;</type>
      <name>GetBoundingBox</name>
      <anchorfile>classstira_1_1imageanalysis_1_1FloodFill.html</anchorfile>
      <anchor>a73c718efa0e8f3c3184491e57767cc62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ArrayGrid&lt; int &gt; *</type>
      <name>PrepareValues</name>
      <anchorfile>classstira_1_1imageanalysis_1_1FloodFill.html</anchorfile>
      <anchor>a8bed390b56c522df1b081d46984e8291</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid, int lowerBound, int upperBound, int targetValue)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::FunctionsOpenCV</name>
    <filename>classstira_1_1imageanalysis_1_1FunctionsOpenCV.html</filename>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::LocalBinaryPattern</name>
    <filename>classstira_1_1imageanalysis_1_1LocalBinaryPattern.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalBinaryPattern</name>
      <anchorfile>classstira_1_1imageanalysis_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>afdce3de869852945742c39d9ac083fc7</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid, double initAngle, double radius, int nrPoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalBinaryPattern</name>
      <anchorfile>classstira_1_1imageanalysis_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a876b791b91bacdc72358d0a9917c7e65</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid, double initAngle, double radius, int nrPoints, std::vector&lt; common::Point&lt; int &gt; &gt; vPointsOfInterest)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; bool &gt;</type>
      <name>RunVector</name>
      <anchorfile>classstira_1_1imageanalysis_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a8581b08c896c697c6facd4667ce8cde6</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RunCode</name>
      <anchorfile>classstira_1_1imageanalysis_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>ae57cc41d2592a8918ca8f0375954053e</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>histogram::FloatHistogram *</type>
      <name>RunHistogram</name>
      <anchorfile>classstira_1_1imageanalysis_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a3503189e5dac13b062d1141f1cbcbd0f</anchor>
      <arglist>(int ID=0)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; common::Point&lt; double &gt; &gt;</type>
      <name>GetSamplePoints</name>
      <anchorfile>classstira_1_1imageanalysis_1_1LocalBinaryPattern.html</anchorfile>
      <anchor>a65b0e022bd7267269ea31546fad87be2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::StegerLineDetector</name>
    <filename>classstira_1_1imageanalysis_1_1StegerLineDetector.html</filename>
    <member kind="function">
      <type></type>
      <name>StegerLineDetector</name>
      <anchorfile>classstira_1_1imageanalysis_1_1StegerLineDetector.html</anchorfile>
      <anchor>a6f7e1c811030be3ba62a65af2be40ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StegerLineDetector</name>
      <anchorfile>classstira_1_1imageanalysis_1_1StegerLineDetector.html</anchorfile>
      <anchor>a8128b56eb4f6c153794cbe6ebb354b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; bool &gt; *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1imageanalysis_1_1StegerLineDetector.html</anchorfile>
      <anchor>a740f0ae588e57a980bc139c6eeeca2dc</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, double sigmaSmooth, double lowerThreshold, double higherThreshold, bool isModeLight)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::Thinning</name>
    <filename>classstira_1_1imageanalysis_1_1Thinning.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Thinning</name>
      <anchorfile>classstira_1_1imageanalysis_1_1Thinning.html</anchorfile>
      <anchor>aaf3c68d95f4b1342214b39234c9b663a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Thinning</name>
      <anchorfile>classstira_1_1imageanalysis_1_1Thinning.html</anchorfile>
      <anchor>a9d9ec1d2e80fc48de7b9b4e0c3d98efe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; T &gt; *</type>
      <name>RunThinning</name>
      <anchorfile>classstira_1_1imageanalysis_1_1Thinning.html</anchorfile>
      <anchor>ae0620d2b8ac227d3b4c7d41dbc4d5b40</anchor>
      <arglist>(image::ArrayGrid&lt; T &gt; *pGridIn, common::RectangularROI&lt; int &gt; rroi, T value)</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; T &gt; *</type>
      <name>RunPruning</name>
      <anchorfile>classstira_1_1imageanalysis_1_1Thinning.html</anchorfile>
      <anchor>a5b93625d2d0c3ebb7578278b5ce53d72</anchor>
      <arglist>(image::ArrayGrid&lt; T &gt; *pGridIn, common::RectangularROI&lt; int &gt; rroi, T value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::imageanalysis::PixelElement</name>
    <filename>structstira_1_1imageanalysis_1_1PixelElement.html</filename>
    <templarg></templarg>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structstira_1_1imageanalysis_1_1PixelElement.html</anchorfile>
      <anchor>a2716155cc2c00f3ffb7036daed76d120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structstira_1_1imageanalysis_1_1PixelElement.html</anchorfile>
      <anchor>a80bce21d77257d1a9c0a6686bf519e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structstira_1_1imageanalysis_1_1PixelElement.html</anchorfile>
      <anchor>ac35277cb68ba02b81f4a133e25e0f9ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::mycomparison</name>
    <filename>classstira_1_1imageanalysis_1_1mycomparison.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>mycomparison</name>
      <anchorfile>classstira_1_1imageanalysis_1_1mycomparison.html</anchorfile>
      <anchor>a49b8e3b3f65be656e7ba56a0f2c93219</anchor>
      <arglist>(const bool &amp;revparam=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classstira_1_1imageanalysis_1_1mycomparison.html</anchorfile>
      <anchor>ad1ffd96889d00a423a6496b9ead74483</anchor>
      <arglist>(PixelElement&lt; T &gt; &amp;lhs, PixelElement&lt; T &gt; &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::imageanalysis::WatershedToboggan</name>
    <filename>classstira_1_1imageanalysis_1_1WatershedToboggan.html</filename>
    <member kind="function">
      <type></type>
      <name>WatershedToboggan</name>
      <anchorfile>classstira_1_1imageanalysis_1_1WatershedToboggan.html</anchorfile>
      <anchor>a6e32aa52383e358d32129677da7c985c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WatershedToboggan</name>
      <anchorfile>classstira_1_1imageanalysis_1_1WatershedToboggan.html</anchorfile>
      <anchor>a451b7ccfaedfd4535635c3adc77beb9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; int &gt; *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1imageanalysis_1_1WatershedToboggan.html</anchorfile>
      <anchor>aa2a6e3100751b4da7287b64ca018290c</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::pyramidapplications::PyramidContrastEnhancer</name>
    <filename>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</filename>
    <member kind="function">
      <type></type>
      <name>PyramidContrastEnhancer</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a603725aaf233c36a6831910145df1453</anchor>
      <arglist>(double sigma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PyramidContrastEnhancer</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a5f8257897997f1b0ccb483d07df5a01b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>Run</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a686455b3bc5247fc93bf3fa93839d8c5</anchor>
      <arglist>(image::Image *pImage, int nrScales, int nrOrientations, bool applyWavelet=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RunPyramid</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a91829681b3f5d54b696b534a8b0c1b3d</anchor>
      <arglist>(image::Pyramid&lt; double &gt; *pPyramid, bool applyWavelet=false)</arglist>
    </member>
    <member kind="function">
      <type>image::Image *</type>
      <name>Run3Colors</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a99879aa750f691dfb0fb6c277ecab23a</anchor>
      <arglist>(image::Image *pImage, int nrScales, int nrOrientations, bool applyWavelet=false)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSigmaNoise</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>aadc1b5c11a87b58b8428aa1c04649209</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSigmaNoise</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>aef01ce68e7ff67aa733b5817b54edc15</anchor>
      <arglist>(double sigma)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetNoiseThresholdFactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a62e2784cef518b3cabfde16d9f36c254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoiseThresholdFactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a68ef4f178ee6c71198e6d1715388a362</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetNoiseThreshold</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a54bbf71c9133c0fd514b0cbb50750232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNoiseThreshold</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a8b1c5b0b45b89c0cb14a856e6b27ab62</anchor>
      <arglist>(double threshold)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetNonLinearityDegree</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>abf62e55914032916789b40d49fb5e514</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNonLinearityDegree</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>af76a15cb52246234096cdabc5192adcd</anchor>
      <arglist>(double degree)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetUpperLimitAmplificationFactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a1973da289f26baed0a600d7b3459ff0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpperLimitAmplificationFactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a4f22f8a58f2b8286bc7174c50886705d</anchor>
      <arglist>(double limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDynamicRangeCompressionFactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a2fa8a33251f29aa12881e2fb834720cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDynamicRangeCompressionFactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a89d948cf5885d41b279d856605ba5e25</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetUpperLimitAmplification</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a3cb9bc13489f3d936c475bfa43028d33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpperLimitAmplification</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a0aab3763e20221ee3e114a7bb4f1a9e4</anchor>
      <arglist>(double limit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TestAmplificationfactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a0debb53c3b63c3bbb0962f2c24cdc967</anchor>
      <arglist>(std::string fileName, double myMin, double myMax, double stepSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintParameters</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidContrastEnhancer.html</anchorfile>
      <anchor>a04fc00e647bd8ae7dc6de922f681e619</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::pyramidapplications::PyramidDenoiser</name>
    <filename>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</filename>
    <member kind="function">
      <type></type>
      <name>PyramidDenoiser</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>afdedfbd62d1504e23758497d7e740729</anchor>
      <arglist>(image::Pyramid&lt; double &gt; *pPyramid, ShrinkageRule myRule, double sigma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PyramidDenoiser</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a73dbc31087f8a80982b1f41fc3f88467</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSigmaNoise</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a2ccf2cdaf877a334d09f45735f3baaf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSigmaNoise</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a1d5e338d85518c86f9c64144595d4977</anchor>
      <arglist>(double sigmaNoise)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetScaleFactorResidualLevel</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>afe80c21ef39f327795ae9ad031ccca1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleFactorResidualLevel</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a295290b4c771e54157c0003d2cb2dc5b</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetScaleFactorResidualToRecursiveLevel</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a52563e7b491170627d22861a6d72ef38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleFactorResidualToRecursiveLevel</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>adfbdc07706fab1b20f0116ed66ca8f86</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetScaleFactorRecursiveLevel</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a2e425c26b8f634cabcb20cbdeb821a24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScaleFactorRecursiveLevel</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>abc74973d19c94c7eaac85887ff28a770</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Run</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a9a25f36762dbdeca1124f36ecc4877b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeBivariateShrinkagefactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>add08f95e90fb3d6adfd2e65a46754e1e</anchor>
      <arglist>(double w1, double w2, double sigmaSignal, double sigmaNoise)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeWienerShrinkagefactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a2b7c5e28bbff94f146aed3a3fbd81bff</anchor>
      <arglist>(double sigmaSignal, double sigmaNoise)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>ComputeLaplacianShrinkagefactor</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>a3f9fd418b29441c65182b02904ad7f34</anchor>
      <arglist>(double w1, double sigmaSignal, double sigmaNoise)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>EstimateSigmaSignal</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidDenoiser.html</anchorfile>
      <anchor>afa976d0399d164a8d837f17c53a2b973</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pBand, int xCenter, int yCenter, double sigmaNoise, int windowSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::pyramidapplications::PyramidKeyPointDetector</name>
    <filename>classstira_1_1pyramidapplications_1_1PyramidKeyPointDetector.html</filename>
    <member kind="function">
      <type></type>
      <name>PyramidKeyPointDetector</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidKeyPointDetector.html</anchorfile>
      <anchor>a9e896d475e74133f33b75b7d768fcf3a</anchor>
      <arglist>(image::Pyramid&lt; std::complex&lt; double &gt; &gt; *pPyramid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PyramidKeyPointDetector</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidKeyPointDetector.html</anchorfile>
      <anchor>ac9bbaa6550b8ac749d25f731afed8978</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Run</name>
      <anchorfile>classstira_1_1pyramidapplications_1_1PyramidKeyPointDetector.html</anchorfile>
      <anchor>aad910a35f522f0ddc1656ef23806e6af</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::registration::RegistrationWrapper</name>
    <filename>classstira_1_1registration_1_1RegistrationWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>RegistrationWrapper</name>
      <anchorfile>classstira_1_1registration_1_1RegistrationWrapper.html</anchorfile>
      <anchor>a7a98bbc71588e3f4bc3d15e1783d2694</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pMasterGrid, image::ArrayGrid&lt; double &gt; *pSlaveGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RegistrationWrapper</name>
      <anchorfile>classstira_1_1registration_1_1RegistrationWrapper.html</anchorfile>
      <anchor>a4764a839331f253d009b8e74fbeb2ee2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Run</name>
      <anchorfile>classstira_1_1registration_1_1RegistrationWrapper.html</anchorfile>
      <anchor>a45b27baf6410dfe704099ccc1f796b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetRegisteredGrid</name>
      <anchorfile>classstira_1_1registration_1_1RegistrationWrapper.html</anchorfile>
      <anchor>a6130285e92ced096a6f3994a4fc76015</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::AffineTransform *</type>
      <name>GetResultingTransform</name>
      <anchorfile>classstira_1_1registration_1_1RegistrationWrapper.html</anchorfile>
      <anchor>a1ccf258bb717c44bd32c4c10d37742d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTransform</name>
      <anchorfile>classstira_1_1registration_1_1RegistrationWrapper.html</anchorfile>
      <anchor>a8cc93893bcd9ac6757b7ce6eb1b1449f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::steerable::BasicFilterKernels</name>
    <filename>classstira_1_1steerable_1_1BasicFilterKernels.html</filename>
    <member kind="function">
      <type></type>
      <name>BasicFilterKernels</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>acee1142cc93295a3224cb785ea1ce11f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BasicFilterKernels</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>aec84409cb696dd2045b22d241767b606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetBasicfilterLength</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>a4af8c0942f1504b9f62caa1f69598758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetFilterG2F1</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>a02ad092518c8d7fe0ad9048e810a8829</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetFilterG2F2</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>a1b0c986f3310bef7741c3f51239d00f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetFilterG2F3</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>a559ddfdd8347b05547d22525884dfafd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetFilterH2F1</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>a0741c5e21e3a1702bc8fe8c15e45320a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetFilterH2F2</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>aa9db1b840eef96e529a8458424be76f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetFilterH2F3</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>a8f4b364471d60243e62adc1207836cc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>GetFilterH2F4</name>
      <anchorfile>classstira_1_1steerable_1_1BasicFilterKernels.html</anchorfile>
      <anchor>a9bca7b1ed604125b2c9a3a37dc0c7c3e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::steerable::ComputeSteerableFilteredImages</name>
    <filename>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</filename>
    <member kind="function">
      <type></type>
      <name>ComputeSteerableFilteredImages</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a80991a674b3582332b46326b196b7bed</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *mpSourceGrid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComputeSteerableFilteredImages</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a81c0e7ede8ddbf3a4033c753d7d77e4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Run</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a90c5248d1e1499153a16b1ee5335eb60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::OrientationGrid *</type>
      <name>GetOrientationGrid</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a9c03789648c3d3e9ba5dff69fd16ce7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>InterpolateG</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>abb6cc75b385d74a32ee740c39b6020a7</anchor>
      <arglist>(double theta)</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>InterpolateH</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a20fb34f07a704155effaccd2aa66f09d</anchor>
      <arglist>(double theta)</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>FilterAlongDominantOrientationG</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>ac66d113318d04a11d2c43de5b448cc8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>FilterAlongDominantOrientationH</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a3cd8aa0ae12a3b039eae52d2ca6f8f1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetH2a</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a0e19591328c305e7801a25153641fa21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetH2b</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>ab375afd5fedd190f4dfb4bc5339de08d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetH2c</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a1dd6e92d00294e143393f81ccfc0a63d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetH2d</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>acb22bffc4b83cee94ce372f63f8b5c14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetG2a</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a2e062dd80b8542a0d9f7258c70ac3442</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetG2b</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a763e0c7fe14645fbc86cfd90a09f6c7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetG2c</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeSteerableFilteredImages.html</anchorfile>
      <anchor>a6d700bf21ec3e57bd4e90d1d2ceab744</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::steerable::ComputeOrientation</name>
    <filename>classstira_1_1steerable_1_1ComputeOrientation.html</filename>
    <member kind="function">
      <type></type>
      <name>ComputeOrientation</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeOrientation.html</anchorfile>
      <anchor>a794aa9a24d5b71dbe60af86c7d2406a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComputeOrientation</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeOrientation.html</anchorfile>
      <anchor>aae82d5d1a7eddd9d651f84d98e90eb4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ColorValue</type>
      <name>ConvertAngleToHSVMap</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeOrientation.html</anchorfile>
      <anchor>a852677801d0806f5d3c523b4742167d4</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::ColorValue</type>
      <name>ConvertAngleToRGBMap</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeOrientation.html</anchorfile>
      <anchor>a1df4b049d3bec05c1a0471cb63d757b0</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::OrientationGrid *</type>
      <name>ComputeDominantOrientationInputFreemanAdelson</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeOrientation.html</anchorfile>
      <anchor>a306a51636c99cc260e81d34ab11950af</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pResponseH2a, image::ArrayGrid&lt; double &gt; *pResponseH2b, image::ArrayGrid&lt; double &gt; *pResponseH2c, image::ArrayGrid&lt; double &gt; *pResponseH2d, image::ArrayGrid&lt; double &gt; *pResponseG2a, image::ArrayGrid&lt; double &gt; *pResponseG2b, image::ArrayGrid&lt; double &gt; *pResponseG2c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static image::OrientationGrid *</type>
      <name>ComputeDominantOrientationInputComplexPyramidLevel</name>
      <anchorfile>classstira_1_1steerable_1_1ComputeOrientation.html</anchorfile>
      <anchor>ace1690104ed38140f552fae45c37342e</anchor>
      <arglist>(image::PyramidLevel&lt; std::complex&lt; double &gt; &gt; *pPyrLevel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::steerable::PyramidComplex</name>
    <filename>classstira_1_1steerable_1_1PyramidComplex.html</filename>
    <base>PyramidMaster&lt; std::complex&lt; double &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>PyramidComplex</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidComplex.html</anchorfile>
      <anchor>a01a66396599a5ef5d8b06db1b7f2ee97</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int myNrScales, int myNrOrientations)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PyramidComplex</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidComplex.html</anchorfile>
      <anchor>a3ba66f660c2786af8557600e0d16a393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Decompose</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidComplex.html</anchorfile>
      <anchor>a35c4de18a6cd9406116d6c83e1fb34c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Reconstruct</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidComplex.html</anchorfile>
      <anchor>afc55b208fa7025aaaa78db29047c38f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Diagnose</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidComplex.html</anchorfile>
      <anchor>a78b5af927633daee311b12df8a0b6f05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VisualizeComplexBandpass</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidComplex.html</anchorfile>
      <anchor>a771b19850a6404648a81daf98e20a529</anchor>
      <arglist>(image::ArrayGrid&lt; std::complex&lt; double &gt; &gt; *pGrid, std::string bandType, int scaleNr, int orientationNr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VisualizeReconstructedBandpass</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidComplex.html</anchorfile>
      <anchor>a723f1a3cd532057afb6853156c49a580</anchor>
      <arglist>(fouriertools::FFTBand *pFftBandIn, std::string bandType, int scaleNr, int orientationNr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::steerable::PyramidMaster</name>
    <filename>classstira_1_1steerable_1_1PyramidMaster.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>PyramidMaster</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>ae6d6810b738ea638b945efa6173b2112</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int myNrScales, int myNrOrientations)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PyramidMaster</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a5a695a980071c86c4fcc715d44cfd23b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Decompose</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a00c186e39a5d8967002315b32fb2a7e4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Reconstruct</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a3cbcfc8fa871ecd5b5924adac3dc5617</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Diagnose</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a11414b03bc2d936ff40317b63a967e2d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>fouriertools::FFTBand *</type>
      <name>SumFFTBands</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>aa94495e6f6dd42d50ddabfa665bed30b</anchor>
      <arglist>(std::vector&lt; fouriertools::FFTBand * &gt; fftSubbandSet)</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetCopyOfReconstructedGrid</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a27e43cec4b96205ad17f31fdf56098ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>image::Pyramid&lt; T &gt; *</type>
      <name>GetPyramid</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>af8ede842a56181eb8dfb0e627bdeb9d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPyramid</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a5d19b440823f5d27ac8f58ad042575a9</anchor>
      <arglist>(image::Pyramid&lt; T &gt; *pPyramid)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>ExtractL0</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a1ad7c3b93141d5355626265488e516b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>fouriertools::FFTBand *</type>
      <name>ExtractB0</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a9f5f96874b8458e7fe3d6182712f21ef</anchor>
      <arglist>(common::NumberMode myMode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>ExtractL</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>afa27ae512e54cef932b14c280e6774e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>fouriertools::FFTBand *</type>
      <name>ExtractB</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>accfa9c6e958baf4b351c24bca31402aa</anchor>
      <arglist>(common::NumberMode myMode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>fouriertools::FFTBand *</type>
      <name>ReconstructL0</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a415d8bbd65e9b9a2632744060ecd7355</anchor>
      <arglist>(std::vector&lt; fouriertools::FFTBand * &gt; vpFFTBandSet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>fouriertools::FFTBand *</type>
      <name>ReconstructB0</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a81c1f46269186f0f3c0b8fad7f50aa6f</anchor>
      <arglist>(image::ArrayGrid&lt; T &gt; *pGridIn, common::NumberMode myMode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>fouriertools::FFTBand *</type>
      <name>ReconstructL</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a90ad1055fe4db8f1d4acbc485f7fd59f</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>fouriertools::FFTBand *</type>
      <name>ReconstructB</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>af695bfe6ca428790c64135bdee26866d</anchor>
      <arglist>(image::ArrayGrid&lt; T &gt; *pGridIn, common::NumberMode myMode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>MergeAndReconstructFFTBands</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a344390a7d585f1f419f6fdb7ed573247</anchor>
      <arglist>(std::vector&lt; fouriertools::FFTBand * &gt; fftSubbandSet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ClearFFTVector</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a392d1d4cc7d3afd1c330b2c5e616bd2d</anchor>
      <arglist>(std::vector&lt; fouriertools::FFTBand * &gt; &amp;set)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetFFTBand</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>aa5a2d276578aee78457b043597b87104</anchor>
      <arglist>(fouriertools::FFTBand *pFFTBand)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>fouriertools::FFTBand *</type>
      <name>GetFFTBand</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a8160a13bc28ad83bec3241e4191a413b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CleanFFTBand</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a8be7a7a1eed02eb0d927d9f92c8dd2a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>ViewTransferFunction</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a405bab2184ceec320c5555d173fe2373</anchor>
      <arglist>(fouriertools::FFTBand *pTransferFunction, std::string token, int scale, int orientation, int maxNrOfOrientations, bool isForward)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::Pyramid&lt; T &gt; *</type>
      <name>mpPyramid</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a8ad82d06fb660cc8c4ccc5b2b4eee8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpSourceGrid</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a5900905e5f0cc33576923bf09c278077</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpReconstructedGrid</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a298a0968589e4e4e3e6cf265030c5ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrScales</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>acb5a0ddbea76821d22dacc51ba118dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrOrientations</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a5760bc20202e566282ad3129be0b29db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mWidth</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>ad98f49b71e5a9d2d0ee2b0928f0b6ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mHeight</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a10dc28f7e639ee94b479a6f81a007aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsForwardTransform</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>afe013c50800c679b36b82d9727505ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpTmpHighpassGrid</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a481760d54d89c67f151756cd371e3ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::complex&lt; double &gt;</type>
      <name>mDecompositionFactor</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a8be2d0a9c88d01f9c1ad533e29974921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::complex&lt; double &gt;</type>
      <name>mReconstructionFactor</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>ac0cff0abb5610c600e71828aff7e9dcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>fouriertools::FFTBand *</type>
      <name>mpFFTBand</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>aa56ed8860c0746df51012e387176ddf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mCurrentScale</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>a119f453d7013c4b43ad2ae9a34f4853f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mCurrentOrientation</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidMaster.html</anchorfile>
      <anchor>abe07fb6e1230a60e81ae90b500e8720c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::steerable::PyramidReal</name>
    <filename>classstira_1_1steerable_1_1PyramidReal.html</filename>
    <base>PyramidMaster&lt; double &gt;</base>
    <member kind="function">
      <type></type>
      <name>PyramidReal</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidReal.html</anchorfile>
      <anchor>a91f13c3ff69d1f8762a8c54a680e7289</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGridIn, int myNrScales, int myNrOrientations)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PyramidReal</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidReal.html</anchorfile>
      <anchor>aa3cbe8859297d33230c5bfc2941f08e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Decompose</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidReal.html</anchorfile>
      <anchor>af5a998a0e23e9ca114f1b29ddced4dd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Reconstruct</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidReal.html</anchorfile>
      <anchor>a7a5bc94640e8bfae80d7f662b61ea56c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Diagnose</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidReal.html</anchorfile>
      <anchor>a93823874a29a9418e2cd09e1a7ef8333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VisualizeReconstructedBandpass</name>
      <anchorfile>classstira_1_1steerable_1_1PyramidReal.html</anchorfile>
      <anchor>a49cc4d5ebe0681ee5e5e21302d64cc26</anchor>
      <arglist>(fouriertools::FFTBand *pFftSubband, std::string bandType, int scaleNr, int orientationNr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::wavelet::CriticallySubsampledTransform</name>
    <filename>classstira_1_1wavelet_1_1CriticallySubsampledTransform.html</filename>
    <base>stira::wavelet::Wavelet</base>
    <member kind="function">
      <type></type>
      <name>CriticallySubsampledTransform</name>
      <anchorfile>classstira_1_1wavelet_1_1CriticallySubsampledTransform.html</anchorfile>
      <anchor>a6d835cb8140469ab098a7b228426e22e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CriticallySubsampledTransform</name>
      <anchorfile>classstira_1_1wavelet_1_1CriticallySubsampledTransform.html</anchorfile>
      <anchor>a99ecbc5054d53b0ffbcbc726f08b0eb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Decompose</name>
      <anchorfile>classstira_1_1wavelet_1_1CriticallySubsampledTransform.html</anchorfile>
      <anchor>ae903626fe17b66b6bd6e9873c38c379b</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid, int nrScales)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Reconstruct</name>
      <anchorfile>classstira_1_1wavelet_1_1CriticallySubsampledTransform.html</anchorfile>
      <anchor>af16e051b3b454b100976aa990fb779ff</anchor>
      <arglist>(double threshold=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::wavelet::NoiseEstimator</name>
    <filename>classstira_1_1wavelet_1_1NoiseEstimator.html</filename>
    <member kind="function">
      <type></type>
      <name>NoiseEstimator</name>
      <anchorfile>classstira_1_1wavelet_1_1NoiseEstimator.html</anchorfile>
      <anchor>a9a5a86ceb7ce422fc1dac1b60fe39019</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NoiseEstimator</name>
      <anchorfile>classstira_1_1wavelet_1_1NoiseEstimator.html</anchorfile>
      <anchor>af34f5eef310566a299d0495cd6e331e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Run</name>
      <anchorfile>classstira_1_1wavelet_1_1NoiseEstimator.html</anchorfile>
      <anchor>a31e5111f7958cba23dfb2cc490e52db9</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pGrid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::wavelet::NonSubsampledTransform</name>
    <filename>classstira_1_1wavelet_1_1NonSubsampledTransform.html</filename>
    <base>stira::wavelet::Wavelet</base>
    <member kind="function">
      <type></type>
      <name>NonSubsampledTransform</name>
      <anchorfile>classstira_1_1wavelet_1_1NonSubsampledTransform.html</anchorfile>
      <anchor>a34cd773fd7e5b58c641fd5975b2c8c66</anchor>
      <arglist>(WaveletType type=DAUBECHIES_2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NonSubsampledTransform</name>
      <anchorfile>classstira_1_1wavelet_1_1NonSubsampledTransform.html</anchorfile>
      <anchor>a4dd5f64e29b90f25b25a551cd3f55d63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Decompose</name>
      <anchorfile>classstira_1_1wavelet_1_1NonSubsampledTransform.html</anchorfile>
      <anchor>a4a9bf362c6ada2dbb076b59ee1d3d844</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid, int nrScales)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Reconstruct</name>
      <anchorfile>classstira_1_1wavelet_1_1NonSubsampledTransform.html</anchorfile>
      <anchor>a5449ebcd48a453c3cd36188e207f3887</anchor>
      <arglist>(double threshold=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::wavelet::SubsampledTransform</name>
    <filename>classstira_1_1wavelet_1_1SubsampledTransform.html</filename>
    <base>stira::wavelet::Wavelet</base>
    <member kind="function">
      <type></type>
      <name>SubsampledTransform</name>
      <anchorfile>classstira_1_1wavelet_1_1SubsampledTransform.html</anchorfile>
      <anchor>a88e5416376c55f8efb1ea8d5eba3c0fa</anchor>
      <arglist>(WaveletType type=DAUBECHIES_2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SubsampledTransform</name>
      <anchorfile>classstira_1_1wavelet_1_1SubsampledTransform.html</anchorfile>
      <anchor>ad9c7737f22ff558e895970e12991f2d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Decompose</name>
      <anchorfile>classstira_1_1wavelet_1_1SubsampledTransform.html</anchorfile>
      <anchor>a7c5de23d7608c8e34e5dac8dc4e0690d</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid, int nrScales)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Reconstruct</name>
      <anchorfile>classstira_1_1wavelet_1_1SubsampledTransform.html</anchorfile>
      <anchor>ad6963caf290bdfa0b44dc836757a635a</anchor>
      <arglist>(double threshold=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::wavelet::Wavelet</name>
    <filename>classstira_1_1wavelet_1_1Wavelet.html</filename>
    <member kind="function">
      <type></type>
      <name>Wavelet</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a5a1a7011a9343298bfe398e60888c681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Wavelet</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a0e2729f4abab63f8ed6cbd558f1b283a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Decompose</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a98b61644be6ca437c047fa52100f0d78</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid, int nrScales)=0</arglist>
    </member>
    <member kind="function">
      <type>image::Pyramid&lt; double &gt; *</type>
      <name>GetPyramid</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>aafe2b86a900cc4d4f9002e0a041849e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Reconstruct</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a347bd31b9965438761438eac3b339c85</anchor>
      <arglist>(double threshold=0.0)=0</arglist>
    </member>
    <member kind="function">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>GetCopyOfReconstructedGrid</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a79aef612514c4593f63d313f61c2821a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfOrientations</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>abaee7b45ac030b9cfa8665a100eaadac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumberOfScales</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>ad47b5ca4a33f7162aff8412486ca1392</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a2e563c5a9592a17ac600cebf2d1004df</anchor>
      <arglist>(image::ArrayGrid&lt; double &gt; *pSourceGrid, int nrScales, int nrOrientations=3, bool createBands=false, bool isSubsampled=true, bool isLowestScaleSubsampled=true)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrOrientations</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a05e233ed56fc4cd76d7d2c85572ac526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNrScales</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>ab738a348c0d0e2d15cb135b2a8bbd11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::Pyramid&lt; double &gt; *</type>
      <name>mpPyramid</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a39c00d10bb745188c7e926efd955139c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpDecomposeReconstructGrid</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>afb96b198a08dc2b01fd2b43fd0a1f479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mCurrentScale</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a2f32b1775b477e60db7509221c7ddfa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WaveletFilterSet</type>
      <name>mSet</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>adcbc77e0448b90bd957bb383ee2a00b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>image::ArrayGrid&lt; double &gt; *</type>
      <name>mpSourceGrid</name>
      <anchorfile>classstira_1_1wavelet_1_1Wavelet.html</anchorfile>
      <anchor>a45aac054c5d8df58f8166374629b0b90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>stira::wavelet::WaveletFilterSet</name>
    <filename>structstira_1_1wavelet_1_1WaveletFilterSet.html</filename>
    <member kind="variable">
      <type>double *</type>
      <name>pLowpassForward</name>
      <anchorfile>structstira_1_1wavelet_1_1WaveletFilterSet.html</anchorfile>
      <anchor>a7d22485cecebc09a08cd9dec2f5781e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>pLowpassInvers</name>
      <anchorfile>structstira_1_1wavelet_1_1WaveletFilterSet.html</anchorfile>
      <anchor>aa8016b8266a2e9ad017f89c5d9273eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>pHighpassForward</name>
      <anchorfile>structstira_1_1wavelet_1_1WaveletFilterSet.html</anchorfile>
      <anchor>acf86b17810141efc5539fd01dc9d4979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>pHighpassInvers</name>
      <anchorfile>structstira_1_1wavelet_1_1WaveletFilterSet.html</anchorfile>
      <anchor>a2b35cf3f39e0591a6b80771d37d7abce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>length</name>
      <anchorfile>structstira_1_1wavelet_1_1WaveletFilterSet.html</anchorfile>
      <anchor>a23c6cc0889bfaba67d704180abb5b232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WaveletType</type>
      <name>type</name>
      <anchorfile>structstira_1_1wavelet_1_1WaveletFilterSet.html</anchorfile>
      <anchor>af4b909bde55ba7e5d3f4412d72bd2544</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>stira::wavelet::WaveletTapGenerator</name>
    <filename>classstira_1_1wavelet_1_1WaveletTapGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>WaveletTapGenerator</name>
      <anchorfile>classstira_1_1wavelet_1_1WaveletTapGenerator.html</anchorfile>
      <anchor>a95872a6cb3c660cd6cb06e5fc00fb6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveletTapGenerator</name>
      <anchorfile>classstira_1_1wavelet_1_1WaveletTapGenerator.html</anchorfile>
      <anchor>a62c5adae9208b3a5b83572999c7ce7eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WaveletFilterSet</type>
      <name>Generate</name>
      <anchorfile>classstira_1_1wavelet_1_1WaveletTapGenerator.html</anchorfile>
      <anchor>a77654b723570efdd3e14e267bcafe680</anchor>
      <arglist>(WaveletType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::Arg</name>
    <filename>classTCLAP_1_1Arg.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Arg</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a15734a7cf52c8c4ab6df70f0997bbee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToList</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a9ff1564beeea2ef855f7fa483c37d0e2</anchor>
      <arglist>(std::list&lt; Arg * &gt; &amp;argList) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a61ffe2f660a76111d256f7b22a686146</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a657a8d2842b7de9ced5a5a55db01d367</anchor>
      <arglist>(const Arg &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFlag</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a22f616e81a423e794f13a9ae1549ac77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a641ced141a56c74fee11d3e3a808f731</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDescription</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a1943999fadcb4f28cecd6ba55ed0b085</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRequired</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a00a3cfdb2b6e9a111ad39cbd4978b96c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceRequired</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a58e3de560f364d0bb6bdf36ab533a6fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorSet</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aec525c8092e56f7f5aa455e71bc72374</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValueRequired</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a1373d50d4b93c16db43c7600cf6d0355</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSet</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a6af7a1e92b5d92fc2d90c1a95aab4384</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIgnoreable</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a33816b5ccc58a15f3a998480e5d988e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>argMatches</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aac37b1b734b477e5d16f2037dba9c125</anchor>
      <arglist>(const std::string &amp;s) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ac98a357568c21f0eb6ca2220b8a3d4a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aef8efaf3811162b2b2b2a84c6db280fa</anchor>
      <arglist>(const std::string &amp;valueId=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aad93aff46e1fc67e3853765f565bfa96</anchor>
      <arglist>(const std::string &amp;valueId=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>trimFlag</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a54595328e81f5fb77859563690faab25</anchor>
      <arglist>(std::string &amp;flag, std::string &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_hasBlanks</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a2eb0ffefe163218bdc8b4b7a33a974a7</anchor>
      <arglist>(const std::string &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRequireLabel</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aae5c959f31af1a484a8af06f84a6e8b0</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allowMore</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a9aef735d37ef95ca1b7dc7a07850b984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>acceptsMultipleValues</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ad356870538a255d639e26b30330202ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ab5b5dc9a9b0381561f0684523f943a2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Arg</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>abb06d8379b8108d87ee055bf7e413f6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToList</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>af43f993fa9ddd81988e8ea4cf63831d9</anchor>
      <arglist>(std::list&lt; Arg * &gt; &amp;argList) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a61ffe2f660a76111d256f7b22a686146</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a03050a21f4050957bba436df10cc1ec5</anchor>
      <arglist>(const Arg &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFlag</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a582df873fcf4960b772c7152fa88fad0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a91c8c92109b161a0e0fcf18e8ffd03eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDescription</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a1943999fadcb4f28cecd6ba55ed0b085</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRequired</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a11154cc6a279b9dfa87bd2418171ec9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceRequired</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a58e3de560f364d0bb6bdf36ab533a6fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorSet</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aec525c8092e56f7f5aa455e71bc72374</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValueRequired</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a1373d50d4b93c16db43c7600cf6d0355</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSet</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a6af7a1e92b5d92fc2d90c1a95aab4384</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIgnoreable</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a33816b5ccc58a15f3a998480e5d988e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>argMatches</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a756d9ebf1f50de0d986fc6b9711f06dc</anchor>
      <arglist>(const std::string &amp;s) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ab503200840890aa738186b81524b0ba6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a4c3ef59200d522a467333149d17ab107</anchor>
      <arglist>(const std::string &amp;valueId=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a5ed0cf221b2e47c722b6e2f942d2c689</anchor>
      <arglist>(const std::string &amp;valueId=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>trimFlag</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a5488f7a8761610b224b52888db2b25a3</anchor>
      <arglist>(std::string &amp;flag, std::string &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>_hasBlanks</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a2eb0ffefe163218bdc8b4b7a33a974a7</anchor>
      <arglist>(const std::string &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRequireLabel</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aae5c959f31af1a484a8af06f84a6e8b0</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allowMore</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a4b516149fb7e1c20c6e533142498b7d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>acceptsMultipleValues</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a5db564a043d64aef3e3da537596e43bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ae8d4962f2e41e2c88b53dba9265e5cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>beginIgnoring</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a24165d31c1ec70777fb201356b6cdf6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ignoreRest</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a4d412155b8f9b4956e64e91c48e55a3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char</type>
      <name>delimiter</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aadef6ca7e40f5b3d3fd03186976aea7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char</type>
      <name>blankChar</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a0abd38f46dbf7d267078134a4817fbb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char</type>
      <name>flagStartChar</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a7f9f6af439993e9151bd5a6cd2a63dad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>flagStartString</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>af8e739295b0f75028e7bff6d670d97a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>nameStartString</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a1df2134870528b80f9f35347fef6fd14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>ignoreNameString</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a6ce0cbe4effd44679ca11f25e3c318e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDelimiter</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ad059b63424001b9aedb4c019e2854c3c</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>beginIgnoring</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a24165d31c1ec70777fb201356b6cdf6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ignoreRest</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a4d412155b8f9b4956e64e91c48e55a3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char</type>
      <name>delimiter</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aadef6ca7e40f5b3d3fd03186976aea7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char</type>
      <name>blankChar</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a0abd38f46dbf7d267078134a4817fbb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char</type>
      <name>flagStartChar</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a7f9f6af439993e9151bd5a6cd2a63dad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>flagStartString</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>af8e739295b0f75028e7bff6d670d97a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>nameStartString</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a1df2134870528b80f9f35347fef6fd14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>ignoreNameString</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a6ce0cbe4effd44679ca11f25e3c318e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDelimiter</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ad059b63424001b9aedb4c019e2854c3c</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_checkWithVisitor</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aa963d0d4c8cb297e1f4cf74143bf6d1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Arg</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ab25a06db5edf82a5b965b641b3c63372</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, bool valreq, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_checkWithVisitor</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>aa963d0d4c8cb297e1f4cf74143bf6d1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Arg</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ab25a06db5edf82a5b965b641b3c63372</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, bool valreq, Visitor *v=NULL)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_flag</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ae68407a0a8223023ad0ae3b9dc7986f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_name</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ac0f138057a99fb5d94ff4acb41a083aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_description</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a9882fe256eaab01ac53db54ac657d272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_required</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ad16408bd1ca4d8b1d14d6c5129545a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_requireLabel</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a2ed097a868e34a0c4f6062ead744ac54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_valueRequired</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a776682b7e19f4dc231bbad3d10034dfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_alreadySet</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a829e32129857d2683e5791a5df1208ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Visitor *</type>
      <name>_visitor</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a9c7d5bacf58306a2fc623b5278d8307a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_ignoreable</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a9832bb7564f4ab472bd51b7b1bbc683f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_xorSet</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>ab413bd1d8a7ecf3c89672ee23ef791ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_acceptsMultipleValues</name>
      <anchorfile>classTCLAP_1_1Arg.html</anchorfile>
      <anchor>a13130a9a5d22c57a6d42a8883c9b1e0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::ArgException</name>
    <filename>classTCLAP_1_1ArgException.html</filename>
    <member kind="function">
      <type></type>
      <name>ArgException</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>a67389912b628e95d530f8bb8de97b309</anchor>
      <arglist>(const std::string &amp;text=&quot;undefined exception&quot;, const std::string &amp;id=&quot;undefined&quot;, const std::string &amp;td=&quot;Generic ArgException&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArgException</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>a5c5df6a814b05c623a01607fb82980f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>a0656dab88a7129bc288821bacd653d08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>argId</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>a18ffd1ad34c1799865f8e03df4ebdff1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>af51c89da2e4ae54fc9d05038ea484c83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>typeDescription</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>abd271955e1b808bb92f8db7a16ea7c95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArgException</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>a67389912b628e95d530f8bb8de97b309</anchor>
      <arglist>(const std::string &amp;text=&quot;undefined exception&quot;, const std::string &amp;id=&quot;undefined&quot;, const std::string &amp;td=&quot;Generic ArgException&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArgException</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>a5c5df6a814b05c623a01607fb82980f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>a0656dab88a7129bc288821bacd653d08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>argId</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>a18ffd1ad34c1799865f8e03df4ebdff1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>af51c89da2e4ae54fc9d05038ea484c83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>typeDescription</name>
      <anchorfile>classTCLAP_1_1ArgException.html</anchorfile>
      <anchor>abd271955e1b808bb92f8db7a16ea7c95</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::ArgParseException</name>
    <filename>classTCLAP_1_1ArgParseException.html</filename>
    <base>TCLAP::ArgException</base>
    <base>TCLAP::ArgException</base>
    <member kind="function">
      <type></type>
      <name>ArgParseException</name>
      <anchorfile>classTCLAP_1_1ArgParseException.html</anchorfile>
      <anchor>aa9d9531405e505afd506491526733285</anchor>
      <arglist>(const std::string &amp;text=&quot;undefined exception&quot;, const std::string &amp;id=&quot;undefined&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArgParseException</name>
      <anchorfile>classTCLAP_1_1ArgParseException.html</anchorfile>
      <anchor>aa9d9531405e505afd506491526733285</anchor>
      <arglist>(const std::string &amp;text=&quot;undefined exception&quot;, const std::string &amp;id=&quot;undefined&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::CmdLineParseException</name>
    <filename>classTCLAP_1_1CmdLineParseException.html</filename>
    <base>TCLAP::ArgException</base>
    <base>TCLAP::ArgException</base>
    <member kind="function">
      <type></type>
      <name>CmdLineParseException</name>
      <anchorfile>classTCLAP_1_1CmdLineParseException.html</anchorfile>
      <anchor>a3b612ba299dd699845ea108b5eaa3249</anchor>
      <arglist>(const std::string &amp;text=&quot;undefined exception&quot;, const std::string &amp;id=&quot;undefined&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CmdLineParseException</name>
      <anchorfile>classTCLAP_1_1CmdLineParseException.html</anchorfile>
      <anchor>a3b612ba299dd699845ea108b5eaa3249</anchor>
      <arglist>(const std::string &amp;text=&quot;undefined exception&quot;, const std::string &amp;id=&quot;undefined&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::SpecificationException</name>
    <filename>classTCLAP_1_1SpecificationException.html</filename>
    <base>TCLAP::ArgException</base>
    <base>TCLAP::ArgException</base>
    <member kind="function">
      <type></type>
      <name>SpecificationException</name>
      <anchorfile>classTCLAP_1_1SpecificationException.html</anchorfile>
      <anchor>ad817016f03ebf4fc371e168636132abd</anchor>
      <arglist>(const std::string &amp;text=&quot;undefined exception&quot;, const std::string &amp;id=&quot;undefined&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpecificationException</name>
      <anchorfile>classTCLAP_1_1SpecificationException.html</anchorfile>
      <anchor>ad817016f03ebf4fc371e168636132abd</anchor>
      <arglist>(const std::string &amp;text=&quot;undefined exception&quot;, const std::string &amp;id=&quot;undefined&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::ExitException</name>
    <filename>classTCLAP_1_1ExitException.html</filename>
    <member kind="function">
      <type></type>
      <name>ExitException</name>
      <anchorfile>classTCLAP_1_1ExitException.html</anchorfile>
      <anchor>a03a48ed9da416c8261edbd9cbbf85b27</anchor>
      <arglist>(int estat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getExitStatus</name>
      <anchorfile>classTCLAP_1_1ExitException.html</anchorfile>
      <anchor>acf7fd20c9cfb67b5718031ed0debda1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExitException</name>
      <anchorfile>classTCLAP_1_1ExitException.html</anchorfile>
      <anchor>a03a48ed9da416c8261edbd9cbbf85b27</anchor>
      <arglist>(int estat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getExitStatus</name>
      <anchorfile>classTCLAP_1_1ExitException.html</anchorfile>
      <anchor>acf7fd20c9cfb67b5718031ed0debda1c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ValueLike</name>
    <filename>structTCLAP_1_1ValueLike.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ValueLike.html</anchorfile>
      <anchor>a26e6d3b8c4a608ecebe7404e42fbecf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ValueLike.html</anchorfile>
      <anchor>a26e6d3b8c4a608ecebe7404e42fbecf9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::StringLike</name>
    <filename>structTCLAP_1_1StringLike.html</filename>
  </compound>
  <compound kind="struct">
    <name>TCLAP::StringLikeTrait</name>
    <filename>structTCLAP_1_1StringLikeTrait.html</filename>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1StringLikeTrait.html</anchorfile>
      <anchor>a7a081c80b731414dcad1b50cf80b7433</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1StringLikeTrait.html</anchorfile>
      <anchor>a7a081c80b731414dcad1b50cf80b7433</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ValueLikeTrait</name>
    <filename>structTCLAP_1_1ValueLikeTrait.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ValueLikeTrait.html</anchorfile>
      <anchor>aac4ee14f65926b8e741d797a8900a79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ValueLikeTrait.html</anchorfile>
      <anchor>aac4ee14f65926b8e741d797a8900a79a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits</name>
    <filename>structTCLAP_1_1ArgTraits.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T::ValueCategory</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits.html</anchorfile>
      <anchor>a346532973520fc820d6b3e5406dfa8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T::ValueCategory</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits.html</anchorfile>
      <anchor>a346532973520fc820d6b3e5406dfa8f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::CmdLine</name>
    <filename>classTCLAP_1_1CmdLine.html</filename>
    <base>TCLAP::CmdLineInterface</base>
    <base>TCLAP::CmdLineInterface</base>
    <member kind="function">
      <type></type>
      <name>CmdLine</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a2e62a3493f8700afb49a7deb872a5b96</anchor>
      <arglist>(const std::string &amp;message, const char delimiter= &apos; &apos;, const std::string &amp;version=&quot;none&quot;, bool helpAndVersion=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CmdLine</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a8a7bddba32c3d96e2a01e4c8e160e6fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a94c511d4735ad9b8c97edaa3827f8bbf</anchor>
      <arglist>(Arg &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>ab8a08e8f4d3ca7709c85416f76e805a3</anchor>
      <arglist>(Arg *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorAdd</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>afbaa2071d0c3276b383089acabdc0dd2</anchor>
      <arglist>(Arg &amp;a, Arg &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorAdd</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>ac7f2d7ee32a5157f625ad9833ab148cf</anchor>
      <arglist>(std::vector&lt; Arg * &gt; &amp;xors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>acb07daf5a1370c176a7b4a6e4119fe6e</anchor>
      <arglist>(int argc, const char *const *argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a712c3edf86aa0a8a28fb0b6d504d945a</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>CmdLineOutput *</type>
      <name>getOutput</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>ad8aea2617edf53bbc20c8964ee5476e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutput</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a4506e305cd10437c7ce5a5ba34cfed0f</anchor>
      <arglist>(CmdLineOutput *co)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getVersion</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a85b5653d1a5b48fe6accead64615cf33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getProgramName</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a47a6d496980ee11ffc42e27144a61797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; Arg * &gt; &amp;</type>
      <name>getArgList</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a3c281da929a281fb883ea47632b7ad38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XorHandler &amp;</type>
      <name>getXorHandler</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a805433b7718d1bc5bc9317bbd061449b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getDelimiter</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a3e9f0ac2c1e97d1f8527da713ddd5a8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getMessage</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a8f61a8c201e31ada985fa998180fd40f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasHelpAndVersion</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a5b23895feae4f4110b77dae372226475</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExceptionHandling</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>aa02055d8f4864bfa9b505e2d26bbbd87</anchor>
      <arglist>(const bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getExceptionHandling</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>af2cd748a91e22df97c878d7eff8c4ca3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a1721ec47c9d9f5ea2eca2f385fcfd2da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CmdLine</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a2e62a3493f8700afb49a7deb872a5b96</anchor>
      <arglist>(const std::string &amp;message, const char delimiter= &apos; &apos;, const std::string &amp;version=&quot;none&quot;, bool helpAndVersion=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CmdLine</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>acaf6a533f6bcdc69b792584f0a27e7da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a94c511d4735ad9b8c97edaa3827f8bbf</anchor>
      <arglist>(Arg &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>ab8a08e8f4d3ca7709c85416f76e805a3</anchor>
      <arglist>(Arg *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorAdd</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>afbaa2071d0c3276b383089acabdc0dd2</anchor>
      <arglist>(Arg &amp;a, Arg &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorAdd</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>ac7f2d7ee32a5157f625ad9833ab148cf</anchor>
      <arglist>(std::vector&lt; Arg * &gt; &amp;xors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>acb07daf5a1370c176a7b4a6e4119fe6e</anchor>
      <arglist>(int argc, const char *const *argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a712c3edf86aa0a8a28fb0b6d504d945a</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>CmdLineOutput *</type>
      <name>getOutput</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a40409c901aeae7387b842208d5ede8a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutput</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a4506e305cd10437c7ce5a5ba34cfed0f</anchor>
      <arglist>(CmdLineOutput *co)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getVersion</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a5fc82c752221d275fc5d9db852d29b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getProgramName</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>abf503a3bf50be640393a823807d13df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; Arg * &gt; &amp;</type>
      <name>getArgList</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>abee9bd531ccce6a1e1a60c03f0640ab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XorHandler &amp;</type>
      <name>getXorHandler</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a6325d94b5d7d714fcfb54c675a8bcb3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getDelimiter</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a3e9f0ac2c1e97d1f8527da713ddd5a8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getMessage</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a7eae98fdfbc79dc5ef636ebae7e30e2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasHelpAndVersion</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a5b23895feae4f4110b77dae372226475</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExceptionHandling</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>aa02055d8f4864bfa9b505e2d26bbbd87</anchor>
      <arglist>(const bool state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getExceptionHandling</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>af2cd748a91e22df97c878d7eff8c4ca3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a1721ec47c9d9f5ea2eca2f385fcfd2da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>missingArgsException</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a698f47333350312eb949aa1ae4f89ad1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>_emptyCombined</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a170a4e711c2a6d58a05e9ad3bc03c08a</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteOnExit</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a42d669ed2037ac24fc78883aa8600655</anchor>
      <arglist>(Arg *ptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteOnExit</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a262b8d929eb5b0dfbfc17637c1325c36</anchor>
      <arglist>(Visitor *ptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>missingArgsException</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a698f47333350312eb949aa1ae4f89ad1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>_emptyCombined</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a170a4e711c2a6d58a05e9ad3bc03c08a</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteOnExit</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a42d669ed2037ac24fc78883aa8600655</anchor>
      <arglist>(Arg *ptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteOnExit</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a262b8d929eb5b0dfbfc17637c1325c36</anchor>
      <arglist>(Visitor *ptr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; Arg * &gt;</type>
      <name>_argList</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>af2d75a17aa66fd2e56b098eea13b6d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_progName</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a8b856dadc54fa30d0dddba4588ef9344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_message</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a3ccd2ae40f6eb97aebca3de9a02f10cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_version</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a2b2b52fffed2dcb7df3cdfc582ec8fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_numRequired</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a2285207b528d5fad18c82a2ee8155f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>_delimiter</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a602e65692dc07ea872134f354026a54f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XorHandler</type>
      <name>_xorHandler</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a33846aa10c62ecd61640c93c16ac315d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; Arg * &gt;</type>
      <name>_argDeleteOnExitList</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a7ebb9184a5ee4748dc748b95ee2c3dd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; Visitor * &gt;</type>
      <name>_visitorDeleteOnExitList</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>ae75bdfd11c56779d247150a053336c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CmdLineOutput *</type>
      <name>_output</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a23ec160d808a0660c522c974abe84495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_handleExceptions</name>
      <anchorfile>classTCLAP_1_1CmdLine.html</anchorfile>
      <anchor>a3609d0c13886053b367d1df80efbe67b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::CmdLineInterface</name>
    <filename>classTCLAP_1_1CmdLineInterface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CmdLineInterface</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a8c7faeca5a25a96e18312da9485a94e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a13b29ab754c030185e58f779dc355631</anchor>
      <arglist>(Arg &amp;a)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a7c6a097c0f2a09dd1987e9da1af8b457</anchor>
      <arglist>(Arg *a)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>xorAdd</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a69859e3713623eb06c9c335248d9c83f</anchor>
      <arglist>(Arg &amp;a, Arg &amp;b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>xorAdd</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a6a94140e522bcf6104928fcf0c434ab8</anchor>
      <arglist>(std::vector&lt; Arg * &gt; &amp;xors)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>parse</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a6649336bddfc8421148718a691fd89b4</anchor>
      <arglist>(int argc, const char *const *argv)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a1b1a0cb973206a11c22003c245a4f7ed</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CmdLineOutput *</type>
      <name>getOutput</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>aebc72daedeaeb03e06bb2e6e0f00363d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setOutput</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>ab208b32bd9489781509d7ecddf8a92a0</anchor>
      <arglist>(CmdLineOutput *co)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string &amp;</type>
      <name>getVersion</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a0a552fa57212800dfb8aec84fb07b8bb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string &amp;</type>
      <name>getProgramName</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a1a5672df72a6b5021cd70b37c4dbd0a7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; Arg * &gt; &amp;</type>
      <name>getArgList</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a4de8d988f5a6f3007c4dfb0fc9dad476</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual XorHandler &amp;</type>
      <name>getXorHandler</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a11ce9c77a1111960741f05e343849e4e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual char</type>
      <name>getDelimiter</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a7d6a64cff6b3a30e2cf1e81d7b1d4521</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string &amp;</type>
      <name>getMessage</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a30175a2567f7ab78a2c6bbea9269a2fa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasHelpAndVersion</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a441b06b764836a62083b163508210905</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a6b1fac8a9948ba7e28bc7844a18f39e4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CmdLineInterface</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a8c7faeca5a25a96e18312da9485a94e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a13b29ab754c030185e58f779dc355631</anchor>
      <arglist>(Arg &amp;a)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a7c6a097c0f2a09dd1987e9da1af8b457</anchor>
      <arglist>(Arg *a)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>xorAdd</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a69859e3713623eb06c9c335248d9c83f</anchor>
      <arglist>(Arg &amp;a, Arg &amp;b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>xorAdd</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a6a94140e522bcf6104928fcf0c434ab8</anchor>
      <arglist>(std::vector&lt; Arg * &gt; &amp;xors)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>parse</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a6649336bddfc8421148718a691fd89b4</anchor>
      <arglist>(int argc, const char *const *argv)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a1b1a0cb973206a11c22003c245a4f7ed</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CmdLineOutput *</type>
      <name>getOutput</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>aebc72daedeaeb03e06bb2e6e0f00363d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setOutput</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>ab208b32bd9489781509d7ecddf8a92a0</anchor>
      <arglist>(CmdLineOutput *co)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string &amp;</type>
      <name>getVersion</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a0a552fa57212800dfb8aec84fb07b8bb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string &amp;</type>
      <name>getProgramName</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a1a5672df72a6b5021cd70b37c4dbd0a7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; Arg * &gt; &amp;</type>
      <name>getArgList</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a4de8d988f5a6f3007c4dfb0fc9dad476</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual XorHandler &amp;</type>
      <name>getXorHandler</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a11ce9c77a1111960741f05e343849e4e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual char</type>
      <name>getDelimiter</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a7d6a64cff6b3a30e2cf1e81d7b1d4521</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string &amp;</type>
      <name>getMessage</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a30175a2567f7ab78a2c6bbea9269a2fa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasHelpAndVersion</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a441b06b764836a62083b163508210905</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1CmdLineInterface.html</anchorfile>
      <anchor>a6b1fac8a9948ba7e28bc7844a18f39e4</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::CmdLineOutput</name>
    <filename>classTCLAP_1_1CmdLineOutput.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CmdLineOutput</name>
      <anchorfile>classTCLAP_1_1CmdLineOutput.html</anchorfile>
      <anchor>afdf4435a2619076d9798a0a950ed405b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classTCLAP_1_1CmdLineOutput.html</anchorfile>
      <anchor>a685b13db5bf6bbe5159e49169cd96bbe</anchor>
      <arglist>(CmdLineInterface &amp;c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classTCLAP_1_1CmdLineOutput.html</anchorfile>
      <anchor>ae052fea473132482296de55edb3dd480</anchor>
      <arglist>(CmdLineInterface &amp;c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classTCLAP_1_1CmdLineOutput.html</anchorfile>
      <anchor>ad23a57ac3d8d957a4328fc78aec94e16</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CmdLineOutput</name>
      <anchorfile>classTCLAP_1_1CmdLineOutput.html</anchorfile>
      <anchor>afdf4435a2619076d9798a0a950ed405b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classTCLAP_1_1CmdLineOutput.html</anchorfile>
      <anchor>a685b13db5bf6bbe5159e49169cd96bbe</anchor>
      <arglist>(CmdLineInterface &amp;c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classTCLAP_1_1CmdLineOutput.html</anchorfile>
      <anchor>ae052fea473132482296de55edb3dd480</anchor>
      <arglist>(CmdLineInterface &amp;c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classTCLAP_1_1CmdLineOutput.html</anchorfile>
      <anchor>ad23a57ac3d8d957a4328fc78aec94e16</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::Constraint</name>
    <filename>classTCLAP_1_1Constraint.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classTCLAP_1_1Constraint.html</anchorfile>
      <anchor>ae16dd80aa217fb56c0862af5478afe01</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1Constraint.html</anchorfile>
      <anchor>a39f707895311da682439810a0bec4a5f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classTCLAP_1_1Constraint.html</anchorfile>
      <anchor>a773c3e16d0150523c1c92b7b24868c34</anchor>
      <arglist>(const T &amp;value) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>classTCLAP_1_1Constraint.html</anchorfile>
      <anchor>ae96bbe5301e9517b68b1597b36098224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classTCLAP_1_1Constraint.html</anchorfile>
      <anchor>ae16dd80aa217fb56c0862af5478afe01</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1Constraint.html</anchorfile>
      <anchor>a39f707895311da682439810a0bec4a5f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classTCLAP_1_1Constraint.html</anchorfile>
      <anchor>a773c3e16d0150523c1c92b7b24868c34</anchor>
      <arglist>(const T &amp;value) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>classTCLAP_1_1Constraint.html</anchorfile>
      <anchor>ae96bbe5301e9517b68b1597b36098224</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::DocBookOutput</name>
    <filename>classTCLAP_1_1DocBookOutput.html</filename>
    <base>TCLAP::CmdLineOutput</base>
    <base>TCLAP::CmdLineOutput</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>adc1ec93f3f7e5e912690be01c5e7d6e2</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a3ccf7671dcae82aba5f0e91850ae25a4</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a5e97f659fa1ab3b060a31e8bd7a0a40e</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>ad295fd20f44380ebb8e982a6caa017cd</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a356c4f9da8006c382cc1b41870c1d0d4</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>ae444069fa11c8e2869bb278b831a7627</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>substituteSpecialChars</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a7546eaf3a0effeea1030afb27b4c698f</anchor>
      <arglist>(std::string &amp;s, char r, std::string &amp;x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeChar</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>abc059536cb97c49da4e6c5b4a22c6cef</anchor>
      <arglist>(std::string &amp;s, char r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>basename</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a82d49ab25845c7d191863be9c482409e</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printShortArg</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a980ecacfcda0186a76bb6c37a9c33726</anchor>
      <arglist>(Arg *it)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printLongArg</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a891cf5ef71592b5261691575c2adad1d</anchor>
      <arglist>(Arg *it)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>substituteSpecialChars</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a7546eaf3a0effeea1030afb27b4c698f</anchor>
      <arglist>(std::string &amp;s, char r, std::string &amp;x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeChar</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>abc059536cb97c49da4e6c5b4a22c6cef</anchor>
      <arglist>(std::string &amp;s, char r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>basename</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a82d49ab25845c7d191863be9c482409e</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printShortArg</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a980ecacfcda0186a76bb6c37a9c33726</anchor>
      <arglist>(Arg *it)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printLongArg</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a891cf5ef71592b5261691575c2adad1d</anchor>
      <arglist>(Arg *it)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>theDelimiter</name>
      <anchorfile>classTCLAP_1_1DocBookOutput.html</anchorfile>
      <anchor>a081a02a93ce13f694d078c79fe42a7c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::HelpVisitor</name>
    <filename>classTCLAP_1_1HelpVisitor.html</filename>
    <base>TCLAP::Visitor</base>
    <base>TCLAP::Visitor</base>
    <member kind="function">
      <type></type>
      <name>HelpVisitor</name>
      <anchorfile>classTCLAP_1_1HelpVisitor.html</anchorfile>
      <anchor>a425e96efa6950b1949f1f81d4ff133f1</anchor>
      <arglist>(CmdLineInterface *cmd, CmdLineOutput **out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classTCLAP_1_1HelpVisitor.html</anchorfile>
      <anchor>a157294efe254edb2b713b7c458aad3f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HelpVisitor</name>
      <anchorfile>classTCLAP_1_1HelpVisitor.html</anchorfile>
      <anchor>a425e96efa6950b1949f1f81d4ff133f1</anchor>
      <arglist>(CmdLineInterface *cmd, CmdLineOutput **out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classTCLAP_1_1HelpVisitor.html</anchorfile>
      <anchor>a157294efe254edb2b713b7c458aad3f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CmdLineInterface *</type>
      <name>_cmd</name>
      <anchorfile>classTCLAP_1_1HelpVisitor.html</anchorfile>
      <anchor>a1790f77333e4f3291f295d5ed17a39bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CmdLineOutput **</type>
      <name>_out</name>
      <anchorfile>classTCLAP_1_1HelpVisitor.html</anchorfile>
      <anchor>a0009fd65b1d5668dcb89532b650be1f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::IgnoreRestVisitor</name>
    <filename>classTCLAP_1_1IgnoreRestVisitor.html</filename>
    <base>TCLAP::Visitor</base>
    <base>TCLAP::Visitor</base>
    <member kind="function">
      <type></type>
      <name>IgnoreRestVisitor</name>
      <anchorfile>classTCLAP_1_1IgnoreRestVisitor.html</anchorfile>
      <anchor>a4cd949b7aeff99fba4a8494e02a1cb01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classTCLAP_1_1IgnoreRestVisitor.html</anchorfile>
      <anchor>ac2a054ed72b16608a32021c65a600722</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IgnoreRestVisitor</name>
      <anchorfile>classTCLAP_1_1IgnoreRestVisitor.html</anchorfile>
      <anchor>a4cd949b7aeff99fba4a8494e02a1cb01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classTCLAP_1_1IgnoreRestVisitor.html</anchorfile>
      <anchor>ac2a054ed72b16608a32021c65a600722</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::MultiArg</name>
    <filename>classTCLAP_1_1MultiArg.html</filename>
    <templarg></templarg>
    <base>TCLAP::Arg</base>
    <base>TCLAP::Arg</base>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;</type>
      <name>container_type</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>adae435f03fdde769bca57327487aab78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>container_type::iterator</type>
      <name>iterator</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a34196784baca2bd5aa079d639d49a7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>container_type::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a3f8e9e8f5dcc7d3e6a518f42134cf64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;</type>
      <name>container_type</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>adae435f03fdde769bca57327487aab78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>container_type::iterator</type>
      <name>iterator</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a34196784baca2bd5aa079d639d49a7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>container_type::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a3f8e9e8f5dcc7d3e6a518f42134cf64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a49b5437c7f06cd6864c07dc59814a953</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a48c90a873389280f72fb5d6ef707b400</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, CmdLineInterface &amp;parser, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a38b1e32a8189356bd1e5ec7c2d43c1a3</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, Constraint&lt; T &gt; *constraint, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>ad4fcd892de2f1ef275c30dc499215208</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, Constraint&lt; T &gt; *constraint, CmdLineInterface &amp;parser, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a344d3cf2128c510f92825e421ea667c7</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; T &gt; &amp;</type>
      <name>getValue</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>aff4ff7f8d854dd668aaaf80511d8002b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a48058500cdc9ef8b9c2c9e6394ab499d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>ac30e414b799158ff6710fb1e7ce83aee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>ac2c962112704b899f4c8b8565f2c4bb3</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a16c00fbce6876bceabb3dab4723f7e79</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRequired</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a3cb7fec92f3d70e0e455c6bc33fbebab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allowMore</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>ab05097627c81cd65975fa1b99fae9bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>ab21f01f22978a1c0eea716399e9ff89b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a49b5437c7f06cd6864c07dc59814a953</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a48c90a873389280f72fb5d6ef707b400</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, CmdLineInterface &amp;parser, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a38b1e32a8189356bd1e5ec7c2d43c1a3</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, Constraint&lt; T &gt; *constraint, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>ad4fcd892de2f1ef275c30dc499215208</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, Constraint&lt; T &gt; *constraint, CmdLineInterface &amp;parser, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>aeae418bc66a230838e00b612da9db4a6</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; T &gt; &amp;</type>
      <name>getValue</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>ab2095d14dec49281839f4dd879fe509b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a48058500cdc9ef8b9c2c9e6394ab499d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>ac30e414b799158ff6710fb1e7ce83aee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a7d070e324b28cb3fb955b361d0d080c1</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a98f16a4ba96272fc6c1fb2c7bd8a8b15</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRequired</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a52d0a0ea0a8b8ed5c1bf5bc124effd1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>allowMore</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>acf005f790afc01087407d3d8ec8f4d8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a27f708d65b19a182a87a486d905a3589</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_extractValue</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a26cbf5e86ac66d876f9285f1fda22470</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_extractValue</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a26cbf5e86ac66d876f9285f1fda22470</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; T &gt;</type>
      <name>_values</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a996d8252c6b202a802e977499828863f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a0f6a2b04fe15d1ede95165fc6e1949e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Constraint&lt; T &gt; *</type>
      <name>_constraint</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a4ec8fa5180e18fca51d2e513bb67f641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_allowMore</name>
      <anchorfile>classTCLAP_1_1MultiArg.html</anchorfile>
      <anchor>a93a3ef586f763d46839c0e737689b85f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::MultiSwitchArg</name>
    <filename>classTCLAP_1_1MultiSwitchArg.html</filename>
    <base>TCLAP::SwitchArg</base>
    <base>TCLAP::SwitchArg</base>
    <member kind="function">
      <type></type>
      <name>MultiSwitchArg</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a37db9658517f206fd69936e1458d59b0</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, int init=0, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiSwitchArg</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a0443d4a222630ac45aa67e40f2de3541</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, CmdLineInterface &amp;parser, int init=0, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a91c3d349570f21d8af6dc90767d747a2</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValue</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a0389e414c11ebbab4a88dfbbf3af18bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a083c07003f948691e94ce94d0b6376ed</anchor>
      <arglist>(const std::string &amp;val) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a0b0aacc09c93462bab4347f86db0fccd</anchor>
      <arglist>(const std::string &amp;val) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>ac320530811dbca7fdcb2a41ab252fce4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiSwitchArg</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a37db9658517f206fd69936e1458d59b0</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, int init=0, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiSwitchArg</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a0443d4a222630ac45aa67e40f2de3541</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, CmdLineInterface &amp;parser, int init=0, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a73cb544ae8220b9754032004e0b2fe93</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValue</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a0389e414c11ebbab4a88dfbbf3af18bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a083c07003f948691e94ce94d0b6376ed</anchor>
      <arglist>(const std::string &amp;val) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>a0b0aacc09c93462bab4347f86db0fccd</anchor>
      <arglist>(const std::string &amp;val) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>ac320530811dbca7fdcb2a41ab252fce4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_value</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>ab488d4bcdde96fc9edea87ee9b6f5839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_default</name>
      <anchorfile>classTCLAP_1_1MultiSwitchArg.html</anchorfile>
      <anchor>afcd5b3e418e455af3d31aec1e300bb74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::OptionalUnlabeledTracker</name>
    <filename>classTCLAP_1_1OptionalUnlabeledTracker.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>check</name>
      <anchorfile>classTCLAP_1_1OptionalUnlabeledTracker.html</anchorfile>
      <anchor>a59bfa7d01b45d4796500470c9218e390</anchor>
      <arglist>(bool req, const std::string &amp;argName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>gotOptional</name>
      <anchorfile>classTCLAP_1_1OptionalUnlabeledTracker.html</anchorfile>
      <anchor>aca1fc2a02fbde351cce7ea05f0e6ef89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool &amp;</type>
      <name>alreadyOptional</name>
      <anchorfile>classTCLAP_1_1OptionalUnlabeledTracker.html</anchorfile>
      <anchor>a50fc04586196c0861491968fcdadf48b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>check</name>
      <anchorfile>classTCLAP_1_1OptionalUnlabeledTracker.html</anchorfile>
      <anchor>a1ac74f92396990a287c6c5c569fad744</anchor>
      <arglist>(bool req, const std::string &amp;argName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>gotOptional</name>
      <anchorfile>classTCLAP_1_1OptionalUnlabeledTracker.html</anchorfile>
      <anchor>aca1fc2a02fbde351cce7ea05f0e6ef89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool &amp;</type>
      <name>alreadyOptional</name>
      <anchorfile>classTCLAP_1_1OptionalUnlabeledTracker.html</anchorfile>
      <anchor>a50fc04586196c0861491968fcdadf48b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; long &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01long_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01long_01_4.html</anchorfile>
      <anchor>a942d9a1e813bc3f82b51a2dcedb7316d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01long_01_4.html</anchorfile>
      <anchor>a942d9a1e813bc3f82b51a2dcedb7316d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; int &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01int_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01int_01_4.html</anchorfile>
      <anchor>a8e577764b626e9e928d71567123d92a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01int_01_4.html</anchorfile>
      <anchor>a8e577764b626e9e928d71567123d92a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; short &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01short_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01short_01_4.html</anchorfile>
      <anchor>a99f5d76501b120d6455b528aa7bf6896</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01short_01_4.html</anchorfile>
      <anchor>a99f5d76501b120d6455b528aa7bf6896</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; char &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01char_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01char_01_4.html</anchorfile>
      <anchor>a36f7fe1b3b1649ef8ec08ef7d6fc3160</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01char_01_4.html</anchorfile>
      <anchor>a36f7fe1b3b1649ef8ec08ef7d6fc3160</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; unsigned long &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01unsigned_01long_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01unsigned_01long_01_4.html</anchorfile>
      <anchor>aa6aeb6243e6fbf8b5aba659083baa1ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01unsigned_01long_01_4.html</anchorfile>
      <anchor>aa6aeb6243e6fbf8b5aba659083baa1ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; unsigned int &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01unsigned_01int_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>ae95cdc132665581c458fc64c7e7a0490</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>ae95cdc132665581c458fc64c7e7a0490</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; unsigned short &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01unsigned_01short_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01unsigned_01short_01_4.html</anchorfile>
      <anchor>a0efa2ce53e9cb98dc4a58dda24127d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01unsigned_01short_01_4.html</anchorfile>
      <anchor>a0efa2ce53e9cb98dc4a58dda24127d3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; unsigned char &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01unsigned_01char_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01unsigned_01char_01_4.html</anchorfile>
      <anchor>a3cba1e41ab04d31c7b68b1c5e6e227aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01unsigned_01char_01_4.html</anchorfile>
      <anchor>a3cba1e41ab04d31c7b68b1c5e6e227aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; float &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01float_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01float_01_4.html</anchorfile>
      <anchor>ace983d74b1b28caa692840da15313acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01float_01_4.html</anchorfile>
      <anchor>ace983d74b1b28caa692840da15313acf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; double &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01double_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01double_01_4.html</anchorfile>
      <anchor>a06ac5f8ebfcbc537e9ce57b96836dd3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01double_01_4.html</anchorfile>
      <anchor>a06ac5f8ebfcbc537e9ce57b96836dd3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; bool &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01bool_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01bool_01_4.html</anchorfile>
      <anchor>a86efe13e981aaef96d37ec465a8409a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01bool_01_4.html</anchorfile>
      <anchor>a86efe13e981aaef96d37ec465a8409a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; wchar_t &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01wchar__t_01_4.html</filename>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01wchar__t_01_4.html</anchorfile>
      <anchor>a49a311297a394637af4d8d64eda7f442</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01wchar__t_01_4.html</anchorfile>
      <anchor>a49a311297a394637af4d8d64eda7f442</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; std::string &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01std_1_1string_01_4.html</filename>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a719adeb18786516dd4b2a16525cf4536</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a719adeb18786516dd4b2a16525cf4536</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::StdOutput</name>
    <filename>classTCLAP_1_1StdOutput.html</filename>
    <base>TCLAP::CmdLineOutput</base>
    <base>TCLAP::CmdLineOutput</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>aeb10eb400e0ee45f2cde689bef606b49</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>a768111a59af4753ac6e5ace3ec99482e</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>a9afc267e012c3ac42c8b1afe01f98556</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>a27b818a604fb4b24d87180fb53c8eebf</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>a5fc259cc0abb1ecc8a580d70660eda49</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>aa53e7fd3d89b28101f27df7a998f2162</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_shortUsage</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>a60fa57587838d506d907f08800f2631c</anchor>
      <arglist>(CmdLineInterface &amp;c, std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_longUsage</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>ace725aebd685c16f464d697e85e0327d</anchor>
      <arglist>(CmdLineInterface &amp;c, std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>spacePrint</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>a38661be8895e07c442c2c3138b7444a2</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;s, int maxWidth, int indentSpaces, int secondLineOffset) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_shortUsage</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>a60fa57587838d506d907f08800f2631c</anchor>
      <arglist>(CmdLineInterface &amp;c, std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_longUsage</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>ace725aebd685c16f464d697e85e0327d</anchor>
      <arglist>(CmdLineInterface &amp;c, std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>spacePrint</name>
      <anchorfile>classTCLAP_1_1StdOutput.html</anchorfile>
      <anchor>a38661be8895e07c442c2c3138b7444a2</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;s, int maxWidth, int indentSpaces, int secondLineOffset) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::SwitchArg</name>
    <filename>classTCLAP_1_1SwitchArg.html</filename>
    <base>TCLAP::Arg</base>
    <base>TCLAP::Arg</base>
    <member kind="function">
      <type></type>
      <name>SwitchArg</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>a3895b036fa2d36e4fcfa41dfcdb298c1</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool def=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SwitchArg</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>af7e9628155772af0686f6a2114dfe78b</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, CmdLineInterface &amp;parser, bool def=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>a624f98df6c4907efec95ffc353e9d08c</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>combinedSwitchesMatch</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>af5fbd44d462539941b09e960034d692c</anchor>
      <arglist>(std::string &amp;combined)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getValue</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>aed1bc8a81a9bda4013cfcf407ccc7716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>af8561d903ec3c11f5f2175e6db179d9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SwitchArg</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>a3895b036fa2d36e4fcfa41dfcdb298c1</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool def=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SwitchArg</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>af7e9628155772af0686f6a2114dfe78b</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, CmdLineInterface &amp;parser, bool def=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>abf88e62e4a84d7beeeaafa379dae99da</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>combinedSwitchesMatch</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>af5fbd44d462539941b09e960034d692c</anchor>
      <arglist>(std::string &amp;combined)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getValue</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>aed1bc8a81a9bda4013cfcf407ccc7716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>aa511c4982c6dfcdde012440e566af79d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_value</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>a0389ecebecc504d9756703d46e8cf3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_default</name>
      <anchorfile>classTCLAP_1_1SwitchArg.html</anchorfile>
      <anchor>ae25a99eb06fc2ee75a3b98edba1d5d8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::UnlabeledMultiArg</name>
    <filename>classTCLAP_1_1UnlabeledMultiArg.html</filename>
    <templarg></templarg>
    <base>TCLAP::MultiArg</base>
    <base>TCLAP::MultiArg</base>
    <member kind="function">
      <type></type>
      <name>UnlabeledMultiArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a776c124bf343d0ecfb73e7cc28423807</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledMultiArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a5c81005897f6b9673b39f5d1107f4074</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, CmdLineInterface &amp;parser, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledMultiArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>aa065c76cd23b4acfe62c4b31d73dcf87</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, Constraint&lt; T &gt; *constraint, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledMultiArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>ad3d8c37cd3c71deb2275b48115a59f11</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, Constraint&lt; T &gt; *constraint, CmdLineInterface &amp;parser, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>aa5a35665519518dcb60e53d3a4858802</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a5971af8f29fa4d798ffde3293504c15b</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a1e7262967b850fb30e1003890a45f1ca</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a059fa00203a9f643a10334fedbd43e39</anchor>
      <arglist>(const Arg &amp;a) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToList</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a290b15792de11abb5a4cf1c312d6a0d7</anchor>
      <arglist>(std::list&lt; Arg * &gt; &amp;argList) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledMultiArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a776c124bf343d0ecfb73e7cc28423807</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledMultiArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a5c81005897f6b9673b39f5d1107f4074</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, CmdLineInterface &amp;parser, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledMultiArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>aa065c76cd23b4acfe62c4b31d73dcf87</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, Constraint&lt; T &gt; *constraint, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledMultiArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>ad3d8c37cd3c71deb2275b48115a59f11</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, Constraint&lt; T &gt; *constraint, CmdLineInterface &amp;parser, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>ad226d472ce022df73774729c1431bb35</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>aa8659c53d8f82549927564cd7719125e</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a1ad19e7bd9b7e347bc0f4082818e8f11</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a64863277067167845dcbf51b42ba6e35</anchor>
      <arglist>(const Arg &amp;a) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToList</name>
      <anchorfile>classTCLAP_1_1UnlabeledMultiArg.html</anchorfile>
      <anchor>a0bff00e39bda5343cee0820ad853f53b</anchor>
      <arglist>(std::list&lt; Arg * &gt; &amp;argList) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::UnlabeledValueArg</name>
    <filename>classTCLAP_1_1UnlabeledValueArg.html</filename>
    <templarg></templarg>
    <base>TCLAP::ValueArg</base>
    <base>TCLAP::ValueArg</base>
    <member kind="function">
      <type></type>
      <name>UnlabeledValueArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>acba2fddd0719ccd90f48fcf06aaffbee</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledValueArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>a9eafea8158d27a5af48e92f62debcf65</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, CmdLineInterface &amp;parser, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledValueArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>a2aa148ef6a2016bb3f32a33a7c644404</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, T value, Constraint&lt; T &gt; *constraint, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledValueArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>afd3af78fccd14f2654e9b2f981ead12f</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, T value, Constraint&lt; T &gt; *constraint, CmdLineInterface &amp;parser, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>ad853d7950a659b0d4ee2cda3f61261fd</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>abda4d1d695003ba165b6797e03007a99</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>ade738f42a7867324ce780b0c240b0460</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>a74632cd4d169481518cb1a871f97b412</anchor>
      <arglist>(const Arg &amp;a) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToList</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>a8670fc7797254e602d302318063f3515</anchor>
      <arglist>(std::list&lt; Arg * &gt; &amp;argList) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledValueArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>acba2fddd0719ccd90f48fcf06aaffbee</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledValueArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>a9eafea8158d27a5af48e92f62debcf65</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, CmdLineInterface &amp;parser, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledValueArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>a2aa148ef6a2016bb3f32a33a7c644404</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, T value, Constraint&lt; T &gt; *constraint, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnlabeledValueArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>afd3af78fccd14f2654e9b2f981ead12f</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;desc, bool req, T value, Constraint&lt; T &gt; *constraint, CmdLineInterface &amp;parser, bool ignoreable=false, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>a0ab7484fc4b01390fa7805436454c478</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>adc633df12788c82b6afc14c73a2076cf</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>a7c9e7638b0bba9e1c69c47f977914825</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator==</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>aeb87cf47a9b4806231221342ac036b3e</anchor>
      <arglist>(const Arg &amp;a) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToList</name>
      <anchorfile>classTCLAP_1_1UnlabeledValueArg.html</anchorfile>
      <anchor>acb8d6c495f5e9ecd3a8b77e184b84284</anchor>
      <arglist>(std::list&lt; Arg * &gt; &amp;argList) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::ValueArg</name>
    <filename>classTCLAP_1_1ValueArg.html</filename>
    <templarg></templarg>
    <base>TCLAP::Arg</base>
    <base>TCLAP::Arg</base>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>ab2818435a1749bee3233b1f364dabf09</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a3b34856ee6613ccabe60d2c5a6cc714f</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, CmdLineInterface &amp;parser, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>aa054e7649b5d9db4861eed344a8f5840</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, Constraint&lt; T &gt; *constraint, CmdLineInterface &amp;parser, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a152c816b8bdb19efada14e8aec9bd05c</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, Constraint&lt; T &gt; *constraint, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a71e6ee7c7324724b6fc067c5ffe31160</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>getValue</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a46900b79f4549a37003120be284adfee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>abb1eb22814d0a0da49c5f8bb57362d09</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a586d25c04c39ddf0e589605d79f72f8a</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a1bc480b71c4d8ac3646e796af8fb6e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>ab2818435a1749bee3233b1f364dabf09</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a3b34856ee6613ccabe60d2c5a6cc714f</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, CmdLineInterface &amp;parser, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>aa054e7649b5d9db4861eed344a8f5840</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, Constraint&lt; T &gt; *constraint, CmdLineInterface &amp;parser, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a152c816b8bdb19efada14e8aec9bd05c</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, Constraint&lt; T &gt; *constraint, Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a6583e749ee7054baa8d57a7111f89058</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>getValue</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a3336a88f9c07bcc440d7e6362455c45b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>afac45356f0ec3ddd03a3f0bfde2f816c</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>longID</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>af0039072d203463a64b311075093c006</anchor>
      <arglist>(const std::string &amp;val=&quot;val&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a0dcc789ccebecf3225ea432cbfaa2504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_extractValue</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>af0ecdb6537febfcaa322e7131d2b3bf8</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>_extractValue</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>af0ecdb6537febfcaa322e7131d2b3bf8</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>_value</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a45d5fdfce5865c02e6663f7438d485c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>_default</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a118e3a7932700a8e3626d8f9ee2e0c95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>a78c5e5b67ce4bcebb57c886d9aa49259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Constraint&lt; T &gt; *</type>
      <name>_constraint</name>
      <anchorfile>classTCLAP_1_1ValueArg.html</anchorfile>
      <anchor>abb339a538c342c8200d1d9dc6f4ea511</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::ValuesConstraint</name>
    <filename>classTCLAP_1_1ValuesConstraint.html</filename>
    <templarg></templarg>
    <base>TCLAP::Constraint</base>
    <base>TCLAP::Constraint</base>
    <member kind="function">
      <type></type>
      <name>ValuesConstraint</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a8ab127461012bb1dcfac159e17105db9</anchor>
      <arglist>(std::vector&lt; T &gt; &amp;allowed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ValuesConstraint</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a9b0c218300a9e0937386f2e566ba21bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a07b08c05a7bfcbe5815895353ffef1d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a1bbe12afcb1f185ee7ac808d69e2d345</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>ae132b185413cf5dea5cc040f60e7ede6</anchor>
      <arglist>(const T &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValuesConstraint</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a8ab127461012bb1dcfac159e17105db9</anchor>
      <arglist>(std::vector&lt; T &gt; &amp;allowed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ValuesConstraint</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a9b0c218300a9e0937386f2e566ba21bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a085c515f5ee8e56d812072d715cdd9f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>ab69b4b93c3c44f6da07a82ddd1d4393b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a986517e0173296ac88cf6d3fa1b8e2af</anchor>
      <arglist>(const T &amp;value) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; T &gt;</type>
      <name>_allowed</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>ae317253314e11999fabeb89b884c1b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classTCLAP_1_1ValuesConstraint.html</anchorfile>
      <anchor>a6ebc63fa5eea116a50aa5f76aee56fd6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::VersionVisitor</name>
    <filename>classTCLAP_1_1VersionVisitor.html</filename>
    <base>TCLAP::Visitor</base>
    <base>TCLAP::Visitor</base>
    <member kind="function">
      <type></type>
      <name>VersionVisitor</name>
      <anchorfile>classTCLAP_1_1VersionVisitor.html</anchorfile>
      <anchor>a6e5c16f245e2333dcc568dc9c4e6d537</anchor>
      <arglist>(CmdLineInterface *cmd, CmdLineOutput **out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classTCLAP_1_1VersionVisitor.html</anchorfile>
      <anchor>a30b0d5bd22ac41364d027b94bded4fc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VersionVisitor</name>
      <anchorfile>classTCLAP_1_1VersionVisitor.html</anchorfile>
      <anchor>a6e5c16f245e2333dcc568dc9c4e6d537</anchor>
      <arglist>(CmdLineInterface *cmd, CmdLineOutput **out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classTCLAP_1_1VersionVisitor.html</anchorfile>
      <anchor>a30b0d5bd22ac41364d027b94bded4fc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CmdLineInterface *</type>
      <name>_cmd</name>
      <anchorfile>classTCLAP_1_1VersionVisitor.html</anchorfile>
      <anchor>a63eb429d6989a498dc20bcfdbec7d72d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CmdLineOutput **</type>
      <name>_out</name>
      <anchorfile>classTCLAP_1_1VersionVisitor.html</anchorfile>
      <anchor>ab55b87194a41a53f6a564b2be910ddd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::Visitor</name>
    <filename>classTCLAP_1_1Visitor.html</filename>
    <member kind="function">
      <type></type>
      <name>Visitor</name>
      <anchorfile>classTCLAP_1_1Visitor.html</anchorfile>
      <anchor>a0d7198eaa0989abe3898ffd59dff7801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Visitor</name>
      <anchorfile>classTCLAP_1_1Visitor.html</anchorfile>
      <anchor>ace7cbebaab5dfc0ba1f17cd360dd6a55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>visit</name>
      <anchorfile>classTCLAP_1_1Visitor.html</anchorfile>
      <anchor>a08625664637579a24ba2f0ab3e713670</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Visitor</name>
      <anchorfile>classTCLAP_1_1Visitor.html</anchorfile>
      <anchor>a0d7198eaa0989abe3898ffd59dff7801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Visitor</name>
      <anchorfile>classTCLAP_1_1Visitor.html</anchorfile>
      <anchor>ace7cbebaab5dfc0ba1f17cd360dd6a55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>visit</name>
      <anchorfile>classTCLAP_1_1Visitor.html</anchorfile>
      <anchor>a08625664637579a24ba2f0ab3e713670</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::XorHandler</name>
    <filename>classTCLAP_1_1XorHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>XorHandler</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a195391f50b7fe5eb939c2f6d236f571e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a76f156bf36a8aede334801aa242f31b9</anchor>
      <arglist>(std::vector&lt; Arg * &gt; &amp;ors)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a3df7722e4c4c5d331de69fc902336b00</anchor>
      <arglist>(const Arg *a)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shortUsage</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>aca185a80e9df6e4250a230fa5aec7891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printLongUsage</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a257a855934eb343a0fad3c4e5fe5ff57</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a1a74fab4667cc591a1e3094c91bc942d</anchor>
      <arglist>(const Arg *a)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::vector&lt; Arg * &gt; &gt; &amp;</type>
      <name>getXorList</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a0e0d95c697d227cc51f82424b8530182</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XorHandler</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a195391f50b7fe5eb939c2f6d236f571e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a76f156bf36a8aede334801aa242f31b9</anchor>
      <arglist>(std::vector&lt; Arg * &gt; &amp;ors)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a3df7722e4c4c5d331de69fc902336b00</anchor>
      <arglist>(const Arg *a)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shortUsage</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>aca185a80e9df6e4250a230fa5aec7891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printLongUsage</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a257a855934eb343a0fad3c4e5fe5ff57</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a1a74fab4667cc591a1e3094c91bc942d</anchor>
      <arglist>(const Arg *a)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::vector&lt; Arg * &gt; &gt; &amp;</type>
      <name>getXorList</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>a0a94f102739ad6aabdc4ec7855e7e3da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; Arg * &gt; &gt;</type>
      <name>_orList</name>
      <anchorfile>classTCLAP_1_1XorHandler.html</anchorfile>
      <anchor>ad7e6c8e5db311a6f508b5b22b4faac66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TCLAP::ZshCompletionOutput</name>
    <filename>classTCLAP_1_1ZshCompletionOutput.html</filename>
    <base>TCLAP::CmdLineOutput</base>
    <base>TCLAP::CmdLineOutput</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a3ea685b174fce7ddf2353129863b49d7</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a543e705918d769d3d6f4090c403ed0c9</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>abcd0ba63a2ac7675d085877fc4d3e8cf</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>usage</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>aceaf0068a42b0150f8c48822cfa00d7b</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>version</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>aa2335af4b28e72d1de7e56c0e12b577e</anchor>
      <arglist>(CmdLineInterface &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>failure</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a195929721f69a610df5b3427a35e167d</anchor>
      <arglist>(CmdLineInterface &amp;c, ArgException &amp;e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>basename</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a3fff80665ab8d6161de6451924c2b954</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>quoteSpecialChars</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>aacd678921212eb6654d7f704da360361</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getMutexList</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>af3fceb65fc2c22ae8cc3c1df8a503184</anchor>
      <arglist>(CmdLineInterface &amp;_cmd, Arg *a)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOption</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a33903e3aef02f50799726eb7789fb4d4</anchor>
      <arglist>(Arg *it, std::string mutex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printArg</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a1d079ecf271977419432fb0caa72d035</anchor>
      <arglist>(Arg *it)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>basename</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a3fff80665ab8d6161de6451924c2b954</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>quoteSpecialChars</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>aacd678921212eb6654d7f704da360361</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getMutexList</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>af3fceb65fc2c22ae8cc3c1df8a503184</anchor>
      <arglist>(CmdLineInterface &amp;_cmd, Arg *a)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOption</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a33903e3aef02f50799726eb7789fb4d4</anchor>
      <arglist>(Arg *it, std::string mutex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printArg</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a1d079ecf271977419432fb0caa72d035</anchor>
      <arglist>(Arg *it)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>common</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a27574842a287e12db5541e464ed93d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>theDelimiter</name>
      <anchorfile>classTCLAP_1_1ZshCompletionOutput.html</anchorfile>
      <anchor>a170dd4ecb233984f3e2b6f853c82b1b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; Vect3D &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01Vect3D_01_4.html</filename>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01Vect3D_01_4.html</anchorfile>
      <anchor>a60dcc1541703118b56d41c353130016b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01Vect3D_01_4.html</anchorfile>
      <anchor>a60dcc1541703118b56d41c353130016b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01Vect3D_01_4.html</anchorfile>
      <anchor>a60dcc1541703118b56d41c353130016b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01Vect3D_01_4.html</anchorfile>
      <anchor>a60dcc1541703118b56d41c353130016b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLAP::ArgTraits&lt; std::vector&lt; double &gt; &gt;</name>
    <filename>structTCLAP_1_1ArgTraits_3_01std_1_1vector_3_01double_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01std_1_1vector_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a33c810bed1086a282167827b8e1cf0ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringLike</type>
      <name>ValueCategory</name>
      <anchorfile>structTCLAP_1_1ArgTraits_3_01std_1_1vector_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a33c810bed1086a282167827b8e1cf0ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>avi/avi/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/avi/avi/</path>
    <filename>dir_ee418b989335ef7dc28531a1758bd5f9.html</filename>
    <file>avi.cpp</file>
    <file>avi.h</file>
    <file>defsg.h</file>
    <file>frame.cpp</file>
    <file>frame.h</file>
    <file>riff.cpp</file>
    <file>riff.h</file>
  </compound>
  <compound kind="dir">
    <name>avi/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/avi/</path>
    <filename>dir_d90425c89382d40ec3f514631abed6aa.html</filename>
    <dir>avi/avi/</dir>
    <dir>avi/testAvi/</dir>
  </compound>
  <compound kind="dir">
    <name>diffusion/bregman/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/diffusion/bregman/</path>
    <filename>dir_7a3b0291c0d76236395a4520d41f62cb.html</filename>
    <file>FlashROF.cpp</file>
    <file>FlashROF.h</file>
  </compound>
  <compound kind="dir">
    <name>image/color/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/color/</path>
    <filename>dir_bc91559c2fb59bbaadc66f5d75d6ef2d.html</filename>
    <file>ChromaticAdaptation.cpp</file>
    <file>ChromaticAdaptation.h</file>
    <file>ColorBalancer.cpp</file>
    <file>ColorBalancer.h</file>
    <file>ColorConstants.cpp</file>
    <file>ColorConstants.h</file>
    <file>ColorValue.cpp</file>
    <file>ColorValue.h</file>
    <file>DistinctColorGenerator.cpp</file>
    <file>DistinctColorGenerator.h</file>
    <file>GretagMacbethColorChecker.cpp</file>
    <file>GretagMacbethColorChecker.h</file>
    <file>ProfileCorrect.cpp</file>
    <file>ProfileCorrect.h</file>
    <file>ProfileData.cpp</file>
    <file>ProfileData.h</file>
    <file>TransformColorSpace.cpp</file>
    <file>TransformColorSpace.h</file>
  </compound>
  <compound kind="dir">
    <name>common/common/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/common/common/</path>
    <filename>dir_5ab4c4806cbbe5a1907c97780e609db2.html</filename>
    <file>Curve.cpp</file>
    <file>Curve.h</file>
    <file>CurveSet.cpp</file>
    <file>CurveSet.h</file>
    <file>Definitions.cpp</file>
    <file>Definitions.h</file>
    <file>DrawFigures.cpp</file>
    <file>DrawFigures.h</file>
    <file>ExecutionTimer.cpp</file>
    <file>ExecutionTimer.h</file>
    <file>FileAccess.cpp</file>
    <file>FileAccess.h</file>
    <file>FitCurve.cpp</file>
    <file>FitCurve.h</file>
    <file>FixedBuffer.cpp</file>
    <file>FixedBuffer.h</file>
    <file>LineSegment.cpp</file>
    <file>LineSegment.h</file>
    <file>MathUtils.cpp</file>
    <file>MathUtils.h</file>
    <file>Point.cpp</file>
    <file>Point.h</file>
    <file>QuantileNormalDistribution.cpp</file>
    <file>QuantileNormalDistribution.h</file>
    <file>Random.cpp</file>
    <file>Random.h</file>
    <file>RectangularROI.cpp</file>
    <file>RectangularROI.h</file>
    <file>Statistics.cpp</file>
    <file>Statistics.h</file>
    <file>StiraMacros.h</file>
    <file>StringUtils.cpp</file>
    <file>StringUtils.h</file>
    <file>TextFileUtils.cpp</file>
    <file>TextFileUtils.h</file>
    <file>TransformCoordinates.cpp</file>
    <file>TransformCoordinates.h</file>
  </compound>
  <compound kind="dir">
    <name>common/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/common/</path>
    <filename>dir_d20ddc75d38873c6f73b1edcb76e8e8a.html</filename>
    <dir>common/common/</dir>
    <dir>common/testCommon/</dir>
    <dir>common/testGeometry/</dir>
    <dir>common/testMath/</dir>
  </compound>
  <compound kind="dir">
    <name>contrastenhance/contrastenhance/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/contrastenhance/contrastenhance/</path>
    <filename>dir_c6a23bd55e4ccb1bc6defc90c2d74a34.html</filename>
    <file>AdaptiveEnhanceLuong.cpp</file>
    <file>AdaptiveEnhanceLuong.h</file>
    <file>HazeRemover.cpp</file>
    <file>HazeRemover.h</file>
    <file>HistogramEqualize.cpp</file>
    <file>HistogramEqualize.h</file>
    <file>Retinex.cpp</file>
    <file>Retinex.h</file>
  </compound>
  <compound kind="dir">
    <name>contrastenhance/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/contrastenhance/</path>
    <filename>dir_18cc8c34cd3723893b31cfbe3faeb003.html</filename>
    <dir>contrastenhance/contrastenhance/</dir>
    <dir>contrastenhance/testContrastEnhance/</dir>
  </compound>
  <compound kind="dir">
    <name>image/datastructures/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/datastructures/</path>
    <filename>dir_4808fda553cd8cf94849b4591d2ef576.html</filename>
    <file>ArrayGrid.cpp</file>
    <file>ArrayGrid.h</file>
    <file>CWTPyramid.cpp</file>
    <file>CWTPyramid.h</file>
    <file>Image.cpp</file>
    <file>Image.h</file>
    <file>LocalOrientation.cpp</file>
    <file>LocalOrientation.h</file>
    <file>OrientationGrid.cpp</file>
    <file>OrientationGrid.h</file>
    <file>Pyramid.cpp</file>
    <file>Pyramid.h</file>
    <file>PyramidLevel.cpp</file>
    <file>PyramidLevel.h</file>
  </compound>
  <compound kind="dir">
    <name>deconvolve/deconvolve/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/deconvolve/deconvolve/</path>
    <filename>dir_6340f32a363f63874dab670ca55e3daf.html</filename>
    <file>DeconvolveMaster.cpp</file>
    <file>DeconvolveMaster.h</file>
    <file>GNCDeconvolve.cpp</file>
    <file>GNCDeconvolve.h</file>
    <file>IterativeDeconvolve.cpp</file>
    <file>IterativeDeconvolve.h</file>
    <file>RichardsonLucyDeconvolve.cpp</file>
    <file>RichardsonLucyDeconvolve.h</file>
    <file>SimulateDegradation.cpp</file>
    <file>SimulateDegradation.h</file>
    <file>TikhonovMillerDeconvolve.cpp</file>
    <file>TikhonovMillerDeconvolve.h</file>
    <file>VanCittertLandweberDeconvolve.cpp</file>
    <file>VanCittertLandweberDeconvolve.h</file>
    <file>WienerDeconvolve.cpp</file>
    <file>WienerDeconvolve.h</file>
  </compound>
  <compound kind="dir">
    <name>deconvolve/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/deconvolve/</path>
    <filename>dir_a97e1e957599cf56d255fd70c9a4d99a.html</filename>
    <dir>deconvolve/deconvolve/</dir>
    <dir>deconvolve/testGNCDeconvolve/</dir>
    <dir>deconvolve/testRichardsonLucy/</dir>
    <dir>deconvolve/testWiener/</dir>
  </compound>
  <compound kind="dir">
    <name>degradationestimation/degradationestimation/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/degradationestimation/degradationestimation/</path>
    <filename>dir_eba0c2017a385c0658dea6eccb343538.html</filename>
    <file>BlurEstimator.cpp</file>
    <file>BlurEstimator.h</file>
    <file>BlurEstimatorHu.cpp</file>
    <file>BlurEstimatorHu.h</file>
    <file>CompareSmoothSharpDijk.cpp</file>
    <file>CompareSmoothSharpDijk.h</file>
  </compound>
  <compound kind="dir">
    <name>degradationestimation/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/degradationestimation/</path>
    <filename>dir_3fd367882c40cf4c00a6110faa63d431.html</filename>
    <dir>degradationestimation/degradationestimation/</dir>
    <dir>degradationestimation/testBlurEstimation/</dir>
    <dir>degradationestimation/testDegradationEstimation/</dir>
  </compound>
  <compound kind="dir">
    <name>diffusion/diffusion/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/diffusion/diffusion/</path>
    <filename>dir_7c4de7e98fde97b27a4993a476d5903e.html</filename>
    <file>AnisotropicDiffusion.cpp</file>
    <file>AnisotropicDiffusion.h</file>
  </compound>
  <compound kind="dir">
    <name>diffusion/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/diffusion/</path>
    <filename>dir_e4e77df6593afb09e9738c4453b81e75.html</filename>
    <dir>diffusion/bregman/</dir>
    <dir>diffusion/diffusion/</dir>
    <dir>diffusion/testBregman/</dir>
    <dir>diffusion/testDiffusion/</dir>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/picanol/tclap/tclap-1.2.1/docs/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/picanol/tclap/tclap-1.2.1/docs/</path>
    <filename>dir_04fd428b1db918626165552cefdfa0d6.html</filename>
    <file>README</file>
  </compound>
  <compound kind="dir">
    <name>experiments/picanol/tclap/tclap-1.2.1/docs/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/picanol/tclap/tclap-1.2.1/docs/</path>
    <filename>dir_7125fdd13e59a06d47fb93ec619046b3.html</filename>
    <file>README</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/picanol/tclap/tclap-1.2.1/examples/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/picanol/tclap/tclap-1.2.1/examples/</path>
    <filename>dir_ada92360cd4d9efc411e6273c3dac651.html</filename>
    <file>test1.cpp</file>
    <file>test10.cpp</file>
    <file>test11.cpp</file>
    <file>test12.cpp</file>
    <file>test13.cpp</file>
    <file>test14.cpp</file>
    <file>test15.cpp</file>
    <file>test16.cpp</file>
    <file>test17-a.cpp</file>
    <file>test17.cpp</file>
    <file>test18.cpp</file>
    <file>test19.cpp</file>
    <file>test2.cpp</file>
    <file>test20.cpp</file>
    <file>test21.cpp</file>
    <file>test3.cpp</file>
    <file>test4.cpp</file>
    <file>test5.cpp</file>
    <file>test6.cpp</file>
    <file>test7.cpp</file>
    <file>test8.cpp</file>
    <file>test9.cpp</file>
  </compound>
  <compound kind="dir">
    <name>experiments/picanol/tclap/tclap-1.2.1/examples/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/picanol/tclap/tclap-1.2.1/examples/</path>
    <filename>dir_bd25299783608e5f4540a6dc4cb1c54f.html</filename>
    <file>test1.cpp</file>
    <file>test10.cpp</file>
    <file>test11.cpp</file>
    <file>test12.cpp</file>
    <file>test13.cpp</file>
    <file>test14.cpp</file>
    <file>test15.cpp</file>
    <file>test16.cpp</file>
    <file>test17-a.cpp</file>
    <file>test17.cpp</file>
    <file>test18.cpp</file>
    <file>test19.cpp</file>
    <file>test2.cpp</file>
    <file>test20.cpp</file>
    <file>test21.cpp</file>
    <file>test3.cpp</file>
    <file>test4.cpp</file>
    <file>test5.cpp</file>
    <file>test6.cpp</file>
    <file>test7.cpp</file>
    <file>test8.cpp</file>
    <file>test9.cpp</file>
  </compound>
  <compound kind="dir">
    <name>experiments/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/</path>
    <filename>dir_387515bdd08a10f060478bcada1db11c.html</filename>
    <dir>experiments/ParameterFileCreator/</dir>
    <dir>experiments/picanol/</dir>
    <dir>experiments/testCameraFlow/</dir>
    <dir>experiments/testCIMI/</dir>
    <dir>experiments/testContour3D/</dir>
    <dir>experiments/testFragments/</dir>
    <dir>experiments/testHorizontalFilter/</dir>
    <dir>experiments/testPicanol/</dir>
    <dir>experiments/yarnprocessing/</dir>
  </compound>
  <compound kind="dir">
    <name>filter/filter/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/filter/filter/</path>
    <filename>dir_45638dbcd47156eef3d73e7078b2f8c6.html</filename>
    <file>AdaptiveBilateralFilter.cpp</file>
    <file>AdaptiveBilateralFilter.h</file>
    <file>anigauss.c</file>
    <file>anigauss.h</file>
    <file>AnisotropicGaussian.cpp</file>
    <file>AnisotropicGaussian.h</file>
    <file>ColorLookupTable.cpp</file>
    <file>ColorLookupTable.h</file>
    <file>DifferenceOfGaussians.cpp</file>
    <file>DifferenceOfGaussians.h</file>
    <file>GaussConvolve.cpp</file>
    <file>GaussConvolve.h</file>
    <file>KuwaharaFilter.cpp</file>
    <file>KuwaharaFilter.h</file>
    <file>LaplacianOfGaussianFilter.cpp</file>
    <file>LaplacianOfGaussianFilter.h</file>
    <file>LocalBinaryPattern.cpp</file>
    <file>LocalBinaryPattern.h</file>
    <file>LogGabor.cpp</file>
    <file>LogGabor.h</file>
    <file>MedianFilter.cpp</file>
    <file>MedianFilter.h</file>
    <file>NonLocalMeansFilter.cpp</file>
    <file>NonLocalMeansFilter.h</file>
    <file>NonSeparableFilter.cpp</file>
    <file>NonSeparableFilter.h</file>
    <file>SeparableFilter.cpp</file>
    <file>SeparableFilter.h</file>
    <file>UnsharpMask.cpp</file>
    <file>UnsharpMask.h</file>
  </compound>
  <compound kind="dir">
    <name>filter/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/filter/</path>
    <filename>dir_a42c8e7fb9dd549e8d8926c4e63f638b.html</filename>
    <dir>filter/filter/</dir>
    <dir>filter/testFilter/</dir>
    <dir>filter/testUnsharpMask/</dir>
  </compound>
  <compound kind="dir">
    <name>fouriertools/fouriertools/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/fouriertools/fouriertools/</path>
    <filename>dir_e3ec26183e390e6bf3d595877ba45e72.html</filename>
    <file>_kiss_fft_guts.h</file>
    <file>FFT.cpp</file>
    <file>FFT.h</file>
    <file>FFTBand.cpp</file>
    <file>FFTBand.h</file>
    <file>FFTCalculator.cpp</file>
    <file>FFTCalculator.h</file>
    <file>FFTWCalculator.cpp</file>
    <file>FFTWCalculator.h</file>
    <file>kiss_fft.c</file>
    <file>kiss_fft.h</file>
    <file>kiss_fftnd.c</file>
    <file>kiss_fftnd.h</file>
    <file>KISSFFTCalculator.cpp</file>
    <file>KISSFFTCalculator.h</file>
    <file>TransferFunctionGenerator.cpp</file>
    <file>TransferFunctionGenerator.h</file>
  </compound>
  <compound kind="dir">
    <name>fouriertools/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/fouriertools/</path>
    <filename>dir_7644265268091528a5bdb1e642a855fe.html</filename>
    <dir>fouriertools/fouriertools/</dir>
    <dir>fouriertools/testFouriertools/</dir>
  </compound>
  <compound kind="dir">
    <name>steerable/freemanadelson/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/steerable/freemanadelson/</path>
    <filename>dir_ba2930650a0072fb40fa0ffa1e0798e5.html</filename>
    <file>BasicFilterKernels.cpp</file>
    <file>BasicFilterKernels.h</file>
    <file>ComputeSteerableFilteredImages.cpp</file>
    <file>ComputeSteerableFilteredImages.h</file>
  </compound>
  <compound kind="dir">
    <name>image/geometrictransform/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/geometrictransform/</path>
    <filename>dir_b82fa85d872ec417a6cae36a4a836546.html</filename>
    <file>AffineTransform.cpp</file>
    <file>AffineTransform.h</file>
    <file>GeometricTransform.cpp</file>
    <file>GeometricTransform.h</file>
    <file>RigidTransform.cpp</file>
    <file>RigidTransform.h</file>
    <file>Translation.cpp</file>
    <file>Translation.h</file>
  </compound>
  <compound kind="dir">
    <name>histogram/histogram/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/histogram/histogram/</path>
    <filename>dir_71cf656a7435972a1041df0e0ae6c2eb.html</filename>
    <file>ConditionalHistogram.cpp</file>
    <file>ConditionalHistogram.h</file>
    <file>FloatHistogram.cpp</file>
    <file>FloatHistogram.h</file>
    <file>HistogramMaster.cpp</file>
    <file>HistogramMaster.h</file>
    <file>IntHistogram.cpp</file>
    <file>IntHistogram.h</file>
    <file>Spatiogram.cpp</file>
    <file>Spatiogram.h</file>
  </compound>
  <compound kind="dir">
    <name>histogram/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/histogram/</path>
    <filename>dir_5954689829ce1b4a8cf6aa388eaaa9ea.html</filename>
    <dir>histogram/histogram/</dir>
    <dir>histogram/testHistogram/</dir>
  </compound>
  <compound kind="dir">
    <name>image/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/</path>
    <filename>dir_3bab7cbe18a87a4ff9b17b05f3b8f52f.html</filename>
    <dir>image/color/</dir>
    <dir>image/datastructures/</dir>
    <dir>image/geometrictransform/</dir>
    <dir>image/testColor/</dir>
    <dir>image/testColorAdaptation/</dir>
    <dir>image/testDrawing/</dir>
    <dir>image/testGrid/</dir>
    <dir>image/testImage/</dir>
    <dir>image/testInterpolate/</dir>
    <dir>image/testNoiseStatistics/</dir>
    <dir>image/testTransformation/</dir>
    <dir>image/testVoronoi/</dir>
    <dir>image/tools/</dir>
  </compound>
  <compound kind="dir">
    <name>imageanalysis/imageanalysis/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/imageanalysis/imageanalysis/</path>
    <filename>dir_03c55a73c4b487358247e5401e1a41b2.html</filename>
    <file>CannyEdgeDetector.cpp</file>
    <file>CannyEdgeDetector.h</file>
    <file>CompareCurvesInImage.cpp</file>
    <file>CompareCurvesInImage.h</file>
    <file>ContourTracing.cpp</file>
    <file>ContourTracing.h</file>
    <file>FloodFill.cpp</file>
    <file>FloodFill.h</file>
    <file>FunctionsOpenCV.cpp</file>
    <file>FunctionsOpenCV.h</file>
    <file>LocalBinaryPattern.cpp</file>
    <file>LocalBinaryPattern.h</file>
    <file>StegerLineDetector.cpp</file>
    <file>StegerLineDetector.h</file>
    <file>Thinning.cpp</file>
    <file>Thinning.h</file>
    <file>Watershed.h</file>
    <file>WatershedMeyer.cpp</file>
    <file>WatershedMeyer.h</file>
    <file>WatershedToboggan.cpp</file>
    <file>WatershedToboggan.h</file>
  </compound>
  <compound kind="dir">
    <name>imageanalysis/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/imageanalysis/</path>
    <filename>dir_2c6be48aa41aa369719946315af06b53.html</filename>
    <dir>imageanalysis/imageanalysis/</dir>
    <dir>imageanalysis/testImageAnalysis/</dir>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/picanol/tclap/tclap-1.2.1/include/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/picanol/tclap/tclap-1.2.1/include/</path>
    <filename>dir_4d345c304d97d02f0eddc86cc7d15cb1.html</filename>
    <dir>experiments/testContour3D/picanol/tclap/tclap-1.2.1/include/tclap/</dir>
  </compound>
  <compound kind="dir">
    <name>experiments/picanol/tclap/tclap-1.2.1/include/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/picanol/tclap/tclap-1.2.1/include/</path>
    <filename>dir_02ec0e0b2e61320351f7ed40ee7039f1.html</filename>
    <dir>experiments/picanol/tclap/tclap-1.2.1/include/tclap/</dir>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/picanol/tclap/tclap-1.2.1/msc/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/picanol/tclap/tclap-1.2.1/msc/</path>
    <filename>dir_5403395e4ff7f1f2afb691f290542ebd.html</filename>
    <file>README</file>
  </compound>
  <compound kind="dir">
    <name>experiments/picanol/tclap/tclap-1.2.1/msc/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/picanol/tclap/tclap-1.2.1/msc/</path>
    <filename>dir_ebc62308ae5ab78af7022ccb48903016.html</filename>
    <file>README</file>
  </compound>
  <compound kind="dir">
    <name>steerable/orientationestimation/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/steerable/orientationestimation/</path>
    <filename>dir_71eb7be98aad993ef8e6c1a17f33672c.html</filename>
    <file>ComputeOrientation.cpp</file>
    <file>ComputeOrientation.h</file>
  </compound>
  <compound kind="dir">
    <name>experiments/ParameterFileCreator/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/ParameterFileCreator/</path>
    <filename>dir_8a4460b27229f960e1fbbadf00ec08f3.html</filename>
    <file>main.cpp</file>
    <file>parameterset.cpp</file>
    <file>parameterset.h</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/picanol/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/picanol/</path>
    <filename>dir_b209b0494b6671cc7442ec7c511e07e5.html</filename>
    <dir>experiments/testContour3D/picanol/tclap/</dir>
    <file>generic_signal.h</file>
    <file>trace.cc</file>
  </compound>
  <compound kind="dir">
    <name>experiments/picanol/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/picanol/</path>
    <filename>dir_43080a7963b0bd6033c0a4d843bb982e.html</filename>
    <dir>experiments/picanol/tclap/</dir>
    <file>generic_signal.h</file>
    <file>trace.cc</file>
  </compound>
  <compound kind="dir">
    <name>steerable/pyramid/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/steerable/pyramid/</path>
    <filename>dir_4adf61cb61abae244be914b017cf14b4.html</filename>
    <file>PyramidComplex.cpp</file>
    <file>PyramidComplex.h</file>
    <file>PyramidMaster.cpp</file>
    <file>PyramidMaster.h</file>
    <file>PyramidReal.cpp</file>
    <file>PyramidReal.h</file>
  </compound>
  <compound kind="dir">
    <name>pyramidapplications/pyramidapplications/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/pyramidapplications/pyramidapplications/</path>
    <filename>dir_3b49601d6dfbdeef45fa58cb39874002.html</filename>
    <file>PyramidContrastEnhancer.cpp</file>
    <file>PyramidContrastEnhancer.h</file>
    <file>PyramidDenoiser.cpp</file>
    <file>PyramidDenoiser.h</file>
    <file>PyramidKeyPointDetector.cpp</file>
    <file>PyramidKeyPointDetector.h</file>
  </compound>
  <compound kind="dir">
    <name>pyramidapplications/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/pyramidapplications/</path>
    <filename>dir_6bcc1333a3fa55a83c6fd3c834d1c81e.html</filename>
    <dir>pyramidapplications/pyramidapplications/</dir>
    <dir>pyramidapplications/testPyramidApplications/</dir>
    <dir>pyramidapplications/testPyramidVideo/</dir>
  </compound>
  <compound kind="dir">
    <name>registration/registration/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/registration/registration/</path>
    <filename>dir_f0f0e0f5b167d2e7980c14575a643f69.html</filename>
    <file>BsplnTrf.c</file>
    <file>BsplnTrf.h</file>
    <file>BsplnWgt.c</file>
    <file>BsplnWgt.h</file>
    <file>convolve.c</file>
    <file>convolve.h</file>
    <file>errorMessage.c</file>
    <file>errorMessage.h</file>
    <file>getPut.c</file>
    <file>getPut.h</file>
    <file>main.c</file>
    <file>phil.h</file>
    <file>pyrFilt.c</file>
    <file>pyrGetSz.c</file>
    <file>quant.c</file>
    <file>quant.h</file>
    <file>reg0.c</file>
    <file>reg0.h</file>
    <file>reg1.c</file>
    <file>reg1.h</file>
    <file>reg2.c</file>
    <file>reg2.h</file>
    <file>reg3.c</file>
    <file>reg3.h</file>
    <file>regFlt3d.c</file>
    <file>regFlt3d.h</file>
    <file>register.h</file>
    <file>RegistrationWrapper.cpp</file>
    <file>RegistrationWrapper.h</file>
    <file>svdcmp.c</file>
    <file>svdcmp.h</file>
  </compound>
  <compound kind="dir">
    <name>registration/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/registration/</path>
    <filename>dir_c132e54ef3a60c3d957e5cca387a596a.html</filename>
    <dir>registration/registration/</dir>
    <dir>registration/testRegistration/</dir>
  </compound>
  <compound kind="dir">
    <name>steerable/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/steerable/</path>
    <filename>dir_d64872036579e298b3187ae269d832d5.html</filename>
    <dir>steerable/freemanadelson/</dir>
    <dir>steerable/orientationestimation/</dir>
    <dir>steerable/pyramid/</dir>
    <dir>steerable/testPyramid/</dir>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/picanol/tclap/tclap-1.2.1/include/tclap/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/picanol/tclap/tclap-1.2.1/include/tclap/</path>
    <filename>dir_ab5773537cd4392ce213726a6fd44b66.html</filename>
    <file>Arg.h</file>
    <file>ArgException.h</file>
    <file>ArgTraits.h</file>
    <file>CmdLine.h</file>
    <file>CmdLineInterface.h</file>
    <file>CmdLineOutput.h</file>
    <file>Constraint.h</file>
    <file>DocBookOutput.h</file>
    <file>HelpVisitor.h</file>
    <file>IgnoreRestVisitor.h</file>
    <file>MultiArg.h</file>
    <file>MultiSwitchArg.h</file>
    <file>OptionalUnlabeledTracker.h</file>
    <file>StandardTraits.h</file>
    <file>StdOutput.h</file>
    <file>SwitchArg.h</file>
    <file>UnlabeledMultiArg.h</file>
    <file>UnlabeledValueArg.h</file>
    <file>ValueArg.h</file>
    <file>ValuesConstraint.h</file>
    <file>VersionVisitor.h</file>
    <file>Visitor.h</file>
    <file>XorHandler.h</file>
    <file>ZshCompletionOutput.h</file>
  </compound>
  <compound kind="dir">
    <name>experiments/picanol/tclap/tclap-1.2.1/include/tclap/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/picanol/tclap/tclap-1.2.1/include/tclap/</path>
    <filename>dir_d4ae187a7da07111d908c0077aae02df.html</filename>
    <file>Arg.h</file>
    <file>ArgException.h</file>
    <file>ArgTraits.h</file>
    <file>CmdLine.h</file>
    <file>CmdLineInterface.h</file>
    <file>CmdLineOutput.h</file>
    <file>Constraint.h</file>
    <file>DocBookOutput.h</file>
    <file>HelpVisitor.h</file>
    <file>IgnoreRestVisitor.h</file>
    <file>MultiArg.h</file>
    <file>MultiSwitchArg.h</file>
    <file>OptionalUnlabeledTracker.h</file>
    <file>StandardTraits.h</file>
    <file>StdOutput.h</file>
    <file>SwitchArg.h</file>
    <file>UnlabeledMultiArg.h</file>
    <file>UnlabeledValueArg.h</file>
    <file>ValueArg.h</file>
    <file>ValuesConstraint.h</file>
    <file>VersionVisitor.h</file>
    <file>Visitor.h</file>
    <file>XorHandler.h</file>
    <file>ZshCompletionOutput.h</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/picanol/tclap/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/picanol/tclap/</path>
    <filename>dir_956b52facf4fe7993cce376723a6607e.html</filename>
    <dir>experiments/testContour3D/picanol/tclap/tclap-1.2.1/</dir>
  </compound>
  <compound kind="dir">
    <name>experiments/picanol/tclap/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/picanol/tclap/</path>
    <filename>dir_62f4f7675f388cc3851182639931da3c.html</filename>
    <dir>experiments/picanol/tclap/tclap-1.2.1/</dir>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/picanol/tclap/tclap-1.2.1/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/picanol/tclap/tclap-1.2.1/</path>
    <filename>dir_9b550ca38879557c0efdb1e8f35f5844.html</filename>
    <dir>experiments/testContour3D/picanol/tclap/tclap-1.2.1/docs/</dir>
    <dir>experiments/testContour3D/picanol/tclap/tclap-1.2.1/examples/</dir>
    <dir>experiments/testContour3D/picanol/tclap/tclap-1.2.1/include/</dir>
    <dir>experiments/testContour3D/picanol/tclap/tclap-1.2.1/msc/</dir>
    <file>README</file>
  </compound>
  <compound kind="dir">
    <name>experiments/picanol/tclap/tclap-1.2.1/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/picanol/tclap/tclap-1.2.1/</path>
    <filename>dir_6ddf58bc8bfcf2a85fad2c016cfc87c6.html</filename>
    <dir>experiments/picanol/tclap/tclap-1.2.1/docs/</dir>
    <dir>experiments/picanol/tclap/tclap-1.2.1/examples/</dir>
    <dir>experiments/picanol/tclap/tclap-1.2.1/include/</dir>
    <dir>experiments/picanol/tclap/tclap-1.2.1/msc/</dir>
    <file>README</file>
  </compound>
  <compound kind="dir">
    <name>avi/testAvi/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/avi/testAvi/</path>
    <filename>dir_760fd7279035dce9972f1d55ca21625b.html</filename>
    <file>testAVI.cpp</file>
  </compound>
  <compound kind="dir">
    <name>degradationestimation/testBlurEstimation/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/degradationestimation/testBlurEstimation/</path>
    <filename>dir_07b073439685e37fd7896b6084c33696.html</filename>
    <file>testBlurEstimation.cpp</file>
  </compound>
  <compound kind="dir">
    <name>diffusion/testBregman/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/diffusion/testBregman/</path>
    <filename>dir_c0f362522dae1b684cf9f0136c6faff1.html</filename>
    <file>Example.cpp</file>
    <file>Example.h</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testCameraFlow/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testCameraFlow/</path>
    <filename>dir_f6b48e73c6b67804cea5b8c687ef261e.html</filename>
    <file>capture.h</file>
    <file>deviceinfo.cpp</file>
    <file>deviceinfo.h</file>
    <file>GetPictures.cpp</file>
    <file>GetPictures.h</file>
    <file>main.cpp</file>
    <file>saveRAW.cpp</file>
    <file>saveRAW.h</file>
    <file>USBcamera.cpp</file>
    <file>USBcamera.h</file>
    <file>vrmusbcam.h</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testCIMI/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testCIMI/</path>
    <filename>dir_d42226a968630964146f4e87b9b9b5dd.html</filename>
    <file>testCIMI.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testColor/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testColor/</path>
    <filename>dir_c28d5caf15752a30ce4f11f69d7aa13c.html</filename>
    <file>testColor.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testColorAdaptation/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testColorAdaptation/</path>
    <filename>dir_c090da6e934aff761391789ef8b26b5f.html</filename>
    <file>testColorAdaptation.cpp</file>
  </compound>
  <compound kind="dir">
    <name>common/testCommon/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/common/testCommon/</path>
    <filename>dir_13f1d57cd6b2be3435323ea5a7cbe446.html</filename>
    <file>testCommon.cpp</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testContour3D/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testContour3D/</path>
    <filename>dir_96463c899ef0754eae3579344064bbf9.html</filename>
    <dir>experiments/testContour3D/picanol/</dir>
  </compound>
  <compound kind="dir">
    <name>contrastenhance/testContrastEnhance/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/contrastenhance/testContrastEnhance/</path>
    <filename>dir_cd36f391844aaacd514f540102edfefb.html</filename>
    <file>testContrastEnhance.cpp</file>
  </compound>
  <compound kind="dir">
    <name>degradationestimation/testDegradationEstimation/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/degradationestimation/testDegradationEstimation/</path>
    <filename>dir_93783202abdc3509c1fb56c0a818293a.html</filename>
    <file>testDegradationEstimation.cpp</file>
  </compound>
  <compound kind="dir">
    <name>diffusion/testDiffusion/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/diffusion/testDiffusion/</path>
    <filename>dir_900d33873e21be80582dc6319572578a.html</filename>
    <file>testDiffusion.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testDrawing/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testDrawing/</path>
    <filename>dir_d14fdb64ce73f6c950e81bc1353b6368.html</filename>
    <file>testDrawing.cpp</file>
  </compound>
  <compound kind="dir">
    <name>filter/testFilter/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/filter/testFilter/</path>
    <filename>dir_c3f626af18f6b6c71ed79ef31c35185a.html</filename>
    <file>filterTest.cpp</file>
  </compound>
  <compound kind="dir">
    <name>fouriertools/testFouriertools/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/fouriertools/testFouriertools/</path>
    <filename>dir_1b1ea003cfb1476e5ae5a62c38e34542.html</filename>
    <file>testFouriertools.cpp</file>
    <file>testFouriertools.h</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testFragments/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testFragments/</path>
    <filename>dir_4230c2c4fb37cc130b02930a27a25d88.html</filename>
    <file>testFragments.cpp</file>
  </compound>
  <compound kind="dir">
    <name>common/testGeometry/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/common/testGeometry/</path>
    <filename>dir_35c220bacc3c247bff9a23078b1e2290.html</filename>
    <file>testGeometry.cpp</file>
  </compound>
  <compound kind="dir">
    <name>deconvolve/testGNCDeconvolve/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/deconvolve/testGNCDeconvolve/</path>
    <filename>dir_18af68c0efd82d14c9a06ea2cba17a0a.html</filename>
    <file>testGNCDeconvolve.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testGrid/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testGrid/</path>
    <filename>dir_72a58c6a2a50f87055d0d4db2ed44a43.html</filename>
    <file>testGrid.cpp</file>
    <file>testGrid.h</file>
  </compound>
  <compound kind="dir">
    <name>histogram/testHistogram/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/histogram/testHistogram/</path>
    <filename>dir_74d2ef5ceb7474fa74e9bacf5834468d.html</filename>
    <file>testHistogram.cpp</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testHorizontalFilter/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testHorizontalFilter/</path>
    <filename>dir_d8840b7304daa040c5869057955f0b6c.html</filename>
    <file>README</file>
    <file>svm_example.m</file>
    <file>testHorizontalFilter.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testImage/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testImage/</path>
    <filename>dir_5bd9a14a5505b870dfab84835425cc4d.html</filename>
    <file>testImage.cpp</file>
  </compound>
  <compound kind="dir">
    <name>imageanalysis/testImageAnalysis/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/imageanalysis/testImageAnalysis/</path>
    <filename>dir_5279c0145b7cfb61469f752d60ede765.html</filename>
    <file>testImageAnalysis.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testInterpolate/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testInterpolate/</path>
    <filename>dir_a0efd5d6015fd434ddb9b3c426ea5441.html</filename>
    <file>testInterpolate.cpp</file>
    <file>testInterpolate.h</file>
  </compound>
  <compound kind="dir">
    <name>common/testMath/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/common/testMath/</path>
    <filename>dir_6dedd03ba164da17eca657675fcb7895.html</filename>
    <file>testMath.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testNoiseStatistics/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testNoiseStatistics/</path>
    <filename>dir_b2a957c34a9b64d99f948e15b008baac.html</filename>
    <file>testNoiseStatistics.cpp</file>
  </compound>
  <compound kind="dir">
    <name>experiments/testPicanol/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/testPicanol/</path>
    <filename>dir_0d1f4781005fb09642a53047daa4d77e.html</filename>
    <file>BatchParameters.cpp</file>
    <file>BatchParameters.h</file>
    <file>ScanDirTest.cpp</file>
    <file>testPicanol.cpp</file>
  </compound>
  <compound kind="dir">
    <name>steerable/testPyramid/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/steerable/testPyramid/</path>
    <filename>dir_3ef66cb2ce591a4832df7958a15c7ef2.html</filename>
    <file>testPyramid.cpp</file>
  </compound>
  <compound kind="dir">
    <name>pyramidapplications/testPyramidApplications/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/pyramidapplications/testPyramidApplications/</path>
    <filename>dir_aaf1aadfb2aac19a335c180aca3d0962.html</filename>
    <file>testPyramidApplications.cpp</file>
  </compound>
  <compound kind="dir">
    <name>pyramidapplications/testPyramidVideo/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/pyramidapplications/testPyramidVideo/</path>
    <filename>dir_0dc100f2d202a851c67b5a3e92b92bc4.html</filename>
    <file>testPyramidVideo.cpp</file>
  </compound>
  <compound kind="dir">
    <name>registration/testRegistration/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/registration/testRegistration/</path>
    <filename>dir_0922a3bdfb854beca810891763bcc3e8.html</filename>
    <file>testRegistration.cpp</file>
  </compound>
  <compound kind="dir">
    <name>deconvolve/testRichardsonLucy/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/deconvolve/testRichardsonLucy/</path>
    <filename>dir_aac81bd9dd19f23134b35b81b1140d5c.html</filename>
    <file>testRichardsonLucy.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testTransformation/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testTransformation/</path>
    <filename>dir_63e13de3e9e5333146035cec9d7fe1db.html</filename>
    <file>testTransformation.cpp</file>
  </compound>
  <compound kind="dir">
    <name>filter/testUnsharpMask/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/filter/testUnsharpMask/</path>
    <filename>dir_a54b2c0e28cff111479f837617348bdb.html</filename>
    <file>unsharpMaskTest.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/testVoronoi/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/testVoronoi/</path>
    <filename>dir_76e08cfc3bf2898476efcea064eef9fd.html</filename>
    <file>testVoronoi.cpp</file>
  </compound>
  <compound kind="dir">
    <name>wavelet/testWavelet/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/wavelet/testWavelet/</path>
    <filename>dir_16b57be785920318f3d856916c4ce566.html</filename>
    <file>testWavelet.cpp</file>
  </compound>
  <compound kind="dir">
    <name>deconvolve/testWiener/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/deconvolve/testWiener/</path>
    <filename>dir_ad20a62b8d9bef61047ec4d758e0f87f.html</filename>
    <file>testWiener.cpp</file>
  </compound>
  <compound kind="dir">
    <name>image/tools/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/image/tools/</path>
    <filename>dir_b241e6eb3fac7c88b77b3eea082684d7.html</filename>
    <file>ArrayGridTools.cpp</file>
    <file>ArrayGridTools.h</file>
    <file>BilinearInterpolator.cpp</file>
    <file>BilinearInterpolator.h</file>
    <file>DrawImageTools.cpp</file>
    <file>DrawImageTools.h</file>
    <file>GenerateFractal.cpp</file>
    <file>GenerateFractal.h</file>
    <file>GridConverter.cpp</file>
    <file>GridConverter.h</file>
    <file>GridExtender.cpp</file>
    <file>GridExtender.h</file>
    <file>GridGenerator.cpp</file>
    <file>GridGenerator.h</file>
    <file>ImageIO.cpp</file>
    <file>ImageIO.h</file>
    <file>ImageTools.cpp</file>
    <file>ImageTools.h</file>
    <file>Interpolator.cpp</file>
    <file>Interpolator.h</file>
    <file>NearestNeighborInterpolator.cpp</file>
    <file>NearestNeighborInterpolator.h</file>
    <file>NumberGridTools.cpp</file>
    <file>NumberGridTools.h</file>
    <file>PerlinNoise.cpp</file>
    <file>PerlinNoise.h</file>
    <file>PyramidTools.cpp</file>
    <file>PyramidTools.h</file>
    <file>VoronoiDiagramGenerator.cpp</file>
    <file>VoronoiDiagramGenerator.h</file>
  </compound>
  <compound kind="dir">
    <name>wavelet/wavelet/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/wavelet/wavelet/</path>
    <filename>dir_20e30d0ecd07d05deda4d058ab5e7e2a.html</filename>
    <file>CriticallySubsampledTransform.cpp</file>
    <file>CriticallySubsampledTransform.h</file>
    <file>NoiseEstimator.cpp</file>
    <file>NoiseEstimator.h</file>
    <file>NonSubsampledTransform.cpp</file>
    <file>NonSubsampledTransform.h</file>
    <file>SubsampledTransform.cpp</file>
    <file>SubsampledTransform.h</file>
    <file>Wavelet.cpp</file>
    <file>Wavelet.h</file>
    <file>WaveletTapGenerator.cpp</file>
    <file>WaveletTapGenerator.h</file>
    <file>WaveletTaps.h</file>
  </compound>
  <compound kind="dir">
    <name>wavelet/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/wavelet/</path>
    <filename>dir_72f60345761d8a1e045c547eea312502.html</filename>
    <dir>wavelet/testWavelet/</dir>
    <dir>wavelet/wavelet/</dir>
  </compound>
  <compound kind="dir">
    <name>experiments/yarnprocessing/</name>
    <path>/net/glfs/research/frooms/develop/stira-env/stira/experiments/yarnprocessing/</path>
    <filename>dir_52308d46974a759c9b2d0298b364c039.html</filename>
    <file>BatchParameters.cpp</file>
    <file>BatchParameters.h</file>
    <file>LineProcessing.cpp</file>
    <file>LineProcessing.h</file>
    <file>RecursiveLeastSquares.cpp</file>
    <file>RecursiveLeastSquares.h</file>
    <file>ResultReporter.cpp</file>
    <file>ResultReporter.h</file>
    <file>sqlite3.c</file>
    <file>sqlite3.h</file>
    <file>YarnModel.cpp</file>
    <file>YarnModel.h</file>
    <file>YarnProcessor.cpp</file>
    <file>YarnProcessor.h</file>
    <file>YarnResults.cpp</file>
    <file>YarnResults.h</file>
    <file>YarnRunLengthHistogram.cpp</file>
    <file>YarnRunLengthHistogram.h</file>
    <file>YarnTrainer.cpp</file>
    <file>YarnTrainer.h</file>
  </compound>
</tagfile>
